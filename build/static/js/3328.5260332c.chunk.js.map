{"version":3,"file":"static/js/3328.5260332c.chunk.js","mappings":"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","sources":["UI/Legend/LegendItem/index.jsx","UI/Legend/index.jsx","UI/Legend/style.js","UI/Progress/index.jsx","UI/Select/style.js","UI/Select/index.jsx","components/CartesianChart/index.jsx","utils/recharts.js","components/Chart/Labels/index.jsx","components/Chart/Tooltip/index.jsx","components/PeriodNav/index.jsx","components/Widget/WidgetBody/index.jsx","components/Widget/WidgetNav/index.jsx","constants/colors.js","constants/options.js","hooks/usePeriodNav.js","widgets/TaskScheduler/style.js","db/scheduler.js","widgets/BloodTest/index.jsx","pages/UpcommingDashboard.jsx","pages/MyClinicInformation.jsx","pages/MyFile.jsx","pages/DashboardD.jsx","widgets/ConfirmedDiagnoses/List/style.js","widgets/EventsCompactCalendar/style.js","widgets/RadarAreaChart/index.jsx"],"sourcesContent":["// styled components\nimport {ListItem} from '../style';\nimport {LegendBadge} from '@ui/Badge/style';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst LegendItem = ({color, legend}) => {\n    return (\n        <ListItem>\n            <LegendBadge color={color} /> {legend}\n        </ListItem>\n    )\n}\n\nLegendItem.propTypes = {\n    color: PropTypes.string.isRequired,\n    legend: PropTypes.string.isRequired\n}\n\nexport default LegendItem;","// styled components\nimport {List} from './style';\n\n// utils\nimport PropTypes from \"prop-types\";\n\nconst Legend = ({children, overlay}) => {\n    return <List overlay={overlay}>{children}</List>\n}\n\nLegend.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n    overlay: PropTypes.bool,\n}\n\nexport default Legend;","import styled from 'styled-components/macro';\nimport {textSizes, fonts} from '@styles/vars';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px 16px;\n  ${props => props.overlay && `\n    position: absolute;\n    bottom: 22px;\n    left: 24px\n  `}\n`\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  text-transform: uppercase;\n  font-family: ${fonts.accent};\n  font-size: ${textSizes['10']};\n`","// styling\nimport {dark, colors} from '@styles/vars';\n\n// components\nimport LinearProgress from '@mui/material/LinearProgress';\n\n// hooks\nimport {useTheme} from 'styled-components';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst Progress = ({color = colors.blue, value, style = {}}) => {\n    const {theme} = useTheme();\n\n    return <LinearProgress className=\"progressbar\"\n                           variant=\"determinate\"\n                           aria-label={value}\n                           value={value}\n                           sx={{\n                               backgroundColor: theme === 'light' ? '#E4EAF0' : dark.highlight,\n                               height: 6,\n                               borderRadius: 2,\n                               ...style,\n\n                               '& .MuiLinearProgress-bar': {\n                                   backgroundColor: color,\n                                   borderRadius: 2,\n                               }\n                           }}/>\n}\n\nProgress.propTypes = {\n    color: PropTypes.string,\n    value: PropTypes.number.isRequired,\n    style: PropTypes.object,\n}\n\nexport default Progress;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {textSizes, light, dark, colors, fonts, breakpoints} from '@styles/vars';\nimport {fadeIn} from '@styles/keyframes';\nimport Select from 'react-select';\n\nconst basicBg = theme('theme', {\n    light: light.highlight,\n    dark: dark.highlight,\n})\n\nconst basicColor = theme('theme', {\n    light: light.text,\n    dark: dark.text,\n})\n\nconst NormalizedSelect = styled(Select)`\n  .Select {\n    &__control {\n      cursor: pointer;\n      transition: var(--transition);\n      border: none;\n      background-color: ${basicBg};\n      border-radius: 8px;\n      font-size: ${textSizes['16']};\n      height: 40px;\n      padding-right: 16px;\n\n      &--is-focused, &:hover {\n        outline: none;\n      }\n\n      &--is-focused, &--is-focused:hover {\n        box-shadow: 0 0 0 2px ${colors.blue} !important;\n      }\n\n      &:hover {\n        box-shadow: ${theme('theme', {\n          light: `0 0 0 2px #A2C0D4`,\n          dark: `0 0 0 2px ${colors.dark}`\n        })};\n      }\n\n      .icon {\n        transition: .3s ease-in-out;\n        color: ${theme('theme', {\n          light: '#A2C0D4',\n          dark: colors.gray,\n        })};\n        font-size: ${textSizes['12']};\n      }\n    }\n\n    &__menu {\n      min-width: max-content;\n      width: 100%;\n      color: ${basicColor};\n      background-color: ${basicBg};\n      border-radius: 8px;\n      animation: ${fadeIn} var(--transition);\n      z-index: 100;\n\n      &-list {\n        max-height: 180px;\n        overflow-y: auto;\n        scroll-behavior: smooth;\n        z-index: 100;\n      }\n    }\n\n    &__indicator, &__indicator-separator {\n      display: none;\n    }\n\n    &__option {\n      cursor: pointer;\n      transition: var(--transition);\n\n      &:hover,\n      &--is-focused,\n      &--is-selected {\n        background: transparent;\n        color: ${colors.blue};\n      }\n    }\n\n    &__single-value {\n      color: ${theme('theme', {\n        light: light.text,\n        dark: dark.text,\n      })};\n    }\n  }\n`;\n\nexport const Basic = styled(NormalizedSelect)`\n  .Select {\n    &__control {\n      font-size: ${textSizes['14']};\n    }\n\n    &__input-container {\n      color: ${basicColor};\n    }\n\n    &__value-container {\n      padding: 0 16px;\n    }\n  }\n`;\n\nexport const Minimal = styled(NormalizedSelect)`\n  .Select {\n    &__control {\n      background-color: transparent;\n      width: fit-content;\n      font-weight: 500;\n      font-family: ${fonts.accent};\n      border-radius: 0;\n      height: unset;\n      padding: 0;\n      font-size: ${textSizes['18']};\n\n      &--is-focused, &:hover {\n        box-shadow: none !important;\n      }\n    }\n\n    &__value-container {\n      padding: 0 20px 0 0;\n    }\n  }\n\n  ${breakpoints.tablet} {\n    .Select__control {\n      font-size: ${textSizes['20']};\n    }\n  }\n`;\n\nexport const User = styled(NormalizedSelect)`\n  .Select {\n    &__control {\n      &--is-focused, &:hover {\n        box-shadow: none !important;\n      }\n    }\n\n    &__input-container {\n      padding-left: 16px;\n      color: inherit;\n    }\n\n    &__value-container {\n      padding: 0 16px 0 0;\n    }\n\n    &__value-container,\n    &__option {\n      .user-option {\n        display: flex;\n        align-items: center;\n        gap: 10px;\n        color: inherit;\n      }\n    }\n  }\n`;","// styled components\nimport {Basic, Minimal, User} from './style';\n\n// utils\nimport PropTypes from 'prop-types';\nimport {components} from 'react-select';\n\n// hooks\nimport {useEffect, useState} from 'react';\n\nconst CustomSelect = ({label, options, variant, value, changeHandler, placeholder}) => {\n    // automatically select the first option if no placeholder is provided\n    useEffect(() => {\n        if (!placeholder && value === null) {\n            changeHandler(options[0]);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const [uniqueId] = useState(\n        () => 'select_' + Math.random().toFixed(5).slice(2),\n    );\n\n    const Control = ({children, ...props}) => (\n        <components.Control {...props}>\n            {children}\n            <i className={`icon icon-${variant === 'minimal' ? 'caret' : 'chevron'}-down`}></i>\n        </components.Control>\n    );\n\n    const commonProps = {\n        classNamePrefix: 'Select',\n        inputId: label,\n        isSearchable: variant !== 'user',\n        options: options,\n        value: value,\n        onChange: changeHandler,\n        placeholder: placeholder,\n        openMenuOnFocus: true,\n        components: {\n            Control: Control,\n            Menu: (props) => <components.Menu {...props} className=\"menu\">\n                {props.children}\n            </components.Menu>\n        },\n        id: uniqueId,\n        blurInputOnSelect: true,\n        className: `select-${variant}`\n    }\n\n    switch (variant) {\n        default:\n        case 'basic': {\n            return <Basic {...commonProps} />;\n        }\n        case 'minimal': {\n            return <Minimal {...commonProps} />;\n        }\n        case 'user': {\n            return <User {...commonProps} />;\n        }\n    }\n}\n\nCustomSelect.propTypes = {\n    options: PropTypes.any,\n    variant: PropTypes.oneOf(['minimal', 'basic', 'user']).isRequired,\n    value: PropTypes.any,\n    changeHandler: PropTypes.func,\n    placeholder: PropTypes.string\n}\n\nexport default CustomSelect;","// styling\nimport {colors} from '@styles/vars';\nimport {StyledTooltip} from '@components/Chart/Tooltip';\n\n// components\nimport {LineChart, Line, ResponsiveContainer, CartesianGrid, AreaChart, Area, Tooltip} from 'recharts';\n\n// hooks\nimport {useTheme} from 'styled-components';\nimport {useLayoutEffect, useState} from 'react';\nimport useWindowSize from '@hooks/useWindowSize';\n\n// utils\nimport {generateGridPoints} from '@utils/recharts';\n\nconst CartesianChart = ({variant, id, data, elems, ...props}) => {\n    const {width} = useWindowSize();\n    const {theme} = useTheme();\n    const [points, setPoints] = useState([]);\n    const isTablet = width >= 768;\n\n    // generate grid points based on the container width\n    useLayoutEffect(() => {\n        setPoints(generateGridPoints(id));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [width]);\n\n    // custom tooltip\n    const renderTooltip = (props) => {\n        const {active, payload} = props;\n        if (active && payload && payload.length) {\n            return (\n                <StyledTooltip className=\"multiple\">\n                    {payload.map((item, index) => (\n                        <div className=\"item\" key={index}>\n                            <div className=\"color\" style={{background: item.stroke}} />\n                            <div className=\"value\">{item.value}</div>\n                        </div>\n                    ))}\n                </StyledTooltip>\n            );\n        }\n        return null;\n    }\n\n    return (\n        <ResponsiveContainer height={isTablet ? '100%' : props.height} width=\"100%\" id={id}>\n            {\n                variant === 'line' ?\n                    <LineChart margin={false} data={data} {...props}>\n                        <defs>\n                            <linearGradient id=\"dark\"\n                                            x1=\"0.00669497\"\n                                            y1=\"1\"\n                                            x2=\"0.00669497\"\n                                            y2=\"327.445\"\n                                            gradientUnits=\"userSpaceOnUse\"\n                            >\n                                <stop stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.512299\" stopColor={colors.dark}/>\n                                <stop offset=\"0.99905\" stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                            <linearGradient id=\"light\"\n                                            x1=\"0.00385257\"\n                                            y1=\"1\"\n                                            x2=\"0.00385257\"\n                                            y2=\"328.377\"\n                                            gradientUnits=\"userSpaceOnUse\">\n                                <stop stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.504355\" stopColor={colors.light_gray}/>\n                                <stop offset=\"0.99905\" stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                        </defs>\n                        <CartesianGrid stroke={`url(#${theme === 'dark' ? 'dark' : 'light'})`}\n                                       strokeDasharray=\"6\"\n                                       strokeLinecap=\"square\"\n                                       horizontal={false}\n                                       verticalPoints={points}\n                                       width=\"100%\"\n                                       height=\"100%\"\n                        />\n                        {\n                            elems.map(el => {\n                                return <Line key={el.dataKey} {...el} />\n                            })\n                        }\n                        <Tooltip cursor={false} content={renderTooltip} />\n                    </LineChart>\n                    :\n                    <AreaChart margin={{ top: 5 }} data={data} {...props}>\n                        <defs>\n                            <linearGradient id=\"dark\"\n                                            x1=\"0.00669497\"\n                                            y1=\"1\"\n                                            x2=\"0.00669497\"\n                                            y2=\"327.445\"\n                                            gradientUnits=\"userSpaceOnUse\"\n                            >\n                                <stop stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.512299\" stopColor={colors.dark}/>\n                                <stop offset=\"0.99905\" stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                            <linearGradient id=\"light\"\n                                            x1=\"0.00385257\"\n                                            y1=\"1\"\n                                            x2=\"0.00385257\"\n                                            y2=\"328.377\"\n                                            gradientUnits=\"userSpaceOnUse\">\n                                <stop stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.504355\" stopColor={colors.light_gray}/>\n                                <stop offset=\"0.99905\" stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                            {props.children}\n                        </defs>\n                        <CartesianGrid stroke={`url(#${theme === 'dark' ? 'dark' : 'light'})`}\n                                       strokeDasharray=\"6\"\n                                       strokeLinecap=\"square\"\n                                       horizontal={false}\n                                       verticalPoints={points}\n                                       width=\"100%\"\n                                       height=\"100%\"\n                        />\n                        {\n                            elems.map(el => {\n                                return <Area key={el.dataKey} {...el} />\n                            })\n                        }\n                        <Tooltip cursor={false} content={renderTooltip} />\n                    </AreaChart>\n            }\n        </ResponsiveContainer>\n    )\n}\n\nexport default CartesianChart;","// cartesian grid points generator\nexport const generateGridPoints = (id, gutter = 20) => {\n    const gridWidth = document.getElementById(id).offsetWidth;\n\n    let points = [];\n    for (let i = 0; i < gridWidth; i += gutter) {\n        points.push(i);\n    }\n    return points;\n}","import styled from 'styled-components/macro';\nimport {flex, fonts, textSizes} from '@styles/vars';\n\nconst Labels = styled.div`\n  text-transform: uppercase;\n  margin: 0 24px;\n  display: flex;\n  ${flex.between}\n  font-family: ${fonts.accent};\n  font-size: ${textSizes['10']};\n`\n\nexport default Labels","// styling\nimport styled from 'styled-components/macro';\nimport {light, textSizes, fonts, flex} from '@styles/vars';\n\nexport const StyledTooltip = styled.div`\n  font-family: ${fonts.accent};\n  font-size: ${textSizes['10']};\n  color: #fff;\n  box-shadow: 0 1px 8px rgba(65, 77, 85, 0.4);\n  border-radius: 8px;\n  background-color: ${light.text};\n  height: 20px;\n  padding: 0 8px;\n  display: flex;\n  ${flex.center}\n  line-height: 1;\n  position: relative;\n  text-transform: uppercase;\n  \n  &.multiple {\n    flex-direction: column;\n    gap: 10px;\n    padding: 10px;\n    height: auto;\n    \n    .item {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      \n      .color {\n        width: 6px;\n        height: 6px;\n        border-radius: 50%;\n      }\n    }\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    left: 50%;\n    bottom: -3px;\n    transform: translateX(-50%) rotate(-45deg);\n    width: 8px;\n    height: 8px;\n    background-color: ${light.text};\n    display: ${props => props.arrow ? 'block' : 'none'};\n  }\n`;\n\nconst ChartTooltip = ({active, payload, tooltip, arrow = false, multi = false, ...props}) => {\n    if (multi) {\n        if (!active || !tooltip) return null\n        for (const item of payload)\n            if (item.dataKey === tooltip)\n                return <StyledTooltip arrow={arrow}>{item.value}</StyledTooltip>\n        return null\n    } else {\n        if (!active || !payload[0]) return null\n        return (\n            <StyledTooltip arrow={arrow}> {payload[0].value} {props.right && payload[0].dataKey}</StyledTooltip>\n        )\n    }\n}\n\nexport default ChartTooltip;\n","// styled components\nimport {Container, Item, Button} from '@ui/TabNav/style';\n\n// hooks\nimport usePeriodNav from '@hooks/usePeriodNav';\n\n// utils\nimport {nanoid} from 'nanoid';\n\nconst PeriodNav = ({current, handler}) => {\n    const {periods} = usePeriodNav();\n\n    return (\n        <Container>\n            {\n                periods.map(p =>\n                    <Item key={nanoid(4)}>\n                        <Button className={current === p && 'active'} onClick={() => handler(p)}>{p}</Button>\n                    </Item>\n                )\n            }\n        </Container>\n    )\n}\n\nexport default PeriodNav;","// styled components\nimport {Body} from '../style';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst WidgetBody = ({children, style, sidePadding = false, elRef, ...props}) => {\n    return <Body ref={elRef} sidePadding={sidePadding} style={style} {...props}>{children}</Body>\n}\n\nWidgetBody.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n    sidePadding: PropTypes.bool,\n    style: PropTypes.any,\n}\n\nexport default WidgetBody;","// styled components\nimport {Nav} from '../style';\n\n// components\nimport WidgetHeader from '../WidgetHeader';\n\n// utils\nimport PropTypes from \"prop-types\";\n\nconst WidgetNav = ({title, handler, sidePadding, children, disabled, ...props}) => {\n    return (\n        <WidgetHeader title={title} sidePadding={sidePadding} style={props.style} className=\"nav\">\n            <Nav>\n                <button onClick={handler} data-direction=\"prev\" className={disabled ? 'disabled' : ''} aria-label=\"Previous\">\n                    <i className=\"icon icon-chevron-left\"/>\n                </button>\n                <button onClick={handler} data-direction=\"next\" className={disabled ? 'disabled' : ''} aria-label=\"Next\">\n                    <i className=\"icon icon-chevron-right\"/>\n                </button>\n            </Nav>\n            {children}\n        </WidgetHeader>\n    )\n}\n\nWidgetNav.propTypes = {\n    title: PropTypes.string.isRequired,\n    handler: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n}\n\nexport default WidgetNav;","export const colorTypes = [\n    {cat: 'emergency', label: 'Emergency', color: 'red'},\n    {cat: 'consultation', label: 'Consultation', color: 'azure'},\n    {cat: 'test', label: 'Examination', color: 'teal'},\n    {cat: 'checkup', label: 'Routine checkup', color: 'purple'},\n    {cat: 'sick', label: 'Sick visit', color: 'orange'},\n];\n\nexport const tasksColors = [\n    {cat: 'work', color: 'teal'},\n    {cat: 'travel', color: 'orange'},\n    {cat: 'family', color: 'azure'},\n    {cat: 'other', color: 'purple'}\n]","import {doctors} from '@db/doctors';\nimport Avatar from '@ui/Avatar';\n\nexport const tasksOptions = [\n    {value: 'work', label: 'Work'},\n    {value: 'travel', label: 'Travel'},\n    {value: 'family', label: 'Family'},\n    {value: 'other', label: 'Other'}\n]\n\nexport const depsOptions = [\n    {value: 'all', label: 'All Departments'},\n    {value: 'family', label: 'Family Doctors'},\n    {value: 'therapy', label: 'Therapists'},\n    {value: 'dent', label: 'Dentists'},\n    {value: 'cardio', label: 'Cardiologists'},\n]\n\nexport const testsOptions = [\n    {value: 'all', label: 'All My Tests'},\n    {value: 'blood', label: 'Blood Count'},\n    {value: 'xray', label: 'X-Ray'},\n    {value: 'ecg', label: 'ECG'},\n    {value: 'ct', label: 'CT Scan'},\n    {value: 'mri', label: 'MRI'},\n    {value: 'ultrasound', label: 'Ultrasound'},\n    {value: 'prenatal', label: 'Prenatal Testing'},\n]\n\nexport const doctorsOptions = () => {\n    let options = [];\n    doctors.forEach(doctor => {\n        options.push({\n            value: doctor.id,\n            label: <div className=\"user-option\">\n                <Avatar avatar={doctor.avatar} alt={doctor.name} size={40} />\n                <span>{doctor.name}</span>\n            </div>\n        });\n    });\n    return options;\n}","import {useState} from 'react';\n\nconst usePeriodNav = () => {\n    const periods = ['year', 'month', 'week'];\n    const [period, setPeriod] = useState(periods[0]);\n    const setPeriodIndex = (index) => setPeriod(periods[index]);\n\n    return {period, periods, setPeriod, setPeriodIndex};\n}\n\nexport default usePeriodNav;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {light, dark, textSizes, colors, breakpoints, flex, fonts} from '@styles/vars';\nimport {EventsCalendar} from '@widgets/EventsCompactCalendar/style';\n\nexport const MonthSelector = styled.div`\n  position: relative;\n  background-color: ${theme('theme', {\n    light: light.bodyBg,\n    dark: dark.bodyBg\n  })};\n  height: 80px;\n  margin: 0 -22px 20px;\n  border-radius: 8px;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n\n  .list-item {\n    width: fit-content !important;\n  }\n\n  .navigation {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 1;\n\n    &:before, &:after {\n      content: '';\n      position: absolute;\n      top: 0;\n      background: ${theme('theme', {\n        light: 'linear-gradient(90deg, #F1F5F8 0%, rgba(241, 245, 248, 0.0001) 100%)',\n        dark: 'linear-gradient(90deg, #090A0A 0%, rgba(9, 10, 10, 0.0001) 100%)'\n      })};\n      height: 100%;\n      width: 100px;\n      filter: blur(1px);\n      display: block;\n    }\n\n    &:before {\n      left: 2px;\n    }\n\n    &:after {\n      right: 2px;\n      transform: scaleX(-1);\n    }\n\n    button {\n      font-size: ${textSizes['12']};\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      width: 32px;\n      height: 32px;\n      border-radius: 50%;\n      background-color: ${colors.blue};\n      color: #fff;\n      z-index: 2000;\n      ${flex.col};\n      ${flex.center};\n      opacity: .7;\n      transition: opacity var(--transition);\n\n      &[data-direction=\"prev\"] {\n        left: 16px;\n      }\n\n      &[data-direction=\"next\"] {\n        right: 16px;\n      }\n\n      &:hover {\n        opacity: 1;\n      }\n    }\n  }\n\n  .list {\n    display: flex;\n    align-items: center;\n    pointer-events: none;\n    gap: 12px;\n    padding: 0 16px;\n    overflow-x: auto;\n\n    &-item {\n      padding: 10px;\n      border-radius: 8px;\n      transition: background-color var(--transition), color var(--transition);\n\n      &.active {\n        color: ${colors.blue};\n        background-color: ${theme('theme', {\n          light: light.widgetBg,\n          dark: dark.widgetBg\n        })};\n      }\n    }\n  }\n`;\n\nexport const CalendarWrapper = styled.div`\n  height: 100%;\n  position: relative;\n\n  .popup {\n    position: absolute;\n    top: calc(50% + ${props => props.top}px + 80px);\n    left: 50%;\n    transform: translate(-50%, calc(-50% - 80px - ${props => props.top / 2}px));\n    z-index: 10;\n    padding: 20px;\n    border-radius: 8px;\n    background-color: ${theme('theme', {\n      light: light.bodyBg,\n      dark: dark.bodyBg\n    })};\n    width: 240px;\n    ${flex.col};\n    gap: 16px;\n    border: 2px solid ${theme('theme', {\n      light: colors.light_gray,\n      dark: colors.dark\n    })};\n    transition: opacity var(--transition), visibility var(--transition);\n    opacity: 0;\n    visibility: hidden;\n\n    &.visible {\n      opacity: 1;\n      visibility: visible;\n    }\n\n    &_close {\n      position: absolute;\n      right: 16px;\n      top: 16px;\n      font-size: ${textSizes['14']};\n      color: ${colors.error};\n    }\n\n    .task {\n      ${flex.col};\n      gap: 10px;\n      font-size: ${textSizes['14']};\n\n      &_label {\n        font-size: ${textSizes['12']};\n        font-family: ${fonts.accent};\n        color: ${colors.gray};\n        display: block;\n        margin-bottom: 8px;\n      }\n\n      &_header {\n        display: flex;\n        gap: 10px;\n        align-items: center;\n      }\n    }\n\n    ${breakpoints.mobileL} {\n      width: 280px;\n    }\n  }\n`;\n\nexport const StyledCalendar = styled(EventsCalendar)`\n  max-width: 326px;\n  margin: 0 auto;\n\n  .react-calendar {\n    &__month-view {\n      &__weekdays {\n        order: unset;\n      }\n\n      & > div > div {\n        padding: 0 0 20px;\n      }\n\n      &:last-of-type {\n        .react-calendar__month-view__weekdays {\n          display: none !important;\n        }\n\n        .react-calendar__month-view__days {\n          margin-top: -37px;\n\n          ${breakpoints.mobileL} {\n            margin-top: -60px;\n          }\n        }\n      }\n    }\n  }\n`;","import moment from 'moment';\n\nexport const scheduler = [\n    {\n        id: 'marvin_park',\n        tasks: [\n            {\n                title: 'Vivamus in felis eu sapien',\n                date: moment(),\n                type: 'work'\n            },\n            {\n                title: 'Sed vel lectus',\n                date: moment().add(1, 'days'),\n                type: 'other'\n            },\n            {\n                title: 'Lorem ipsum dolor',\n                date: moment().add(2, 'days'),\n                type: 'family'\n            },\n            {\n                title: 'Sed vel lectus',\n                date: moment().add(3, 'days'),\n                type: 'travel'\n            },\n            {\n                title: 'Lorem ipsum dolor',\n                date: moment().add(1, 'months'),\n                type: 'other'\n            }\n        ]\n    },\n    {\n        id: 'norman_munoz',\n        tasks: [\n            {\n                title: 'Vivamus felislectus',\n                date: moment(),\n                type: 'travel'\n            },\n            {\n                title: 'Sed vel lectus',\n                date: moment().add(1, 'weeks'),\n                type: 'family'\n            }\n        ]\n    },\n    {\n        id: 'tillie_mathis',\n        tasks: [\n            {\n                title: 'Lorem ipsum dolor',\n                date: moment().add(5, 'days'),\n                type: 'other'\n            }\n        ]\n    },\n    {\n        id: 'cornelia_phillips',\n        tasks: [\n            {\n                title: 'Lorem ipsum dolor',\n                date: moment().add(1, 'days'),\n                type: 'work'\n            },\n            {\n                title: 'Sed vel lectus',\n                date: moment().add(1, 'days').add(2, 'hours'),\n                type: 'family'\n            },\n            {\n                title: 'Lorem ipsum dolor',\n                date: moment().add(10, 'days').add(4, 'hours'),\n                type: 'travel'\n            }\n        ]\n    },\n    {\n        id: 'isaiah_goodman',\n        tasks: [\n            {\n                title: 'Lorem ipsum dolor',\n                date: moment().add(1, 'months'),\n                type: 'work'\n            },\n            {\n                title: 'Sed vel lectus',\n                date: moment().add(1, 'months').add(2, 'days'),\n                type: 'family'\n            }\n        ]\n    },\n    {\n        id: 'claudia_turner',\n        tasks: [\n            {\n                title: 'Lorem ipsum dolor',\n                date: moment().add(1, 'days'),\n                type: 'work'\n            },\n            {\n                title: 'Sed vel lectus',\n                date: moment().add(16, 'days').add(2, 'hours'),\n                type: 'family'\n            }\n        ]\n    },\n    {\n        id: 'emily_rivera',\n        tasks: [\n            {\n                title: 'Lorem ipsum dolor',\n                date: moment().add(18, 'days'),\n                type: 'other'\n            }\n        ]\n    }\n];","// styling\nimport {light, dark, textSizes, fonts, colors, flex} from '@styles/vars';\nimport styled from 'styled-components/macro';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport ReactSpeedometer from 'react-d3-speedometer';\n\n// hooks\nimport {useTheme} from 'styled-components';\nimport useWindowSize from '@hooks/useWindowSize';\n\nconst Wrapper = styled.div`\n  display: flex;\n  height: 100%;\n  ${flex.center};\n\n  .speedometer {\n    width: 100%;\n\n    text {\n      font-weight: 400 !important;\n      font-family: ${fonts.accent};\n\n      &.current-value {\n        display: none;\n      }\n    }\n  }\n`;\n\nconst BloodTest = () => {\n    const {theme} = useTheme();\n    const {width} = useWindowSize();\n\n    const sizes = () => {\n        switch (true) {\n            case width < 414:\n                return { width: 232, height: 120 };\n            case width >= 414 && width < 1800:\n                return { width: 300, height: 160 };\n            default:\n                case width >= 1800:\n                return { width: 400, height: 220 };\n        }\n    }\n\n    return (\n        <Widget name=\"BloodTest\">\n            <WidgetHeader title=\"Blood test speed\"/>\n            <WidgetBody style={{flexGrow: 1}}>\n                <Wrapper>\n                    <ReactSpeedometer\n                        value={251}\n                        maxValue={1000}\n                        needleColor={light.text}\n                        needleTransitionDuration={2000}\n                        needleHeightRatio={0.8}\n                        segments={80}\n                        startColor={colors.green}\n                        endColor={colors.red}\n                        ringWidth={60}\n                        textColor={theme === 'light' ? light.text : dark.text}\n                        labelFontSize={textSizes['10']}\n                        maxSegmentLabels={10}\n                        valueFormat={'~s'}\n                        forceRender={true}\n                        width={sizes().width}\n                        height={sizes().height}\n                    />\n                </Wrapper>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default BloodTest;","// components\r\nimport Widget from '@components/Widget';\r\nimport WidgetHeader from '@components/Widget/WidgetHeader';\r\nimport WidgetNav from '@components/Widget/WidgetNav';\r\nimport WidgetBody from '@components/Widget/WidgetBody';\r\nimport ConfirmedDiagnosesList from '@widgets/ConfirmedDiagnoses/List';\r\nimport PeriodNav from '@components/PeriodNav';\r\nimport DataTable from 'react-data-table-component';\r\nimport DataTableExtensions from 'react-data-table-component-extensions';\r\nimport 'react-data-table-component-extensions/dist/index.css';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\n// hooks\r\nimport usePeriodNav from '@hooks/usePeriodNav';\r\nimport useArrayNav from '@hooks/useArrayNav';\r\n\r\n// data placeholder\r\nimport { confirmed } from '@db/confirmed';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TextField from '@mui/material/TextField';\r\nimport Badge from '@mui/material/Badge';\r\nimport { Stack } from '@mui/material';\r\nimport { useEffect, useState } from 'react';\r\nimport { UpcommingAppointmtnt } from '@components/Api/AllApi';\r\n\r\nconst UpcommingDashboard = ({ nav }) => {\r\n    const { period, periods, setPeriod } = usePeriodNav();\r\n    const { index, navigate } = useArrayNav(periods);\r\n    const [PatientSData, setPatientSData] = useState([])\r\n    const [count, setCount] = useState(0)\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        const APPDATA = UpcommingAppointmtnt()\r\n        if (APPDATA) {\r\n            APPDATA.then((data) => {\r\n                console.log(data, \"Upcomming Appointment Data!\")\r\n                setPatientSData(data.result || []);\r\n            })\r\n        }\r\n\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    const columns = [\r\n\r\n        {\r\n            name: 'Date/Time',\r\n            selector: row => row.name,\r\n            sortable: true,\r\n            minWidth: '70px',\r\n            maxWidth: '35%',\r\n        },\r\n        {\r\n            name: 'Location',\r\n            selector: row => row.created_at,\r\n            sortable: true,\r\n            minWidth: '70px',\r\n            maxWidth: '35%',\r\n        },\r\n        {\r\n            name: 'Other Information',\r\n            selector: row => `${row.img} w/ ${row.clinic_name}`,\r\n            sortable: true,\r\n            minWidth: '70px',\r\n            maxWidth: '35%',\r\n        },\r\n    ];\r\n\r\n\r\n    const data = PatientSData && PatientSData.map(item => ({\r\n        id: item?.id || '',\r\n        clinic_name: item?.clinic?.[0]?.clinic_name || '',\r\n        name: item?.start_date || '',\r\n        img: item?.doctor?.[0]?.name || '',\r\n        created_at: item?.location?.[0]?.name || '',\r\n    }));\r\n\r\n\r\n    const tableData = {\r\n        columns,\r\n        data,\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Widget name=\"UpcommingDashboardTabs\">\r\n                {\r\n                    nav === 'tabs' ?\r\n                        <WidgetHeader title=\"Upcoming Appointments\" style={{ paddingBottom: 16 }} />\r\n                        :\r\n                        <WidgetNav title=\"Upcoming Appointments\" handler={navigate} style={{ paddingBottom: 8 }} />\r\n                }\r\n                <WidgetBody style={{ paddingBottom: 26 }}>\r\n\r\n                    <Card sx={{ minWidth: 445, '@media screen and (max-width: 100%)': { minWidth: '100%' }, backgroundColor: '#F1F5F8' }}>\r\n                        <CardContent>\r\n                            <Typography sx={{ fontSize: 12 }}>If you are unable to keep your appointment kindly give at least 48 hours notice. All no shows within 48 hours may be subject to a cancellation fee added to your next appointment.</Typography>\r\n                            <div className=\"Order Page\">\r\n                                <DataTableExtensions export={false} print={false}\r\n                                    {...tableData}\r\n                                >\r\n                                    <DataTable\r\n                                        noHeader\r\n                                        defaultSortField=\"id\"\r\n                                        defaultSortAsc={false}\r\n                                        pagination\r\n                                        highlightOnHover\r\n                                    />\r\n                                </DataTableExtensions>\r\n                            </div>\r\n                        </CardContent>\r\n\r\n                    </Card>\r\n\r\n                </WidgetBody>\r\n            </Widget>\r\n        </>\r\n    )\r\n}\r\n\r\nUpcommingDashboard.propTypes = {\r\n    nav: PropTypes.oneOf(['arrows', 'tabs']).isRequired\r\n}\r\n\r\nexport default UpcommingDashboard;","// components\r\nimport Widget from '@components/Widget';\r\nimport WidgetHeader from '@components/Widget/WidgetHeader';\r\nimport WidgetNav from '@components/Widget/WidgetNav';\r\nimport WidgetBody from '@components/Widget/WidgetBody';\r\nimport ConfirmedDiagnosesList from '@widgets/ConfirmedDiagnoses/List';\r\nimport PeriodNav from '@components/PeriodNav';\r\nimport DataTable from 'react-data-table-component';\r\nimport DataTableExtensions from 'react-data-table-component-extensions';\r\nimport 'react-data-table-component-extensions/dist/index.css';\r\nimport PropTypes from 'prop-types';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\n// hooks\r\nimport usePeriodNav from '@hooks/usePeriodNav';\r\nimport useArrayNav from '@hooks/useArrayNav';\r\n\r\n// data placeholder\r\nimport { confirmed } from '@db/confirmed';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TextField from '@mui/material/TextField';\r\nimport Badge from '@mui/material/Badge';\r\nimport { Stack } from '@mui/material';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { GetAllPatientFiles } from '@components/Api/AllApi';\r\n\r\nconst MyClinicInformation = ({ nav }) => {\r\n    const { period, periods, setPeriod } = usePeriodNav();\r\n    const { index, navigate } = useArrayNav(periods);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const [PatientSData, setPatientSData] = useState([])\r\n    const [count, setCount] = useState(0)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchTemplateData = async () => {\r\n            try {\r\n                const data = await GetAllPatientFiles();\r\n                console.log(data, \"This Is all Billing Data!\");\r\n                setPatientSData(data.result || []);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n\r\n        fetchTemplateData();\r\n    }, [count]);\r\n\r\n    console.log(PatientSData, \"PatientFiles\")\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Issued By',\r\n            selector: row => row.name,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Clinic ID',\r\n            selector: row => row.clinic_id,\r\n            sortable: true,\r\n            minWidth: '20px',\r\n        },\r\n        {\r\n            name: 'Issued By',\r\n            selector: row => row.name,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Clinic Phone',\r\n            selector: row => row.name,\r\n            sortable: true,\r\n        },\r\n\r\n        {\r\n            name: 'Issue Date',\r\n            selector: (row) => {\r\n                const createdAt = new Date(row.created_at);\r\n                const options = {\r\n                    year: 'numeric',\r\n                    month: '2-digit',\r\n                    day: '2-digit',\r\n                    hour: '2-digit',\r\n                    minute: '2-digit',\r\n                    second: '2-digit',\r\n                    hour12: false,\r\n                };\r\n                return createdAt.toLocaleString('en-US', options);\r\n            },\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Valid Through',\r\n            selector: (row) => {\r\n                const createdAt = new Date(row.created_at);\r\n                const options = {\r\n                    year: 'numeric',\r\n                    month: '2-digit',\r\n                    day: '2-digit',\r\n                    hour: '2-digit',\r\n                    minute: '2-digit',\r\n                    second: '2-digit',\r\n                    hour12: false,\r\n                };\r\n                return createdAt.toLocaleString('en-US', options);\r\n            },\r\n            sortable: true,\r\n        },\r\n\r\n\r\n\r\n        {\r\n            name: 'Actions',\r\n            sortable: true,\r\n            cell: (row) => (\r\n                <>\r\n\r\n\r\n\r\n                    <button style={{ width: '50px', backgroundColor: 'green', height: '35px', borderRadius: 4, color: 'white', fontWeight: 600, marginLeft: 2 }}  >\r\n\r\n                       Active\r\n\r\n                    </button>\r\n                </>\r\n            ),\r\n            button: true,\r\n            minWidth: '100px',\r\n        },\r\n    ];\r\n\r\n    const data = PatientSData && PatientSData.map(item => ({\r\n        id: item?.id || '',\r\n        clinic_id:item?.clinic_id||'',\r\n        name: item?.name || '',\r\n        img: item?.file || '',\r\n        created_at: item?.created_at || '',\r\n    }));\r\n\r\n    const tableData = {\r\n        columns,\r\n        data,\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Widget name=\"MyClinicInformationTabs\">\r\n                {\r\n                    nav === 'tabs' ?\r\n                        <WidgetHeader title=\"My Clinic Information\" style={{ paddingBottom: 16 }} />\r\n                        :\r\n                        <WidgetNav title=\"My Clinic Information\" handler={navigate} style={{ paddingBottom: 8 }} />\r\n                }\r\n                <WidgetBody style={{ paddingBottom: 26 }}>\r\n\r\n                    <Card sx={{ minWidth: 445, '@media screen and (max-width: 100%)': { minWidth: '100%' }, backgroundColor: '#F1F5F8' }}>\r\n                        <CardContent>\r\n\r\n                            <div className=\"Order Page\">\r\n                                <DataTableExtensions export={false} print={false}\r\n                                    {...tableData}\r\n                                >\r\n                                    <DataTable\r\n                                        noHeader\r\n                                        defaultSortField=\"id\"\r\n                                        defaultSortAsc={false}\r\n                                        pagination\r\n                                        highlightOnHover\r\n                                    />\r\n                                </DataTableExtensions>\r\n                            </div>\r\n                        </CardContent>\r\n\r\n                    </Card>\r\n\r\n                </WidgetBody>\r\n            </Widget>\r\n        </>\r\n    )\r\n}\r\n\r\nMyClinicInformation.propTypes = {\r\n    nav: PropTypes.oneOf(['arrows', 'tabs']).isRequired\r\n}\r\n\r\nexport default MyClinicInformation;","import React, { useState, useEffect } from 'react';\r\nimport { Navigate, useParams } from 'react-router';\r\nimport Page from '@layout/Page';\r\nimport { useSnackbar } from 'notistack';\r\nimport DataTable from 'react-data-table-component';\r\nimport DataTableExtensions from 'react-data-table-component-extensions';\r\nimport 'react-data-table-component-extensions/dist/index.css';\r\nimport Card from '@mui/material/Card';\r\nimport Url from '../url/Allurl'\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Link } from 'react-router-dom';\r\nimport { ADDPatientFiles, AddSecurityGroup, DEeletPatientFiles, EDITPatientFiles, GetAllPatientFiles, GetBilling, GetBillingCancel, GetSinglePAtient, GettSecurityData, UpdateSecurity, deleteSecurity, editSecurityData } from '@components/Api/AllApi';\r\nimport { Grid, Stack, TextField, InputLabel, Box, Avatar, FormControlLabel, Checkbox } from '@mui/material';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\n\r\n\r\n\r\nconst Style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    // width: 600,\r\n    minWidth: 800,\r\n    bgcolor: 'background.paper',\r\n    border: '1px solid #f3f3f3',\r\n    boxShadow: 24,\r\n    p: 4,\r\n    backgroundColor: \"red\",\r\n    maxWidth: \"100%\",\r\n    minWidth: \"500px\",\r\n};\r\n\r\n\r\n\r\nconst MyFiles = () => {\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [Sec, setSec] = useState(false)\r\n    const [selectedTab, setSelectedTab] = useState('');\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const smallScreen = window.matchMedia('(max-width: 1038.98px)').matches;\r\n    const [PatientSData, setPatientSData] = useState([])\r\n    const [count, setCount] = useState(0)\r\n\r\n    const handleModalClose = () => {\r\n        setOpenModal(false);\r\n        setSelectedTab('');\r\n    };\r\n\r\n    window.addEventListener('resize', () => {\r\n        if (smallScreen) {\r\n            handleModalClose();\r\n        }\r\n    });\r\n\r\n    let { p_id } = useParams()\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchTemplateData = async () => {\r\n            try {\r\n                const data = await GetAllPatientFiles(p_id);\r\n                console.log(data, \"This Is all Billing Data!\");\r\n                setPatientSData(data.result || []);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n\r\n        fetchTemplateData();\r\n    }, [count]);\r\n\r\n    console.log(PatientSData, \"PatientFiles\")\r\n\r\n    // alert(p_id)\r\n    const [AS, setSA] = useState(false)\r\n\r\n    const handleDownloadClick = (imageUrl) => {\r\n        // Create an anchor element to trigger the download.\r\n        const anchor = document.createElement('a');\r\n        anchor.href = imageUrl;\r\n\r\n        // Extract the filename from the full path.\r\n        const filename = imageUrl.split('/').pop();\r\n        anchor.download = filename; // Use the extracted filename as the download filename.\r\n\r\n        anchor.click();\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleClick = (imageUrl) => {\r\n        window.open(imageUrl, '_blank');\r\n    };\r\n\r\n    const baseUrl = `${Url}/public/uploads/images/`;\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Name',\r\n            selector: row => row.name,\r\n            sortable: true,\r\n        },\r\n\r\n        {\r\n            name: 'Date Added',\r\n            selector: (row) => {\r\n                const createdAt = new Date(row.created_at);\r\n                const options = {\r\n                    year: 'numeric',\r\n                    month: '2-digit',\r\n                    day: '2-digit',\r\n                    hour: '2-digit',\r\n                    minute: '2-digit',\r\n                    second: '2-digit',\r\n                    hour12: false,\r\n                };\r\n                return createdAt.toLocaleString('en-US', options);\r\n            },\r\n            sortable: true,\r\n        },\r\n\r\n\r\n\r\n        {\r\n            name: 'Actions',\r\n            sortable: true,\r\n            cell: (row) => (\r\n                <>\r\n\r\n\r\n\r\n                    <button style={{ width: '50px', backgroundColor: 'skyblue', height: '35px', borderRadius: 4, color: 'white', fontWeight: 600, marginLeft: 2 }} onClick={() => handleDownloadClick(row.img)} >\r\n\r\n                        <Link to=\"#\" >\r\n                            <DownloadIcon />\r\n                        </Link>\r\n\r\n                    </button>\r\n                </>\r\n            ),\r\n            button: true,\r\n            minWidth: '200px',\r\n        },\r\n    ];\r\n\r\n    const data = PatientSData && PatientSData.map(item => ({\r\n        id: item?.id || '',\r\n        name: item?.name || '',\r\n        img: item?.file || '',\r\n        created_at: item?.created_at || '',\r\n    }));\r\n\r\n    const tableData = {\r\n        columns,\r\n        data,\r\n    };\r\n\r\n\r\n    const CalnceData = () => {\r\n\r\n    }\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [showpa, setshowpa] = useState(false)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleCloses = () => {\r\n        setshowpa(false);\r\n    };\r\n\r\n\r\n    const [openu, setOpenu] = useState(false);\r\n\r\n    const [showpau, setshowpau] = useState(false)\r\n\r\n    const handleOpenu = () => {\r\n        setOpenu(true);\r\n    };\r\n    const handleClosesu = () => {\r\n        setshowpau(false);\r\n    };\r\n\r\n\r\n    const [subject, setSubject] = useState('');\r\n\r\n    const handleSubjectChange = (event) => {\r\n        setSubject(event.target.value);\r\n    };\r\n\r\n\r\n    const [names, setName] = useState('');\r\n    const [fileI, setFileI] = useState(null);\r\n    const [isVisibleToPatient, setIsVisibleToPatient] = useState(false);\r\n\r\n    const handleFileChange = (event) => {\r\n        setFileI(event.target.files[0]);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        // const isPatientVisibleInt = isVisibleToPatient ? 1 : 0;\r\n\r\n        ADDPatientFiles(p_id, names, fileI).then((response) => {\r\n            console.log('API response:', response.messege);\r\n            // alert(response.messege)\r\n            enqueueSnackbar(response.messege, {\r\n                variant: 'success',\r\n                anchorOrigin: {\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                },\r\n            });\r\n            handleCloses()\r\n            setCount(count + 1)\r\n            // Handle the API response here, such as displaying a success message or updating UI\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                showpa &&\r\n                <Box sx={{ zIndex: \"9999999\", position: \"fixed\", top: 0, left: 0, width: \"100%\", minHeight: \"100vh\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", bgcolor: \"rgba(0,0,0,.4)\" }}>\r\n                    <Box sx={{ minWidth: \"500px\", maxWidth: \"500px\", p: 2, bgcolor: \"#fff\" }}>\r\n\r\n                        <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <Box>Add Files</Box>\r\n                            <Box onClick={handleCloses} sx={{ fontWeight: 900 }}>x</Box>\r\n                        </Box>\r\n\r\n                        <Box sx={{ mt: 2 }}>\r\n                            <form onSubmit={handleSubmit}>\r\n                                <InputLabel htmlFor=\"name\">File Name</InputLabel>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                    size=\"small\"\r\n                                    value={names}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                    required\r\n                                />\r\n                                <InputLabel htmlFor=\"file\">File</InputLabel>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                    size=\"small\"\r\n                                    type=\"file\"\r\n                                    onChange={handleFileChange}\r\n                                    required\r\n                                />\r\n                                \r\n\r\n                                <Grid container>\r\n                                    <Grid item xs={12}>\r\n                                        <Stack mt={1}>\r\n                                            <button\r\n                                                type=\"submit\"\r\n                                                p={2}\r\n                                                style={{\r\n                                                    width: '150px',\r\n                                                    backgroundColor: '#2BAA27',\r\n                                                    height: '40px',\r\n                                                    borderRadius: 4,\r\n                                                    color: 'white',\r\n                                                    fontWeight: 400,\r\n                                                }}\r\n                                                variant=\"contained\"\r\n                                                color=\"success\"\r\n                                                sx={{ width: '100%' }}\r\n                                            >\r\n                                                Save Changes\r\n                                            </button>\r\n                                        </Stack>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </form>\r\n\r\n                        </Box>\r\n\r\n                    </Box>\r\n                </Box>\r\n            }\r\n\r\n            <Grid container>\r\n\r\n                <Grid items xs={12}>\r\n\r\n                    <Card sx={{ minWidth: 470, marginLeft: '0px', '@media screen and (max-width: 100%)': { minWidth: '100%' } }}>\r\n                        <CardContent>\r\n                            <Typography sx={{ fontSize: 18, fontWeight: 400 }} color=\"text.secondary\" gutterBottom>\r\n                                My Files\r\n                            </Typography>\r\n                            <button style={{ backgroundColor: 'skyblue', height: 40, borderRadius: 8, width: '170px', color: 'white', marginBottom: 4 }} onClick={() => { setshowpa(true) }}>\r\n                                <Link to=\"#\">Add  Files</Link>\r\n                            </button>\r\n                            <Card sx={{ minWidth: 445, '@media screen and (max-width: 100%)': { minWidth: '100%' }, backgroundColor: '#F1F5F8' }}>\r\n                                <CardContent>\r\n                                    <Typography sx={{ fontSize: 13, fontWeight: 300 }} color=\"text.secondary\" gutterBottom>\r\n                                        {PatientSData.length} total  Exiting Files found\r\n                                    </Typography>\r\n                                    <div className=\"Order Page\">\r\n                                        <DataTableExtensions {...tableData} export={false} print={false}>\r\n                                            <DataTable noHeader defaultSortField=\"id\" defaultSortAsc={false} pagination highlightOnHover />\r\n                                        </DataTableExtensions>\r\n                                    </div>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default MyFiles","// components\nimport Page from '@layout/Page';\nimport TaskScheduler from '@widgets/TaskScheduler';\nimport PatientsGenderLineChart from '@widgets/PatientsGenderLineChart';\nimport RadarAreaChart from '@widgets/RadarAreaChart';\nimport BloodTest from '@widgets/BloodTest';\nimport Sidebar from '@layout/Sidebar';\nimport Panel from '@layout/Panel';\nimport { Grid } from '@mui/material';\nimport UpcommingDashboard from './UpcommingDashboard';\nimport MyClinicInformation from './MyClinicInformation';\nimport MyFiles from './MyFile';\n\nconst DashboardD = () => {\n    return (\n        <>\n            <Sidebar />\n            <Panel />\n            <Page title=\" Patient Dashboard\">\n                <Grid container>\n                    <Grid item md={6} p={1}>\n                        <div key=\"scheduler\">\n                            <UpcommingDashboard />\n                        </div>\n                    </Grid>\n                    <Grid item md={6} p={1}>\n                        <div key=\"gender\">\n                            <MyClinicInformation />\n                        </div>\n                    </Grid>\n                    <Grid item md={6} p={1}>\n                        <div key=\"radar\">\n                            <MyFiles />\n                        </div>\n                    </Grid>\n\n\n\n                </Grid>\n\n\n\n\n            </Page>\n        </>\n    )\n}\n\nexport default DashboardD;","import styled from 'styled-components/macro';\nimport {flex, textSizes, fonts} from '@styles/vars';\n\nexport const List = styled.ul`\n  gap: 22px;\n  margin-top: 20px;\n  ${flex.col}\n`\n\nexport const Block = styled.div`\n  display: flex;\n  ${flex.between}\n  margin-bottom: 7px;\n  font-size: ${textSizes['14']};\n`\n\nexport const Text = styled.div`\n  display: flex;\n  gap: 4px;\n  font-family: ${fonts.accent};\n  \n  .num {\n    font-weight: 500;\n  }\n  & + .label {\n    text-transform: capitalize;\n  }\n`","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {light, dark, flex, textSizes, fonts, colors, breakpoints} from '@styles/vars';\n\nexport const Container = styled.div`\n  position: relative;\n  height: 100%;\n  ${flex.col};\n  align-items: center;\n`;\n\nexport const Popup = styled.div`\n  position: relative;\n  z-index: 2;\n  background-color: ${theme('theme', {\n    light: light.bodyBg,\n    dark: dark.bodyBg,\n  })};\n  padding: 20px;\n  border-radius: 8px;\n  ${flex.col};\n  gap: 16px;\n  margin: auto;\n  width: calc(100% - 40px);\n  max-width: 320px;\n`;\n\nexport const Backdrop = styled.div`\n  position: absolute;\n  bottom: 0;\n  display: flex;\n  width: 100%;\n  height: calc(100% - 40px);\n`;\n\nexport const EventsCalendar = styled.div`\n  ${flex.col};\n  gap: 8px;\n  position: relative;\n  z-index: 1;\n  width: 100%;\n  margin: 2px;\n  flex-grow: 1;\n\n  .react-calendar {\n    flex-grow: 1;\n    height: 100%;\n\n    &__navigation {\n      background-color: ${theme('theme', {\n        light: light.bodyBg,\n        dark: dark.bodyBg\n      })};\n      border-radius: 8px;\n      min-height: 40px;\n      padding: 10px 22px;\n      display: flex;\n      ${flex.between};\n      font-size: ${textSizes['14']};\n      margin: 0 2px;\n\n      &__label {\n        pointer-events: none;\n      }\n    }\n\n    &__viewContainer {\n      ${flex.col};\n      flex-grow: 1;\n    }\n\n    &__tile {\n      font-size: ${textSizes['14']};\n      font-family: ${fonts.accent};\n\n      .bar {\n        opacity: 0;\n        transition: opacity var(--transition);\n      }\n    }\n\n    &__year-view__months {\n      gap: 20px 0;\n      margin-top: 20px;\n    }\n\n    &__month-view {\n      height: 100%;\n\n      & > div {\n        height: 100%;\n        align-items: stretch;\n      }\n\n      & > div > div {\n        ${flex.col};\n        gap: 8px;\n        justify-content: space-between;\n        height: 100%;\n        padding: 0 24px 20px;\n      }\n\n      &__weekdays {\n        text-transform: uppercase;\n        font-size: ${textSizes['10']};\n        font-family: ${fonts.accent};\n        text-align: center;\n        order: 1;\n        display: grid !important;\n        grid-template-columns: repeat(7, minmax(0, 1fr));\n        justify-items: center;\n\n        abbr {\n          text-decoration: none;\n        }\n\n        ${breakpoints.mobileL} {\n          gap: 8px;\n\n          &__weekday {\n            width: 40px;\n          }\n        }\n      }\n\n      &__days {\n        display: grid !important;\n        grid-template-columns: repeat(7, minmax(0, 1fr));\n        grid-gap: 20px 0;\n        justify-items: center;\n\n        &__day {\n          &.active {\n            color: ${colors.blue};\n            cursor: pointer;\n          }\n\n          &:not(&.active) {\n            pointer-events: none;\n          }\n\n          &--neighboringMonth {\n            opacity: .5;\n          }\n        }\n\n        ${breakpoints.mobileL} {\n          grid-gap: 8px;\n\n          &__day {\n            width: 40px;\n            height: 40px;\n            border-radius: 4px;\n            background-color: ${theme('theme', {\n              light: light.highlight,\n              dark: dark.highlight\n            })};\n            position: relative;\n\n            &.active {\n              color: inherit;\n\n              .bar {\n                opacity: 1;\n                display: block;\n                position: absolute;\n                left: 50%;\n                bottom: 8px;\n                border-radius: 2px;\n                width: 16px;\n                height: 2px;\n                background-color: ${colors.blue};\n                transform: translateX(-50%);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","// styling\nimport styled from 'styled-components/macro';\nimport {colors, fonts, textSizes, light, dark, flex, breakpoints} from '@styles/vars';\n\n// components\nimport Widget from '@components/Widget';\nimport Navigator from '@ui/Navigator';\nimport {ResponsiveContainer, RadarChart, PolarGrid, PolarAngleAxis, Radar, Text, Tooltip} from 'recharts';\nimport ChartTooltip from '@components/Chart/Tooltip';\n\n// hooks\nimport useArrayNav from '@hooks/useArrayNav';\nimport {useTheme} from 'styled-components';\nimport usePeriodNav from '@hooks/usePeriodNav';\nimport useWindowSize from '@hooks/useWindowSize';\n\nconst Container = styled.div`\n  ${flex.col};\n  gap: 14px;\n  justify-content: flex-end;\n  height: 100%;\n\n  .chart {\n    height: 250px;\n    flex-grow: 1;\n    padding: 24px 24px 0;\n  }\n\n  .navigator {\n    margin: 0 2px 2px;\n  }\n  \n  ${breakpoints.mobileL} {\n    .chart {\n      height: 300px;\n    }\n  }\n`;\n\nconst RadarAreaChart = () => {\n    const {periods} = usePeriodNav();\n    const {index, navigate} = useArrayNav(periods);\n    const {theme} = useTheme();\n    const {width} = useWindowSize();\n\n    const data = [\n        {\n            type: 'diagnostics',\n            value: [40, 54, 65]\n        },\n        {\n            type: 'checkup',\n            value: [70, 22, 46]\n        },\n        {\n            type: 'tests',\n            value: [18, 41, 60]\n        },\n        {\n            type: 'consultation',\n            value: [70, 25, 67]\n        },\n        {\n            type: 'injury',\n            value: [30, 70, 50]\n        },\n        {\n            type: 'viruses',\n            value: [40, 19, 80]\n        }\n    ]\n\n    function renderPolarAngleAxis({payload, x, y, cx, cy, ...rest}) {\n        return (\n            <Text\n                {...rest}\n                verticalAnchor=\"middle\"\n                textAnchor=\"middle\"\n                y={y + (y - cy) / 9}\n                x={x + (x - cx) / 9}\n                fill={theme === 'light' ? light.text : dark.text}\n            >\n                {payload.value}\n            </Text>\n        );\n    }\n\n    return (\n        <Widget name=\"RadarAreaChart\">\n            <Container>\n                <div className=\"chart\">\n                    <ResponsiveContainer height=\"100%\" width=\"100%\">\n                        <RadarChart data={data} outerRadius={width < 414 ? 80: 110} height={250}>\n                            <PolarGrid stroke={theme === 'light' ? colors.light_gray : colors.dark}/>\n                            <PolarAngleAxis dataKey=\"type\"\n                                            tick={props => renderPolarAngleAxis(props)}\n                                            style={{\n                                                textTransform: 'uppercase',\n                                                fontFamily: fonts.accent,\n                                                fontSize: textSizes['10'],\n                                            }}\n                                            cx=\"50%\"\n                                            cy=\"50%\"\n                            />\n                            <Radar dataKey={`value[${index}]`}\n                                   strokeWidth={4}\n                                   stroke={colors.azure}\n                                   fill={colors.azure}\n                                   fillOpacity={0.1}\n                                   activeDot={{r: 4, fill: colors.azure, stroke: colors.azure}}\n                            />\n                            <Tooltip content={<ChartTooltip />} cursor={false}/>\n                        </RadarChart>\n                    </ResponsiveContainer>\n                </div>\n                <Navigator handler={navigate} text={periods[index]} style={{textTransform: 'capitalize'}}/>\n            </Container>\n        </Widget>\n    )\n}\n\nexport default RadarAreaChart;"],"names":["_ref","color","legend","_jsxs","ListItem","children","_jsx","LegendBadge","overlay","List","styled","ul","withConfig","componentId","props","li","fonts","accent","textSizes","_ref$color","colors","blue","value","_ref$style","style","theme","useTheme","LinearProgress","className","variant","sx","_objectSpread","backgroundColor","dark","highlight","height","borderRadius","basicBg","light","basicColor","text","NormalizedSelect","Select","concat","gray","fadeIn","Basic","Minimal","breakpoints","tablet","User","label","options","changeHandler","placeholder","useEffect","_useState","useState","Math","random","toFixed","slice","uniqueId","_slicedToArray","commonProps","classNamePrefix","inputId","isSearchable","onChange","openMenuOnFocus","components","Control","_ref2","_objectWithoutProperties","_excluded","Menu","id","blurInputOnSelect","data","elems","width","useWindowSize","_useState2","points","setPoints","isTablet","useLayoutEffect","gutter","arguments","length","undefined","gridWidth","document","getElementById","offsetWidth","i","push","generateGridPoints","renderTooltip","active","payload","StyledTooltip","map","item","index","background","stroke","ResponsiveContainer","LineChart","margin","x1","y1","x2","y2","gradientUnits","stopColor","stopOpacity","offset","light_gray","CartesianGrid","strokeDasharray","strokeLinecap","horizontal","verticalPoints","el","Line","dataKey","Tooltip","cursor","content","AreaChart","top","Area","Labels","div","flex","between","center","arrow","tooltip","_ref$arrow","_ref$multi","multi","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","right","current","handler","periods","usePeriodNav","Container","p","Item","Button","onClick","nanoid","_ref$sidePadding","sidePadding","elRef","Body","ref","title","disabled","WidgetHeader","Nav","colorTypes","cat","tasksColors","depsOptions","testsOptions","doctorsOptions","doctors","forEach","doctor","Avatar","avatar","alt","name","size","period","setPeriod","setPeriodIndex","bodyBg","col","widgetBg","error","mobileL","EventsCalendar","moment","add","nav","_usePeriodNav","_useArrayNav","useArrayNav","navigate","PatientSData","setPatientSData","_useState3","_useState4","APPDATA","UpcommingAppointmtnt","then","console","log","result","tableData","columns","selector","row","sortable","minWidth","maxWidth","created_at","img","clinic_name","_item$clinic","_item$clinic$","_item$doctor","_item$doctor$","_item$location","_item$location$","clinic","start_date","location","_Fragment","Widget","paddingBottom","WidgetNav","WidgetBody","Card","CardContent","Typography","fontSize","DataTableExtensions","export","print","DataTable","noHeader","defaultSortField","defaultSortAsc","pagination","highlightOnHover","count","fetchTemplateData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_data","wrap","_context","prev","next","GetAllPatientFiles","sent","t0","stop","apply","clinic_id","Date","toLocaleString","year","month","day","hour","minute","second","hour12","cell","fontWeight","marginLeft","button","file","_defineProperty","position","left","transform","bgcolor","border","boxShadow","enqueueSnackbar","useSnackbar","setSelectedTab","_useState5","_useState6","setOpenModal","smallScreen","window","matchMedia","matches","_useState7","_useState8","_useState9","_useState10","setCount","addEventListener","p_id","useParams","_useState11","_useState12","Url","imageUrl","anchor","createElement","href","filename","split","pop","download","click","handleDownloadClick","Link","to","DownloadIcon","_useState13","_useState14","_useState15","_useState16","showpa","setshowpa","handleCloses","_useState17","_useState18","_useState19","_useState20","_useState21","_useState22","_useState23","_useState24","names","setName","_useState25","_useState26","fileI","setFileI","_useState27","_useState28","Box","zIndex","minHeight","display","justifyContent","alignItems","mt","onSubmit","event","preventDefault","ADDPatientFiles","response","messege","anchorOrigin","vertical","InputLabel","htmlFor","TextField","fullWidth","target","required","type","files","Grid","container","xs","Stack","items","gutterBottom","marginBottom","Sidebar","Panel","Page","md","UpcommingDashboard","MyClinicInformation","MyFiles","Popup","Backdrop","RadarChart","outerRadius","PolarGrid","PolarAngleAxis","tick","x","y","cx","cy","rest","Text","verticalAnchor","textAnchor","fill","renderPolarAngleAxis","textTransform","fontFamily","Radar","strokeWidth","azure","fillOpacity","activeDot","r","ChartTooltip","Navigator"],"sourceRoot":""}