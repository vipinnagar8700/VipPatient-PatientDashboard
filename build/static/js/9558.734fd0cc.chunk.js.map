{"version":3,"file":"static/js/9558.734fd0cc.chunk.js","mappings":"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","sources":["components/CartesianChart/index.jsx","utils/recharts.js","components/Chart/Labels/index.jsx","db/epi_period.js","components/ModalWindow/CloseBtn/index.jsx","widgets/EventsCompactCalendar/index.jsx","widgets/EpiContextAreaChart/index.jsx","pages/DashboardH.jsx","widgets/EventsCompactCalendar/style.js","widgets/HealthIndexChart/style.js","db/health.js","widgets/HealthIndexChart/index.jsx"],"sourcesContent":["// styling\nimport {colors} from '@styles/vars';\nimport {StyledTooltip} from '@components/Chart/Tooltip';\n\n// components\nimport {LineChart, Line, ResponsiveContainer, CartesianGrid, AreaChart, Area, Tooltip} from 'recharts';\n\n// hooks\nimport {useTheme} from 'styled-components';\nimport {useLayoutEffect, useState} from 'react';\nimport useWindowSize from '@hooks/useWindowSize';\n\n// utils\nimport {generateGridPoints} from '@utils/recharts';\n\nconst CartesianChart = ({variant, id, data, elems, ...props}) => {\n    const {width} = useWindowSize();\n    const {theme} = useTheme();\n    const [points, setPoints] = useState([]);\n    const isTablet = width >= 768;\n\n    // generate grid points based on the container width\n    useLayoutEffect(() => {\n        setPoints(generateGridPoints(id));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [width]);\n\n    // custom tooltip\n    const renderTooltip = (props) => {\n        const {active, payload} = props;\n        if (active && payload && payload.length) {\n            return (\n                <StyledTooltip className=\"multiple\">\n                    {payload.map((item, index) => (\n                        <div className=\"item\" key={index}>\n                            <div className=\"color\" style={{background: item.stroke}} />\n                            <div className=\"value\">{item.value}</div>\n                        </div>\n                    ))}\n                </StyledTooltip>\n            );\n        }\n        return null;\n    }\n\n    return (\n        <ResponsiveContainer height={isTablet ? '100%' : props.height} width=\"100%\" id={id}>\n            {\n                variant === 'line' ?\n                    <LineChart margin={false} data={data} {...props}>\n                        <defs>\n                            <linearGradient id=\"dark\"\n                                            x1=\"0.00669497\"\n                                            y1=\"1\"\n                                            x2=\"0.00669497\"\n                                            y2=\"327.445\"\n                                            gradientUnits=\"userSpaceOnUse\"\n                            >\n                                <stop stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.512299\" stopColor={colors.dark}/>\n                                <stop offset=\"0.99905\" stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                            <linearGradient id=\"light\"\n                                            x1=\"0.00385257\"\n                                            y1=\"1\"\n                                            x2=\"0.00385257\"\n                                            y2=\"328.377\"\n                                            gradientUnits=\"userSpaceOnUse\">\n                                <stop stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.504355\" stopColor={colors.light_gray}/>\n                                <stop offset=\"0.99905\" stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                        </defs>\n                        <CartesianGrid stroke={`url(#${theme === 'dark' ? 'dark' : 'light'})`}\n                                       strokeDasharray=\"6\"\n                                       strokeLinecap=\"square\"\n                                       horizontal={false}\n                                       verticalPoints={points}\n                                       width=\"100%\"\n                                       height=\"100%\"\n                        />\n                        {\n                            elems.map(el => {\n                                return <Line key={el.dataKey} {...el} />\n                            })\n                        }\n                        <Tooltip cursor={false} content={renderTooltip} />\n                    </LineChart>\n                    :\n                    <AreaChart margin={{ top: 5 }} data={data} {...props}>\n                        <defs>\n                            <linearGradient id=\"dark\"\n                                            x1=\"0.00669497\"\n                                            y1=\"1\"\n                                            x2=\"0.00669497\"\n                                            y2=\"327.445\"\n                                            gradientUnits=\"userSpaceOnUse\"\n                            >\n                                <stop stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.512299\" stopColor={colors.dark}/>\n                                <stop offset=\"0.99905\" stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                            <linearGradient id=\"light\"\n                                            x1=\"0.00385257\"\n                                            y1=\"1\"\n                                            x2=\"0.00385257\"\n                                            y2=\"328.377\"\n                                            gradientUnits=\"userSpaceOnUse\">\n                                <stop stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.504355\" stopColor={colors.light_gray}/>\n                                <stop offset=\"0.99905\" stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                            {props.children}\n                        </defs>\n                        <CartesianGrid stroke={`url(#${theme === 'dark' ? 'dark' : 'light'})`}\n                                       strokeDasharray=\"6\"\n                                       strokeLinecap=\"square\"\n                                       horizontal={false}\n                                       verticalPoints={points}\n                                       width=\"100%\"\n                                       height=\"100%\"\n                        />\n                        {\n                            elems.map(el => {\n                                return <Area key={el.dataKey} {...el} />\n                            })\n                        }\n                        <Tooltip cursor={false} content={renderTooltip} />\n                    </AreaChart>\n            }\n        </ResponsiveContainer>\n    )\n}\n\nexport default CartesianChart;","// cartesian grid points generator\nexport const generateGridPoints = (id, gutter = 20) => {\n    const gridWidth = document.getElementById(id).offsetWidth;\n\n    let points = [];\n    for (let i = 0; i < gridWidth; i += gutter) {\n        points.push(i);\n    }\n    return points;\n}","import styled from 'styled-components/macro';\nimport {flex, fonts, textSizes} from '@styles/vars';\n\nconst Labels = styled.div`\n  text-transform: uppercase;\n  margin: 0 24px;\n  display: flex;\n  ${flex.between}\n  font-family: ${fonts.accent};\n  font-size: ${textSizes['10']};\n`\n\nexport default Labels","export const year = [\n    {\n        name: 'January',\n        cured: 100,\n        sick: 80,\n    },\n    {\n        name: 'February',\n        cured: 120,\n        sick: 100,\n    },\n    {\n        name: 'March',\n        cured: 140,\n        sick: 120,\n    },\n    {\n        name: 'April',\n        cured: 190,\n        sick: 170,\n    },\n    {\n        name: 'May',\n        cured: 280,\n        sick: 260,\n    },\n    {\n        name: 'June',\n        cured: 200,\n        sick: 180,\n    },\n    {\n        name: 'July',\n        cured: 180,\n        sick: 160,\n    },\n    {\n        name: 'August',\n        cured: 160,\n        sick: 120,\n    },\n    {\n        name: 'September',\n        cured: 140,\n        sick: 80,\n    },\n    {\n        name: 'October',\n        cured: 90,\n        sick: 150,\n    },\n    {\n        name: 'November',\n        cured: 120,\n        sick: 90,\n    },\n    {\n        name: 'December',\n        cured: 300,\n        sick: 164,\n    }\n];\n\nexport const month = [\n    {\n        name: '1',\n        cured: 90,\n        sick: 135,\n    },\n    {\n        name: '2',\n        cured: 150,\n        sick: 120,\n    },\n    {\n        name: '3',\n        cured: 180,\n        sick: 90,\n    },\n    {\n        name: '4',\n        cured: 190,\n        sick: 170,\n    },\n    {\n        name: '5',\n        cured: 280,\n        sick: 260,\n    },\n    {\n        name: '6',\n        cured: 200,\n        sick: 150,\n    },\n    {\n        name: '7',\n        cured: 180,\n        sick: 160,\n    },\n    {\n        name: '8',\n        cured: 160,\n        sick: 120,\n    },\n    {\n        name: '9',\n        cured: 219,\n        sick: 80,\n    },\n    {\n        name: '10',\n        cured: 90,\n        sick: 150,\n    },\n    {\n        name: '11',\n        cured: 315,\n        sick: 300,\n    },\n    {\n        name: '12',\n        cured: 250,\n        sick: 164,\n    },\n    {\n        name: '13',\n        cured: 210,\n        sick: 75,\n    },\n    {\n        name: '14',\n        cured: 350,\n        sick: 300,\n    },\n    {\n        name: '15',\n        cured: 450,\n        sick: 400,\n    }\n];\n\nexport const week = [\n    {\n        name: 'sun',\n        cured: 450,\n        sick: 350,\n    },\n    {\n        name: 'mon',\n        cured: 300,\n        sick: 250,\n    },\n    {\n        name: 'tue',\n        cured: 200,\n        sick: 150,\n    },\n    {\n        name: 'wed',\n        cured: 278,\n        sick: 198,\n    },\n    {\n        name: 'thu',\n        cured: 189,\n        sick: 99,\n    },\n    {\n        name: 'fri',\n        cured: 239,\n        sick: 139,\n    },\n    {\n        name: 'sat',\n        cured: 349,\n        sick: 249,\n    },\n];","// styling\nimport {colors, flex, textSizes} from '@styles/vars';\nimport styled from 'styled-components/macro';\nimport {darken} from 'polished';\n\nconst Btn = styled.button`\n  min-width: 20px;\n  min-height: 20px;\n  padding: 2px;\n  border-radius: 50%;\n  background-color: ${colors.error};\n  color: #fff;\n  display: flex;\n  ${flex.center};\n  position: absolute;\n  top: -10px;\n  right: -10px;\n  font-size: ${textSizes[12]};\n  line-height: 1;\n  will-change: transform;\n  z-index: 10;\n  transition: background-color var(--transition), transform var(--transition);\n\n  &:hover {\n    background-color: ${darken(0.1, colors.error)};\n    transform: scale(1.1);\n  }\n  \n  .icon {\n    margin-top: -1px;\n  }\n`;\n\nconst CloseBtn = ({handler}) => {\n    return (\n        <Btn onClick={handler}>\n            <i className=\"icon icon-close\"/>\n        </Btn>\n    )\n}\n\nexport default CloseBtn;","// styled components\nimport {EventsCalendar, Container, Popup, Backdrop} from '@widgets/EventsCompactCalendar/style';\n\n// components\nimport Widget from '@components/Widget';\nimport Calendar from 'react-calendar';\nimport Timestamp from '@ui/Timestamp';\nimport Grow from '@mui/material/Grow';\nimport CloseBtn from '@components/ModalWindow/CloseBtn';\n\n// hooks\nimport {useState, useRef} from 'react';\n\n// utils\nimport {nanoid} from 'nanoid';\nimport moment from 'moment';\n\nconst EventsCompactCalendar = () => {\n    const [selectedDate, setSelectedDate] = useState(null);\n    const [popupVisible, setPopupVisible] = useState(false);\n    const popupRef = useRef(null);\n\n    const events = [\n        {\n            date: moment(),\n            title: 'Medical conference',\n        },\n        {\n            date: moment(),\n            title: 'Enterprise meeting',\n        },\n        {\n            date: moment().add(3, 'hours'),\n            title: 'Meeting with Anna Smith',\n        },\n        {\n            date: moment().add(2, 'days').add(1, 'hours'),\n            title: 'Visit gym',\n        },\n        {\n            date: moment().add(2, 'days').add(2, 'hours'),\n            title: 'Prepare for presentation',\n        }\n    ]\n\n    const hasEvents = date => events.filter(event => moment(event.date).isSame(date, 'day')).length > 0;\n\n    const drawPopup = date => {\n        const eventsOnDate = events.filter(event => moment(event.date).isSame(date, 'day'));\n        return eventsOnDate.map(event => {\n            return (\n                <div key={nanoid(5)}>\n                    <Timestamp date={date} time={true} />\n                    <h3>{event.title}</h3>\n                </div>\n            )\n        });\n    }\n\n    const config = {\n        as: Calendar,\n        locale: 'en-US',\n        navigationLabel: ({date}) => `${moment(date).format('MMMM, YYYY')}`,\n        navigationAriaLabel: 'Current month',\n        prevLabel: <i className=\"icon icon-chevron-left\"/>,\n        nextLabel: <i className=\"icon icon-chevron-right\"/>,\n        prev2Label: null,\n        next2Label: null,\n        nextAriaLabel: 'Next month',\n        prevAriaLabel: 'Previous month',\n        tileContent: ({date}) => hasEvents(date) ? <span className=\"bar\"/> : null,\n        tileClassName: ({date}) => hasEvents(date) ? 'active' : null,\n        onClickDay: (value) => {\n            setSelectedDate(value);\n            setPopupVisible(true);\n        },\n    }\n\n    return (\n        <Widget name=\"EventsCompactCalendar\">\n            <Container>\n                <EventsCalendar {...config} />\n                <Backdrop>\n                    {\n                        selectedDate &&\n                        <Grow in={popupVisible} timeout={300} style={{transformOrigin: '0 0 0'}}>\n                            <Popup ref={popupRef}>\n                                {drawPopup(selectedDate)}\n                                <CloseBtn handler={() => setPopupVisible(false)}/>\n                            </Popup>\n                        </Grow>\n                    }\n                </Backdrop>\n            </Container>\n        </Widget>\n    )\n}\n\nexport default EventsCompactCalendar;","// styling\nimport {colors} from '@styles/vars';\n\n// styled components\nimport Labels from '@components/Chart/Labels';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport Legend from '@ui/Legend';\nimport LegendItem from '@ui/Legend/LegendItem';\nimport CartesianChart from '@components/CartesianChart';\n\n// data placeholder\nimport {week} from '@db/epi_period';\n\nconst EpiContextAreaChart = () => {\n    const common = {\n        type: 'monotone',\n        strokeWidth: 3,\n        fillOpacity: .8\n    }\n    const chartElems = [\n        {\n            ...common,\n            dataKey: 'cured',\n            stroke: colors.peach,\n            fill: colors.peach,\n            activeDot: {r: 5, fill: colors.peach, strokeWidth: 0}\n        },\n        {\n            ...common,\n            dataKey: 'sick',\n            stroke: colors.purple,\n            fill:  colors.purple,\n            activeDot: {r: 5, fill: colors.purple, strokeWidth: 0}\n        }\n    ]\n    return (\n        <Widget name=\"EpiContextAreaChart\">\n            <WidgetHeader title=\"Epidemiological context\">\n                <Legend>\n                    <LegendItem legend=\"sick\" color=\"purple\"/>\n                    <LegendItem legend=\"cured\" color=\"peach\"/>\n                </Legend>\n            </WidgetHeader>\n            <WidgetBody style={{padding: 0, overflow: 'hidden', justifyContent: 'space-between'}}>\n                <Labels>\n                    {\n                        week.map(item => {\n                            return (\n                                <span key={item.name}>{item.name}</span>\n                            )\n                        })\n                    }\n                </Labels>\n                <CartesianChart id=\"EpiContextAreaChart\" data={week} elems={chartElems} variant=\"area\" height={300} />\n            </WidgetBody>\n        </Widget>\n    );\n}\n\nexport default EpiContextAreaChart;","// components\nimport Page from '@layout/Page';\nimport EventsCompactCalendar from '@widgets/EventsCompactCalendar';\nimport EpiContextAreaChart from '@widgets/EpiContextAreaChart';\nimport RadarAreaChart from '@widgets/RadarAreaChart';\nimport HealthIndexChart from '@widgets/HealthIndexChart';\nimport DiagnosesDonut from '@widgets/DiagnosesDonut';\n\nconst DashboardH = () => {\n    return (\n        <Page title=\"Dashboard\">\n            <div key=\"events-compact\">\n                <EventsCompactCalendar />\n            </div>\n            <div key=\"epi-context-area\">\n                <EpiContextAreaChart />\n            </div>\n            <div key=\"radar\">\n                <RadarAreaChart />\n            </div>\n            <div key=\"health-index-compact\">\n                <HealthIndexChart variant=\"health\" />\n            </div>\n            <div key=\"diagnoses-donut\">\n                <DiagnosesDonut variant=\"wide\" />\n            </div>\n        </Page>\n    )\n}\n\nexport default DashboardH;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {light, dark, flex, textSizes, fonts, colors, breakpoints} from '@styles/vars';\n\nexport const Container = styled.div`\n  position: relative;\n  height: 100%;\n  ${flex.col};\n  align-items: center;\n`;\n\nexport const Popup = styled.div`\n  position: relative;\n  z-index: 2;\n  background-color: ${theme('theme', {\n    light: light.bodyBg,\n    dark: dark.bodyBg,\n  })};\n  padding: 20px;\n  border-radius: 8px;\n  ${flex.col};\n  gap: 16px;\n  margin: auto;\n  width: calc(100% - 40px);\n  max-width: 320px;\n`;\n\nexport const Backdrop = styled.div`\n  position: absolute;\n  bottom: 0;\n  display: flex;\n  width: 100%;\n  height: calc(100% - 40px);\n`;\n\nexport const EventsCalendar = styled.div`\n  ${flex.col};\n  gap: 8px;\n  position: relative;\n  z-index: 1;\n  width: 100%;\n  margin: 2px;\n  flex-grow: 1;\n\n  .react-calendar {\n    flex-grow: 1;\n    height: 100%;\n\n    &__navigation {\n      background-color: ${theme('theme', {\n        light: light.bodyBg,\n        dark: dark.bodyBg\n      })};\n      border-radius: 8px;\n      min-height: 40px;\n      padding: 10px 22px;\n      display: flex;\n      ${flex.between};\n      font-size: ${textSizes['14']};\n      margin: 0 2px;\n\n      &__label {\n        pointer-events: none;\n      }\n    }\n\n    &__viewContainer {\n      ${flex.col};\n      flex-grow: 1;\n    }\n\n    &__tile {\n      font-size: ${textSizes['14']};\n      font-family: ${fonts.accent};\n\n      .bar {\n        opacity: 0;\n        transition: opacity var(--transition);\n      }\n    }\n\n    &__year-view__months {\n      gap: 20px 0;\n      margin-top: 20px;\n    }\n\n    &__month-view {\n      height: 100%;\n\n      & > div {\n        height: 100%;\n        align-items: stretch;\n      }\n\n      & > div > div {\n        ${flex.col};\n        gap: 8px;\n        justify-content: space-between;\n        height: 100%;\n        padding: 0 24px 20px;\n      }\n\n      &__weekdays {\n        text-transform: uppercase;\n        font-size: ${textSizes['10']};\n        font-family: ${fonts.accent};\n        text-align: center;\n        order: 1;\n        display: grid !important;\n        grid-template-columns: repeat(7, minmax(0, 1fr));\n        justify-items: center;\n\n        abbr {\n          text-decoration: none;\n        }\n\n        ${breakpoints.mobileL} {\n          gap: 8px;\n\n          &__weekday {\n            width: 40px;\n          }\n        }\n      }\n\n      &__days {\n        display: grid !important;\n        grid-template-columns: repeat(7, minmax(0, 1fr));\n        grid-gap: 20px 0;\n        justify-items: center;\n\n        &__day {\n          &.active {\n            color: ${colors.blue};\n            cursor: pointer;\n          }\n\n          &:not(&.active) {\n            pointer-events: none;\n          }\n\n          &--neighboringMonth {\n            opacity: .5;\n          }\n        }\n\n        ${breakpoints.mobileL} {\n          grid-gap: 8px;\n\n          &__day {\n            width: 40px;\n            height: 40px;\n            border-radius: 4px;\n            background-color: ${theme('theme', {\n              light: light.highlight,\n              dark: dark.highlight\n            })};\n            position: relative;\n\n            &.active {\n              color: inherit;\n\n              .bar {\n                opacity: 1;\n                display: block;\n                position: absolute;\n                left: 50%;\n                bottom: 8px;\n                border-radius: 2px;\n                width: 16px;\n                height: 2px;\n                background-color: ${colors.blue};\n                transform: translateX(-50%);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {colors, textSizes, breakpoints, flex} from '@styles/vars';\n\nexport const HealthIndexChartWrapper = styled.div`\n  height: 100%;\n  ${flex.col};\n  justify-content: space-between;\n\n  .total {\n    display: flex;\n    gap: 40px;\n    margin: -4px 24px 0;\n    position: relative;\n\n    &_block {\n      font-size: ${textSizes['12']};\n\n      .counter {\n        position: absolute;\n        top: 0;\n        left: 0;\n      }\n\n      .spacer {\n        opacity: 0;\n      }\n\n      .hidden {\n        display: none;\n      }\n\n      &--cured .h1 {\n        color: ${colors.azure};\n      }\n\n      &--sick {\n        position: relative;\n\n        .h1 {\n          color: ${colors.peach};\n        }\n\n        &:before {\n          content: '';\n          height: 100%;\n          width: 1px;\n          background: ${theme('theme', {\n            light: '#A2C0D4',\n            dark: '#383D40',\n          })};\n          position: absolute;\n          top: 0;\n          left: -20px;\n        }\n      }\n    }\n\n    ${breakpoints.tablet} {\n      .total_block {\n        font-size: ${textSizes['14']};\n\n        .hidden {\n          display: inline;\n        }\n      }\n    }\n\n    ${breakpoints.laptop} {\n      .total_block {\n        font-size: ${textSizes['16']};\n      }\n    }\n  }\n`;","export const y2020 = [\n    {cured: 314, sick: 200},\n    {cured: 200, sick: 400},\n    {cured: 265, sick: 120},\n    {cured: 156, sick: 300},\n    {cured: 412, sick: 200},\n    {cured: 280, sick: 500},\n    {cured: 251, sick: 130},\n    {cured: 180, sick: 300},\n    {cured: 304, sick: 150},\n    {cured: 505, sick: 408},\n    {cured: 328, sick: 200},\n    {cured: 254, sick: 90},\n    {cured: 301, sick: 566},\n    {cured: 459, sick: 189},\n    {cured: 354, sick: 480},\n    {cured: 264, sick: 400},\n    {cured: 309, sick: 200},\n    {cured: 185, sick: 500},\n];\n\nexport const y2021 = [\n    {cured: 450, sick: 250},\n    {cured: 150, sick: 380},\n    {cured: 370, sick: 200},\n    {cured: 300, sick: 180},\n    {cured: 500, sick: 250},\n    {cured: 400, sick: 600},\n    {cured: 200, sick: 300},\n    {cured: 400, sick: 150},\n    {cured: 348, sick: 130},\n    {cured: 400, sick: 280},\n    {cured: 200, sick: 400},\n    {cured: 300, sick: 241},\n    {cured: 380, sick: 480},\n    {cured: 200, sick: 380},\n    {cured: 400, sick: 200},\n    {cured: 500, sick: 250},\n    {cured: 400, sick: 300},\n    {cured: 300, sick: 450},\n];\n\nexport const y2022 = [\n    {cured: 200, sick: 300},\n    {cured: 250, sick: 350},\n    {cured: 390, sick: 240},\n    {cured: 450, sick: 320},\n    {cured: 550, sick: 250},\n    {cured: 420, sick: 200},\n    {cured: 368, sick: 198},\n    {cured: 250, sick: 370},\n    {cured: 322, sick: 200},\n    {cured: 450, sick: 270},\n    {cured: 210, sick: 394},\n    {cured: 180, sick: 270},\n    {cured: 380, sick: 480},\n    {cured: 390, sick: 550},\n    {cured: 450, sick: 210},\n    {cured: 470, sick: 360},\n    {cured: 360, sick: 190},\n    {cured: 300, sick: 250},\n];\n","// styling\nimport {colors, light, dark} from '@styles/vars';\n\n// styled components\nimport {HealthIndexChartWrapper} from '@widgets/HealthIndexChart/style';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetNav from '@components/Widget/WidgetNav';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport {ScatterChart, Scatter, ResponsiveContainer, Tooltip, Cell} from 'recharts';\nimport Legend from '@ui/Legend';\nimport LegendItem from '@ui/Legend/LegendItem';\nimport ChartTooltip from '@components/Chart/Tooltip';\nimport CountUp from 'react-countup';\n\n// utils\nimport PropTypes from 'prop-types';\n\n// hooks\nimport useArrayNav from '@hooks/useArrayNav';\nimport usePeriodNav from '@hooks/usePeriodNav';\nimport {useTheme} from 'styled-components';\n\n// data placeholder\nimport {y2020, y2021, y2022} from '@db/health';\n\nconst HealthIndexChart = ({variant}) => {\n    const {theme} = useTheme();\n    const {periods} = usePeriodNav();\n    const {index, navigate} = useArrayNav(periods);\n\n    const averages = [\n        {cured: 75.08, sick: 45.27},\n        {cured: 84.51, sick: 33.12},\n        {cured: 67.14, sick: 48.65},\n    ]\n\n    const getCurrentData = () => {\n        switch (index) {\n            default:\n            case 0:\n                return y2020;\n            case 1:\n                return y2021;\n            case 2:\n                return y2022;\n        }\n    }\n    const data = getCurrentData();\n\n    const CustomScatterShape = ({cx, cy, fill, ...props}) => {\n        const isDominant = variant === 'both' ? props.dom === props.dataKey : props.dataKey === 'cured';\n\n        return (\n            <svg width=\"10\" height=\"222\" viewBox=\"0 0 10 222\" x={cx} y={cy} fill=\"none\"\n                 xmlns=\"http://www.w3.org/2000/svg\">\n                {\n                    isDominant &&\n                    <path opacity=\"0.5\" d=\"M5 28.3799V220.38\"\n                          stroke={`url(#scatter_${props.dataKey})`} strokeWidth=\"2\"\n                          strokeLinecap=\"round\"/>\n                }\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n                      d=\"M5 10C7.76142 10 10 7.76142 10 5C10 2.23858 7.76142 0 5 0C2.23858 0 0 2.23858 0 5C0 7.76142 2.23858 10 5 10Z\"\n                      fill={fill}/>\n                <defs>\n                    <linearGradient id=\"scatter_cured\" x1=\"5.5\" y1=\"220.38\" x2=\"5.5\" y2=\"28.3799\"\n                                    gradientUnits=\"userSpaceOnUse\">\n                        <stop stopColor={theme === 'light' ? light.widgetBg : dark.widgetBg}/>\n                        <stop offset=\"1\" stopColor={colors.azure}/>\n                    </linearGradient>\n                    <linearGradient id=\"scatter_sick\" x1=\"5.5\" y1=\"220.38\" x2=\"5.5\" y2=\"28.3799\"\n                                    gradientUnits=\"userSpaceOnUse\">\n                        <stop stopColor={theme === 'light' ? light.widgetBg : dark.widgetBg}/>\n                        <stop offset=\"1\" stopColor={colors.peach}/>\n                    </linearGradient>\n                </defs>\n            </svg>\n        );\n    }\n\n    return (\n        <Widget name=\"HealthIndexChart\">\n            <WidgetNav title=\"Health index\" handler={navigate}/>\n            <WidgetBody style={{padding: 0, overflow: 'hidden'}}>\n                <HealthIndexChartWrapper>\n                    <div className=\"total\">\n                        <div className=\"total_block total_block--cured\">\n                            <span className=\"spacer h1\">{averages[index].cured}</span>\n                            <CountUp className=\"counter h1\" end={averages[index].cured} duration={2} decimals={2} />\n                            <span><span className=\"hidden\">patients</span> health rate</span>\n                        </div>\n                        {\n                            variant === 'both' && (\n                                <div className=\"total_block total_block--sick\">\n                                    <span className=\"spacer h1\">{averages[index].sick}</span>\n                                    <CountUp className=\"counter h1\" end={averages[index].sick} duration={2} decimals={2} />\n                                    <span><span className=\"hidden\">patients</span> sick rate</span>\n                                </div>\n                            )\n                        }\n                    </div>\n                    <ResponsiveContainer width=\"100%\" height={250}>\n                        <ScatterChart margin={false} data={data}>\n                            {\n                                variant === 'both' &&\n                                <Scatter dataKey=\"sick\" shape={CustomScatterShape}>\n                                    {data.map((entry, i) => {\n                                        return (\n                                            <Cell key={`cell-${i}`}\n                                                  fill={colors.peach}\n                                                  dom={entry.sick > entry.cured ? 'sick' : 'cured'}\n                                                  dataKey=\"sick\"/>\n                                        )\n                                    })}\n                                </Scatter>\n                            }\n                            <Scatter dataKey=\"cured\" shape={CustomScatterShape}>\n                                {data.map((entry, i) => {\n                                    return (\n                                        <Cell key={`cell-${i}`}\n                                              fill={colors.azure}\n                                              dom={entry.cured > entry.sick ? 'cured' : 'sick'}\n                                              dataKey=\"cured\"/>\n                                    )\n                                })}\n                            </Scatter>\n                            <Tooltip cursor={false} content={<ChartTooltip right/>}/>\n                        </ScatterChart>\n                    </ResponsiveContainer>\n                    <Legend overlay={true}>\n                        <LegendItem color=\"azure\" legend=\"Health rate\"/>\n                        {variant === 'both' && <LegendItem color=\"peach\" legend=\"Sick rate\"/>}\n                    </Legend>\n                </HealthIndexChartWrapper>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nHealthIndexChart.propTypes = {\n    variant: PropTypes.oneOf(['health', 'both']).isRequired\n}\n\nexport default HealthIndexChart;"],"names":["_ref","variant","id","data","elems","props","_objectWithoutProperties","_excluded","width","useWindowSize","theme","useTheme","_useState","useState","_useState2","_slicedToArray","points","setPoints","isTablet","useLayoutEffect","gutter","arguments","length","undefined","gridWidth","document","getElementById","offsetWidth","i","push","generateGridPoints","renderTooltip","active","payload","_jsx","StyledTooltip","className","children","map","item","index","_jsxs","style","background","stroke","value","ResponsiveContainer","height","LineChart","_objectSpread","margin","x1","y1","x2","y2","gradientUnits","stopColor","colors","dark","stopOpacity","offset","light_gray","CartesianGrid","concat","strokeDasharray","strokeLinecap","horizontal","verticalPoints","el","Line","dataKey","Tooltip","cursor","content","AreaChart","top","Area","Labels","styled","div","withConfig","componentId","flex","between","fonts","accent","textSizes","year","name","cured","sick","month","week","Btn","button","error","center","darken","handler","onClick","date","selectedDate","setSelectedDate","_useState3","_useState4","popupVisible","setPopupVisible","popupRef","useRef","events","moment","title","add","hasEvents","filter","event","isSame","config","as","Calendar","locale","navigationLabel","format","navigationAriaLabel","prevLabel","nextLabel","prev2Label","next2Label","nextAriaLabel","prevAriaLabel","tileContent","_ref2","tileClassName","_ref3","onClickDay","Widget","Container","EventsCalendar","Backdrop","Grow","in","timeout","transformOrigin","Popup","ref","Timestamp","time","nanoid","CloseBtn","common","type","strokeWidth","fillOpacity","chartElems","peach","fill","activeDot","r","purple","WidgetHeader","Legend","LegendItem","legend","color","WidgetBody","padding","overflow","justifyContent","CartesianChart","Page","EventsCompactCalendar","EpiContextAreaChart","RadarAreaChart","HealthIndexChart","DiagnosesDonut","col","light","bodyBg","breakpoints","mobileL","blue","highlight","HealthIndexChartWrapper","azure","tablet","laptop","y2020","y2021","y2022","periods","usePeriodNav","_useArrayNav","useArrayNav","navigate","averages","getCurrentData","CustomScatterShape","cx","cy","isDominant","dom","viewBox","x","y","xmlns","opacity","d","fillRule","clipRule","widgetBg","WidgetNav","CountUp","end","duration","decimals","ScatterChart","Scatter","shape","entry","Cell","ChartTooltip","right","overlay"],"sourceRoot":""}