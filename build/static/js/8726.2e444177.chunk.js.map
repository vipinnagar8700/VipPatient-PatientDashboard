{"version":3,"file":"static/js/8726.2e444177.chunk.js","mappings":"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","sources":["UI/Btn/index.jsx","constants/colors.js","../node_modules/@mui/material/ListItemIcon/listItemIconClasses.js","../node_modules/@mui/material/MenuItem/menuItemClasses.js","../node_modules/@mui/material/MenuItem/MenuItem.js","widgets/TasksList/index.jsx","pages/DashboardC.jsx","widgets/ConfirmedDiagnoses/AppointmentRequest.jsx","widgets/ConfirmedDiagnoses/List/style.js","widgets/ConfirmedDiagnoses/index.jsx","../node_modules/@mui/material/Divider/dividerClasses.js"],"sourcesContent":["// styling\nimport styled from 'styled-components/macro';\nimport {colors, textSizes, fonts, flex} from '@styles/vars';\nimport {darken} from 'polished';\n\n// utils\nimport {motion, AnimatePresence} from 'framer-motion';\nimport PropTypes from 'prop-types';\n\nconst Button = styled.button`\n  border-radius: 8px;\n  background-color: ${colors.blue};\n  color: #fff;\n  font-size: ${textSizes['14']};\n  font-family: ${fonts.accent};\n  height: 40px;\n  width: 100%;\n  display: flex;\n  ${flex.center};\n  gap: 8px;\n  line-height: 1;\n  transition: background-color var(--transition);\n  \n\n  &:hover, &:focus {\n    background-color: ${darken(0.1, colors.blue)};\n  }\n\n  &.success {\n    background-color: ${colors.success};\n\n    &:hover, &:focus {\n      background-color: ${darken(0.1, colors.success)};\n    }\n  }\n\n  &.error {\n    background-color: ${colors.error};\n\n    &:hover, &:focus {\n      background-color: ${darken(0.1, colors.error)};\n    }\n  }\n\n  &.disabled {\n    background-color: ${colors.gray};\n    pointer-events: none;\n  }\n`\n\nconst Btn = ({text, handler, type = 'button', isVisible = true, className, icon}) => {\n    return (\n        <AnimatePresence>\n            {\n                isVisible && (\n                    <Button as={motion.button}\n                            className={className ? className : ''}\n                            onClick={handler}\n                            type={type}\n                            initial={false}\n                            animate={{opacity: 1}}\n                            exit={{opacity: 0}}\n                            transition={{duration: .3}}>\n                        {icon && <i className={`icon icon-${icon}`} /> } {text}\n                    </Button>\n                )\n            }\n        </AnimatePresence>\n    )\n}\n\nBtn.propTypes = {\n    text: PropTypes.string.isRequired,\n    handler: PropTypes.func,\n    type: PropTypes.oneOf(['button', 'submit', 'reset']),\n    isVisible: PropTypes.bool,\n    className: PropTypes.string,\n    icon: PropTypes.string\n}\n\nexport default Btn;","export const colorTypes = [\n    {cat: 'emergency', label: 'Emergency', color: 'red'},\n    {cat: 'consultation', label: 'Consultation', color: 'azure'},\n    {cat: 'test', label: 'Examination', color: 'teal'},\n    {cat: 'checkup', label: 'Routine checkup', color: 'purple'},\n    {cat: 'sick', label: 'Sick visit', color: 'orange'},\n];\n\nexport const tasksColors = [\n    {cat: 'work', color: 'teal'},\n    {cat: 'travel', color: 'orange'},\n    {cat: 'family', color: 'azure'},\n    {cat: 'other', color: 'purple'}\n]","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListItemIconUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemIcon', slot);\n}\nconst listItemIconClasses = generateUtilityClasses('MuiListItemIcon', ['root', 'alignItemsFlexStart']);\nexport default listItemIconClasses;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"component\", \"dense\", \"divider\", \"disableGutters\", \"focusVisibleClassName\", \"role\", \"tabIndex\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport { dividerClasses } from '../Divider';\nimport { listItemIconClasses } from '../ListItemIcon';\nimport { listItemTextClasses } from '../ListItemText';\nimport menuItemClasses, { getMenuItemUtilityClass } from './menuItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body1, {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, {\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, ownerState.dense && _extends({\n  minHeight: 32,\n  // https://m2.material.io/components/menus#specs > Dense\n  paddingTop: 4,\n  paddingBottom: 4\n}, theme.typography.body2, {\n  [`& .${listItemIconClasses.root} svg`]: {\n    fontSize: '1.25rem'\n  }\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n  const {\n      autoFocus = false,\n      component = 'li',\n      dense = false,\n      divider = false,\n      disableGutters = false,\n      focusVisibleClassName,\n      role = 'menuitem',\n      tabIndex: tabIndexProp,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    disableGutters\n  }), [context.dense, dense, disableGutters]);\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const ownerState = _extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, _extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n      className: clsx(classes.root, className)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes /* @typescript-to-proptypes-ignore */.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * If `true`, the component is selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;","// styling\n\n// styled components\nimport { DraggableListItem, DraggablePlannerItem } from '../../components/Todos/DnDLayout/style';\n// styled components\nimport { Form, BtnWrapper, InputWrapper } from '../../components/Todos/AddForm/style';\n\n// components\nimport Field from '@ui/Field';\nimport Btn from '@ui/Btn';\nimport Grow from '@mui/material/Grow';\nimport Collapse from '@mui/material/Collapse';\nimport { useSnackbar } from 'notistack';\n// utils\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTodo, toggleCollapse } from '@store/features/todos';\nimport { tasksOptions } from '@constants/options';\nimport { useState } from 'react';\nimport { nanoid } from 'nanoid';\n// components\nimport Todo from '@components/Todos/Todo';\nimport {\n    DndContext,\n    closestCenter,\n    TouchSensor,\n    PointerSensor,\n    useSensor,\n    useSensors,\n} from '@dnd-kit/core';\nimport {\n    arrayMove,\n    SortableContext,\n    verticalListSortingStrategy,\n    useSortable\n} from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { restrictToVerticalAxis } from '@dnd-kit/modifiers';\n\n// hooks\nimport useMobileDetect from 'use-mobile-detect-hook';\n\n// utils\nimport propTypes from 'prop-types';\nimport { updateOrder } from '@store/features/todos';\nimport { Content, ListItemContainer, Main } from '../../components/Todos/Todo/list';\nimport Checkbox from '@ui/Checkbox';\nimport { useEffect } from 'react';\nimport { ADDAPPOINRTMN, GETAPPOINTMENTTYPE, GetAppointmentRequest } from '@components/Api/AllApi';\nimport { Grid, InputLabel, MenuItem, Select, TextField, Typography } from '@mui/material';\nimport styled from 'styled-components/macro';\n// styled components\n\n// components\n\n// utils\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport { Navbar } from '@components/Widget/style';\nimport TodosLegend from '@components/Todos/TodosLegend';\nimport AddForm from '@components/Todos/AddForm';\nimport DnDLayout from '@components/Todos/DnDLayout';\nimport ScrollContainer from '@components/ScrollContainer';\n\n// hooks\nimport { useRef } from 'react';\nimport useContentHeight from '@hooks/useContentHeight';\nimport CustomSelect from '@ui/Select';\n\nconst Footer = styled.div`\n  padding: 2px 24px 22px 24px;\n`;\n\nconst TasksList = ({ isVisible, visibilityHandler, variant }) => {\n    const { enqueueSnackbar } = useSnackbar();\n    // const todos = useSelector(state => state['todos'].todos);\n    const [isFormVisible, setFormVisible] = useState(false);\n    const [day, setDay] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [note, setNote] = useState(\"\");\n    const [amount, setAmount] = useState(\"\"); // You need to set clinicID\n\n    const headerRef = useRef(null);\n    const footerRef = useRef(null);\n    const listRef = useRef(null);\n    const height = useContentHeight(headerRef, footerRef);\n\n    useEffect(() => {\n        listRef.current.scrollTo(0, 0);\n    }, [isFormVisible]);\n\n\n    const handleAddAppointment = () => {\n        console.log(day, type, note, amount, \"9999999999999999999999999999\")\n\n        if (day === '' || type === '' || note === '' || amount === '') {\n            enqueueSnackbar(\"Please fill in all the required fields.\", {\n                variant: 'error',\n                anchorOrigin: {\n                    vertical: 'top',\n                    horizontal: 'right',\n                },\n            });\n            return; // Exit the function early\n        }\n\n        ADDAPPOINRTMN(day, type, note, amount)\n            .then(response => {\n                // Handle the response here\n                console.log(\"Appointment added successfully!\", response);\n                enqueueSnackbar(response.messege, {\n                    variant: 'success',\n                    anchorOrigin: {\n                        vertical: 'top',\n                        horizontal: 'right',\n                    },\n                });\n                window.location.reload()\n            })\n            .catch(error => {\n                // Handle errors here\n                // console.error(\"Error adding appointment:\", error);\n                enqueueSnackbar(\"Error booking appointment: \" + error, {\n                    variant: 'error',\n                    anchorOrigin: {\n                        vertical: 'top',\n                        horizontal: 'right',\n                    },\n                });\n            });\n    }\n\n\n    const [task, setTask] = useState('');\n    const [category, setCategory] = useState(null);\n    const dispatch = useDispatch();\n    const timestamp = Date.now();\n\n    const handleTaskChange = (e) => {\n        setTask(e.target.value);\n    }\n\n    const handleCategoryChange = e => {\n        setCategory(e);\n    }\n\n    const resetForm = () => {\n        setTask('');\n        setCategory(null);\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (task !== '' && category !== null) {\n            const id = nanoid(5);\n            dispatch(addTodo({\n                id,\n                name: task,\n                timestamp,\n                label: category.value,\n                expanded: false\n            }));\n            setTimeout(() => dispatch(toggleCollapse({ id })), 300);\n\n        }\n    }\n    const device = useMobileDetect();\n    const todos = useSelector(state => state['todos'].todos);\n    const DnDItem = variant === 'list' ? DraggableListItem : DraggablePlannerItem;\n    const sensors = useSensors(useSensor(PointerSensor, {\n        activationConstraint: {\n            distance: 15,\n        }\n    }), useSensor(TouchSensor, {\n        activationConstraint: {\n            delay: 2000,\n            tolerance: 5,\n        },\n    }));\n\n    const SortableItem = (props) => {\n        const {\n            attributes,\n            listeners,\n            setNodeRef,\n            transform,\n            transition,\n            isOver,\n            isDragging,\n        } = useSortable({ id: props.id });\n\n        const style = {\n            transform: CSS.Transform.toString(transform),\n            transition,\n            zIndex: isOver || isDragging ? 10 : 0,\n            position: 'relative',\n            touchAction: 'none',\n        };\n\n        return (\n            <div ref={setNodeRef} style={style} {...attributes} {...listeners}>\n                {props.children}\n            </div>\n        );\n    }\n\n    const onDragEnd = e => {\n        const { active, over } = e;\n\n        if (active.id !== over.id) {\n            const oldIndex = todos.findIndex(({ id }) => id === active.id);\n            const newIndex = todos.findIndex(({ id }) => id === over.id);\n            dispatch(updateOrder(arrayMove(todos, oldIndex, newIndex)));\n        }\n    }\n\n\n    const [post, setPost] = useState(false)\n\n    useEffect(() => {\n\n        const GetEEEE = GetAppointmentRequest()\n        if (GetEEEE) {\n            GetEEEE.then((data) => {\n                console.log(data?.result, \"AUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUuu\")\n                setPost(data?.result || [])\n            })\n        }\n\n    }, [])\n\n\n    const [AAA, setAAAA] = useState(false)\n\n    useEffect(() => {\n\n\n        const GETAPPOINTTY = GETAPPOINTMENTTYPE();\n        if (GETAPPOINTTY) {\n            GETAPPOINTTY.then((data) => {\n                console.log(data?.result, \"OOOOOOOOOOOOOOOOOOOOOOOOOOOOoo\")\n                setAAAA(data?.result)\n            })\n        }\n\n    }, [])\n\n\n    return (\n        <Widget name=\"TasksList\" mobile={600}>\n            <WidgetHeader title=\"Request an Appointment\" flex=\"column\" style={{ paddingBottom: 2 }} elRef={headerRef}>\n                <Navbar as=\"div\" style={{ margin: '0 -22px' }}>\n                    Preferred Day of Week\n                </Navbar>\n            </WidgetHeader>\n            <ScrollContainer height={height}>\n                <div className=\"track\" ref={listRef} style={{ overflowY: isFormVisible ? 'hidden' : 'auto' }}>\n                    <AddForm isVisible={isFormVisible} visibilityHandler={setFormVisible} variant=\"list\" />\n                    <DndContext sensors={sensors} collisionDetection={closestCenter} onDragEnd={onDragEnd}\n                        modifiers={[restrictToVerticalAxis]} autoScroll={true}>\n                        <SortableContext items={todos} strategy={verticalListSortingStrategy} disabled={!device.isDesktop()}>\n                            {post && post.map(todo => (\n                                <SortableItem key={todo.id} id={todo.id}>\n                                    <DnDItem>\n                                        <ListItemContainer className=\"list-item\" tabIndex={0}>\n                                            <Content style={{ justifyContent: \"space-between\" }}>\n                                                <TextField type='checkbox' sx={{ height: 24, width: 24 }} onChange={e => setDay(e.target.checked)} />\n                                                <Typography ml={3}>\n                                                    {todo.dotw}\n\n\n                                                </Typography>\n                                                {/* <Main  >\n                                                    <input type=\"text\" readOnly={true} />\n                                                </Main> */}\n\n                                            </Content>\n\n                                        </ListItemContainer>\n                                    </DnDItem>\n                                </SortableItem>\n                            ))}\n                        </SortableContext>\n                    </DndContext>\n                </div>\n            </ScrollContainer>\n            <Footer >\n                <InputLabel>Reason for appointment</InputLabel>\n                <Select size='small' fullWidth onChange={e => setType(e.target.value)}>\n                    <MenuItem disabled> Choose a reason\n                    </MenuItem>\n                    {\n                        AAA && AAA.map((data, index) => {\n                            return (\n                                <MenuItem value={data.id} key={index}>{data.name}\n                                </MenuItem>\n                            )\n                        })\n                    }\n                </Select>\n                <InputLabel>Notes</InputLabel>\n                <TextField sx={{ marginTop: 1 }} fullWidth placeholder=\"Notes\"\n                    // value={Note}\n                    size='small'\n                    name='note'\n                    value={note}\n                    onChange={e => setNote(e.target.value)}\n                    className=\"field\"\n                />\n                <InputLabel>Amount</InputLabel>\n                <TextField sx={{ marginTop: 1 }} fullWidth placeholder=\"Amount\"\n                    value={amount}\n                    size='small'\n                    name='amount'\n                    onChange={e => setAmount(e.target.value)}\n                    className=\"field\"\n                />\n\n                <button style={{ backgroundColor: 'green', color: \"white\", padding: 10, marginTop: 3 }} onClick={handleAddAppointment} type=\"submit\"  >Submit Request</button>\n            </Footer>\n        </Widget>\n    )\n}\n\nexport default TasksList;","// components\nimport Page from '@layout/Page';\nimport TasksList from '@widgets/TasksList';\nimport ConfirmedDiagnoses from '@widgets/ConfirmedDiagnoses';\nimport DiagnosesDonut from '@widgets/DiagnosesDonut';\nimport RadarAreaChart from '@widgets/RadarAreaChart';\nimport Sidebar from '@layout/Sidebar';\nimport Panel from '@layout/Panel';\nimport AppointmentRequest from '@widgets/ConfirmedDiagnoses/AppointmentRequest';\n\nconst DashboardC = () => {\n    return (\n        <><Sidebar/>\n        <Panel/>\n        <Page title=\"Appointments\">\n            <div key=\"task-list\">\n                <TasksList />\n            </div>\n            <div key=\"confirmed\">\n                <ConfirmedDiagnoses nav=\"arrows\" />\n            </div>\n            \n\n            \n        </Page>\n        </>\n        \n    )\n}\n\nexport default DashboardC;","// components\r\nimport Widget from '@components/Widget';\r\nimport WidgetHeader from '@components/Widget/WidgetHeader';\r\nimport WidgetNav from '@components/Widget/WidgetNav';\r\nimport WidgetBody from '@components/Widget/WidgetBody';\r\nimport ConfirmedDiagnosesList from '@widgets/ConfirmedDiagnoses/List';\r\nimport PeriodNav from '@components/PeriodNav';\r\nimport DataTable from 'react-data-table-component';\r\nimport DataTableExtensions from 'react-data-table-component-extensions';\r\nimport 'react-data-table-component-extensions/dist/index.css';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\n// hooks\r\nimport usePeriodNav from '@hooks/usePeriodNav';\r\nimport useArrayNav from '@hooks/useArrayNav';\r\n\r\n// data placeholder\r\nimport { confirmed } from '@db/confirmed';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TextField from '@mui/material/TextField';\r\nimport Badge from '@mui/material/Badge';\r\nimport { Stack } from '@mui/material';\r\nimport { useEffect, useState } from 'react';\r\nimport { GETAPPREquest, GetAppointmentRequest } from '@components/Api/AllApi';\r\n\r\nconst AppointmentRequest = ({ nav }) => {\r\n    const { period, periods, setPeriod } = usePeriodNav();\r\n    const { index, navigate } = useArrayNav(periods);\r\n\r\n    const [post, setPost] = useState([])\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        const AllAppoinementData = GETAPPREquest()\r\n        if (AllAppoinementData) {\r\n            AllAppoinementData.then((data) => {\r\n                console.log(data?.result, \"JJJJJJJJJJJJJJJJJJJJJJJJJJ\")\r\n                setPost(data?.result)\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    const columns = [\r\n\r\n        {\r\n            name: 'Date/Time',\r\n            selector: (row) => {\r\n                const createdAt = new Date(row.created_at);\r\n                const options = {\r\n                    year: 'numeric',\r\n                    month: '2-digit',\r\n                    day: '2-digit',\r\n                    hour: '2-digit',\r\n                    minute: '2-digit',\r\n                    second: '2-digit',\r\n                    hour12: false,\r\n                };\r\n                return createdAt.toLocaleString('en-US', options);\r\n            },\r\n            sortable: true,\r\n            minWidth: '70px',\r\n            maxWidth: '35%',\r\n        },\r\n        {\r\n            name: 'Amount Paid',\r\n            selector: (row) => row.amount,\r\n            sortable: true,\r\n            minWidth: '70px',\r\n            maxWidth: '35%',\r\n        },\r\n        {\r\n            name: 'Status',\r\n            selector: (row) => `Appointment Created ( ${row.status})`,\r\n            sortable: true,\r\n            // minWidth: '70px',\r\n            // maxWidth: '35%',\r\n        },\r\n    ];\r\n\r\n\r\n    const data = post && post.map(item => ({\r\n        id: item?.id || '',\r\n        created_at: item?.created_at || '',\r\n        amount: item?.amount || '',\r\n        status: item?.status || '',\r\n    }));\r\n\r\n    const tableData = {\r\n        columns,\r\n        data,\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Widget name=\"AppointmentRequest\">\r\n                {\r\n                    nav === 'tabs' ?\r\n                        <WidgetHeader title=\"Appointment Request\" style={{ paddingBottom: 16 }} />\r\n                        :\r\n                        <WidgetNav title=\"Appointment Request\" handler={navigate} style={{ paddingBottom: 8 }} />\r\n                }\r\n                <WidgetBody style={{ paddingBottom: 26 }}>\r\n\r\n                    <Card sx={{ minWidth: 732, backgroundColor: '#F1F5F8' }}>\r\n                        <CardContent>\r\n\r\n                            <div className=\"Order Page\">\r\n                                <DataTableExtensions export={false} print={false}\r\n                                    {...tableData}\r\n                                >\r\n                                    <DataTable\r\n                                        noHeader\r\n                                        defaultSortField=\"id\"\r\n                                        defaultSortAsc={false}\r\n                                        pagination\r\n                                        highlightOnHover\r\n                                    />\r\n                                </DataTableExtensions>\r\n                            </div>\r\n                        </CardContent>\r\n\r\n                    </Card>\r\n\r\n                </WidgetBody>\r\n            </Widget>\r\n\r\n        </>\r\n    )\r\n}\r\nAppointmentRequest.propTypes = {\r\n    nav: PropTypes.oneOf(['arrows', 'tabs']).isRequired\r\n}\r\n\r\nexport default AppointmentRequest;","import styled from 'styled-components/macro';\nimport {flex, textSizes, fonts} from '@styles/vars';\n\nexport const List = styled.ul`\n  gap: 22px;\n  margin-top: 20px;\n  ${flex.col}\n`\n\nexport const Block = styled.div`\n  display: flex;\n  ${flex.between}\n  margin-bottom: 7px;\n  font-size: ${textSizes['14']};\n`\n\nexport const Text = styled.div`\n  display: flex;\n  gap: 4px;\n  font-family: ${fonts.accent};\n  \n  .num {\n    font-weight: 500;\n  }\n  & + .label {\n    text-transform: capitalize;\n  }\n`","// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetNav from '@components/Widget/WidgetNav';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport ConfirmedDiagnosesList from '@widgets/ConfirmedDiagnoses/List';\nimport PeriodNav from '@components/PeriodNav';\nimport DataTable from 'react-data-table-component';\nimport DataTableExtensions from 'react-data-table-component-extensions';\nimport 'react-data-table-component-extensions/dist/index.css';\n\n// utils\nimport PropTypes from 'prop-types';\n\n// hooks\nimport usePeriodNav from '@hooks/usePeriodNav';\nimport useArrayNav from '@hooks/useArrayNav';\n\n// data placeholder\nimport { confirmed } from '@db/confirmed';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport TextField from '@mui/material/TextField';\nimport Badge from '@mui/material/Badge';\nimport { Stack, Grid } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { UpcommingAppointmtnt } from '@components/Api/AllApi';\nimport AppointmentRequest from './AppointmentRequest';\n\nconst ConfirmedDiagnoses = ({ nav }) => {\n    const { period, periods, setPeriod } = usePeriodNav();\n    const { index, navigate } = useArrayNav(periods);\n    const [PatientSData, setPatientSData] = useState([])\n    const [count, setCount] = useState(0)\n\n\n    useEffect(() => {\n\n\n        const APPDATA = UpcommingAppointmtnt()\n        if (APPDATA) {\n            APPDATA.then((data) => {\n                console.log(data, \"Upcomming Appointment Data!\")\n                setPatientSData(data.result || []);\n            })\n        }\n\n\n\n    }, [])\n\n\n    const columns = [\n\n        {\n            name: 'Date/Time',\n            selector: row => row.name,\n            sortable: true,\n            minWidth: '70px',\n            maxWidth: '35%',\n        },\n        {\n            name: 'Location',\n            selector: row => row.created_at,\n            sortable: true,\n            minWidth: '70px',\n            maxWidth: '35%',\n        },\n        {\n            name: 'Other Information',\n            selector: row => `${row.img} w/ ${row.clinic_name}`,\n            sortable: true,\n            minWidth: '70px',\n            maxWidth: '35%',\n        },\n    ];\n\n\n    const data = PatientSData && PatientSData.map(item => ({\n        id: item?.id || '',\n        clinic_name: item?.clinic?.[0]?.clinic_name || '',\n        name: item?.start_date || '',\n        img: item?.doctor?.[0]?.name || '',\n        created_at: item?.location?.[0]?.name || '',\n    }));\n\n\n    const tableData = {\n        columns,\n        data,\n    };\n\n\n    return (\n        <>\n            <Grid container>\n                <Grid item p={1}>\n                    <Widget name=\"UpcommingDashboardTabs\">\n                        {\n                            nav === 'tabs' ?\n                                <WidgetHeader title=\"Upcoming Appointments\" style={{ paddingBottom: 16 }} />\n                                :\n                                <WidgetNav title=\"Upcoming Appointments\" handler={navigate} style={{ paddingBottom: 8 }} />\n                        }\n                        <WidgetBody style={{ paddingBottom: 26 }}>\n\n                            <Card sx={{ minWidth: 445, '@media screen and (max-width: 100%)': { minWidth: '100%' }, backgroundColor: '#F1F5F8' }}>\n                                <CardContent>\n                                    <Typography sx={{ fontSize: 12 }}>If you are unable to keep your appointment kindly give at least 48 hours notice. All no shows within 48 hours may be subject to a cancellation fee added to your next appointment.</Typography>\n                                    <div className=\"Order Page\">\n                                        <DataTableExtensions export={false} print={false}\n                                            {...tableData}\n                                        >\n                                            <DataTable\n                                                noHeader\n                                                defaultSortField=\"id\"\n                                                defaultSortAsc={false}\n                                                pagination\n                                                highlightOnHover\n                                            />\n                                        </DataTableExtensions>\n                                    </div>\n                                </CardContent>\n\n                            </Card>\n\n                        </WidgetBody>\n                    </Widget>\n                </Grid>\n                <Grid item p={1} >\n                    <AppointmentRequest />\n\n                </Grid>\n            </Grid>\n\n        </>\n    )\n}\n\nConfirmedDiagnoses.propTypes = {\n    nav: PropTypes.oneOf(['arrows', 'tabs']).isRequired\n}\n\nexport default ConfirmedDiagnoses;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getDividerUtilityClass(slot) {\n  return generateUtilityClass('MuiDivider', slot);\n}\nconst dividerClasses = generateUtilityClasses('MuiDivider', ['root', 'absolute', 'fullWidth', 'inset', 'middle', 'flexItem', 'light', 'vertical', 'withChildren', 'withChildrenVertical', 'textAlignRight', 'textAlignLeft', 'wrapper', 'wrapperVertical']);\nexport default dividerClasses;"],"names":["Button","styled","button","withConfig","componentId","colors","blue","textSizes","fonts","accent","flex","center","darken","success","error","gray","_ref","text","handler","_ref$type","type","_ref$isVisible","isVisible","className","icon","_jsx","AnimatePresence","children","_jsxs","as","motion","onClick","initial","animate","opacity","exit","transition","duration","concat","colorTypes","cat","label","color","tasksColors","generateUtilityClasses","getMenuItemUtilityClass","slot","generateUtilityClass","_excluded","MenuItemRoot","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","props","styles","ownerState","root","dense","divider","disableGutters","gutters","_extends2","theme","_extends","typography","body1","display","justifyContent","alignItems","position","textDecoration","minHeight","paddingTop","paddingBottom","boxSizing","whiteSpace","paddingLeft","paddingRight","borderBottom","vars","palette","backgroundClip","backgroundColor","action","hover","_defineProperty","menuItemClasses","selected","primary","mainChannel","selectedOpacity","alpha","main","focusVisible","focusOpacity","hoverOpacity","focus","disabled","disabledOpacity","dividerClasses","marginTop","spacing","marginBottom","inset","marginLeft","listItemTextClasses","listItemIconClasses","minWidth","breakpoints","up","body2","fontSize","React","inProps","ref","useThemeProps","_props$autoFocus","autoFocus","_props$component","component","_props$dense","_props$divider","_props$disableGutters","focusVisibleClassName","_props$role","role","tabIndexProp","tabIndex","other","_objectWithoutPropertiesLoose","context","ListContext","childContext","menuItemRef","useEnhancedEffect","current","classes","slots","composedClasses","composeClasses","useUtilityClasses","handleRef","useForkRef","undefined","Provider","value","clsx","Footer","div","visibilityHandler","variant","enqueueSnackbar","useSnackbar","_useState","useState","_useState2","_slicedToArray","isFormVisible","setFormVisible","_useState3","_useState4","day","setDay","_useState5","_useState6","setType","_useState7","_useState8","note","setNote","_useState9","_useState10","amount","setAmount","headerRef","useRef","footerRef","listRef","height","useContentHeight","useEffect","scrollTo","_useState11","_useState12","_useState13","_useState14","dispatch","useDispatch","device","Date","now","useMobileDetect","todos","useSelector","state","DnDItem","DraggableListItem","DraggablePlannerItem","sensors","useSensors","useSensor","PointerSensor","activationConstraint","distance","TouchSensor","delay","tolerance","SortableItem","_useSortable","useSortable","id","attributes","listeners","setNodeRef","transform","isOver","isDragging","style","CSS","Transform","toString","zIndex","touchAction","_objectSpread","_useState15","_useState16","post","setPost","GetEEEE","GetAppointmentRequest","then","data","console","log","result","_useState17","_useState18","AAA","setAAAA","GETAPPOINTTY","GETAPPOINTMENTTYPE","Widget","mobile","WidgetHeader","title","elRef","Navbar","margin","ScrollContainer","overflowY","AddForm","DndContext","collisionDetection","closestCenter","onDragEnd","e","active","over","oldIndex","findIndex","_ref2","newIndex","_ref3","updateOrder","arrayMove","modifiers","restrictToVerticalAxis","autoScroll","SortableContext","items","strategy","verticalListSortingStrategy","isDesktop","map","todo","ListItemContainer","Content","TextField","sx","width","onChange","target","checked","Typography","ml","dotw","InputLabel","Select","size","fullWidth","MenuItem","index","placeholder","padding","ADDAPPOINRTMN","response","messege","anchorOrigin","vertical","horizontal","window","location","reload","catch","_Fragment","Sidebar","Panel","Page","TasksList","ConfirmedDiagnoses","nav","_usePeriodNav","usePeriodNav","periods","period","_useArrayNav","setPeriod","useArrayNav","navigate","AllAppoinementData","GETAPPREquest","tableData","columns","selector","row","created_at","toLocaleString","year","month","hour","minute","second","hour12","sortable","maxWidth","status","item","WidgetNav","WidgetBody","Card","CardContent","DataTableExtensions","export","print","DataTable","noHeader","defaultSortField","defaultSortAsc","pagination","highlightOnHover","ul","col","between","PatientSData","setPatientSData","APPDATA","UpcommingAppointmtnt","img","clinic_name","_item$clinic","_item$clinic$","_item$doctor","_item$doctor$","_item$location","_item$location$","clinic","start_date","doctor","Grid","container","p","AppointmentRequest","getDividerUtilityClass"],"sourceRoot":""}