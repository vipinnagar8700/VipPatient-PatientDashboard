{"version":3,"file":"static/js/2134.9fc7b667.chunk.js","mappings":"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","sources":["pages/PatientReviews.jsx"],"sourcesContent":["// components\nimport Page from '@layout/Page';\nimport ModalWindow from '@components/ModalWindow';\nimport Tab from 'react-bootstrap/Tab';\nimport Content from '@components/Reviews/Content';\nimport ReviewsRatingList from '@components/Reviews/List';\nimport DataTable from 'react-data-table-component';\nimport DataTableExtensions from 'react-data-table-component-extensions';\nimport 'react-data-table-component-extensions/dist/index.css';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport TextField from '@mui/material/TextField';\nimport Badge from '@mui/material/Badge';\nimport { Stack } from '@mui/material';\n// hooks\nimport { useState, useEffect } from 'react';\nimport { GetAllORderData } from '@components/Api/AllApi';\nimport { Link } from 'react-router-dom';\nimport Sidebar from '@layout/Sidebar';\nimport Panel from '@layout/Panel';\n\n\n\nconst PatientReviews = () => {\n    const [Orderse, SetOrder] = useState([])\n    const [selectedTab, setSelectedTab] = useState('');\n    const [openModal, setOpenModal] = useState(false);\n    const smallScreen = window.matchMedia('(max-width: 1038.98px)').matches;\n\n    const handleModalClose = () => {\n        setOpenModal(false);\n        setSelectedTab('');\n    }\n\n    window.addEventListener('resize', () => {\n        if (smallScreen) {\n            handleModalClose();\n        }\n    });\n\n    useEffect(() => {\n\n\n        const GetOrder = GetAllORderData()\n        if (GetOrder) {\n            GetOrder.then((data) => {\n                console.log(data.result, \"GGGGGGGGGGGGGGGGGGGG\")\n                SetOrder(data.result)\n            })\n        }\n        else {\n            console.log(\"error\")\n        }\n    }, [])\n\n    const columns = [\n        {\n            name: 'Order ID',\n            selector: (row) => row.order_id,\n            sortable: true,\n        },\n        {\n            name: 'Date/Time',\n            selector: (row) => {\n                const createdAt = new Date(row.created_at);\n                const options = {\n                    year: 'numeric',\n                    month: '2-digit',\n                    day: '2-digit',\n                    hour: '2-digit',\n                    minute: '2-digit',\n                    second: '2-digit',\n                    hour12: false,\n                };\n                return createdAt.toLocaleString('en-US', options);\n            },\n            sortable: true,\n        },\n        {\n            name: 'Provider',\n            selector: (row) => row.company_name,\n            sortable: true,\n\n        },\n        {\n            name: 'Amount',\n            selector: (row) => row.total_amount,\n            sortable: true,\n        },\n        {\n            name: 'Status',\n            selector: (row) => row.status,\n            sortable: true,\n        },\n        {\n            name: 'Last Updated',\n            selector: (row) => {\n                const createdAt = new Date(row.updated_at);\n                const options = {\n                    year: 'numeric',\n                    month: '2-digit',\n                    day: '2-digit',\n                    hour: '2-digit',\n                    minute: '2-digit',\n                    second: '2-digit',\n                    hour12: false,\n                };\n                return createdAt.toLocaleString('en-US', options);\n            },\n            sortable: true,\n        },\n        {\n            name: 'Actions',\n            sortable: true,\n            cell: (row) => (\n                <button style={{ width: '150px', backgroundColor: '#2BAA27', height: '40px', borderRadius: 4, color: 'white', fontWeight: 600 }} sx={{ fontWeight: 300 }} >\n                    <Link to={`/patient_reviews/OrderList/${row.id}`}>\n                        View\n                    </Link>\n                </button>\n            ),\n            button: true,\n            minWidth: '200px',\n        },\n    ];\n\n    console.log(Orderse, \"KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKk\")\n    const data = Orderse && Orderse.map(item => ({\n        id: item?.id || '',\n        order_id: item?.order_id || '',\n        created_at: item?.created_at || '',\n        company_name: item?.company?.company_name || '',\n        total_amount: item?.total_amount || '',\n        status: item?.status || '',\n        updated_at: item?.updated_at || '',\n    }));\n\n\n    const tableData = {\n        columns,\n        data,\n    };\n\n    return (\n        // <Tab.Container transition={true} activeKey={selectedTab} onSelect={setSelectedTab}>\n        //     <Page title=\"My Order\">\n        <>\n            <Sidebar />\n            <Panel />\n            <Page title=\"My Order\">\n                <div key=\"balance\">\n                    <Card sx={{ minWidth: 1175, '@media screen and (max-width: 1400px)': { minWidth: '100%' } }}>\n                        <CardContent>\n                            <Typography sx={{ fontSize: 18, fontWeight: 400 }} color=\"text.secondary\" gutterBottom>\n                                My Order\n                            </Typography>\n                            <Card sx={{ minWidth: 1145, '@media screen and (max-width: 1400px)': { minWidth: '100%' }, backgroundColor: '#F1F5F8' }}>\n                                <CardContent>\n                                    <Typography sx={{ fontSize: 16, fontWeight: 300 }} color=\"text.secondary\" gutterBottom>\n                                        {Orderse && Orderse.length} total orders found\n                                    </Typography>\n                                    <div className=\"Order Page\">\n                                        <DataTableExtensions export={false} print={false}\n                                            {...tableData}\n                                        >\n                                            <DataTable\n                                                noHeader\n                                                defaultSortField=\"id\"\n                                                defaultSortAsc={false}\n                                                pagination\n                                                highlightOnHover\n                                            />\n                                        </DataTableExtensions>\n                                    </div>\n\n                                </CardContent>\n\n                            </Card>\n                        </CardContent>\n\n                    </Card>\n                </div>\n\n            </Page>\n\n        </>\n\n\n    )\n}\n\nexport default PatientReviews;"],"names":["_useState","useState","_useState2","_slicedToArray","Orderse","SetOrder","_useState3","_useState4","setSelectedTab","_useState5","_useState6","setOpenModal","smallScreen","window","matchMedia","matches","addEventListener","useEffect","GetOrder","GetAllORderData","then","data","console","log","result","columns","name","selector","row","order_id","sortable","Date","created_at","toLocaleString","year","month","day","hour","minute","second","hour12","company_name","total_amount","status","updated_at","cell","_jsx","style","width","backgroundColor","height","borderRadius","color","fontWeight","sx","children","Link","to","concat","id","button","minWidth","tableData","map","item","_item$company","company","_jsxs","_Fragment","Sidebar","Panel","Page","title","Card","CardContent","Typography","fontSize","gutterBottom","length","className","DataTableExtensions","_objectSpread","export","print","DataTable","noHeader","defaultSortField","defaultSortAsc","pagination","highlightOnHover"],"sourceRoot":""}