{"version":3,"file":"static/js/3262.c281b67e.chunk.js","mappings":"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","sources":["UI/IconLink/index.jsx","UI/Navigator/MonthNavigator/index.jsx","UI/SearchBar/index.jsx","UI/Select/style.js","UI/Select/index.jsx","components/TestItem/style.js","components/TestItem/index.jsx","components/Widget/WidgetBody/index.jsx","constants/options.js","db/patient_tests.js","widgets/PatientsTests/style.js","widgets/PatientsTests/index.jsx","pages/Tests.jsx"],"sourcesContent":["// styling\nimport styled from 'styled-components/macro';\nimport {colors, textSizes} from '@styles/vars';\nimport {darken} from 'polished';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst Link = styled.a`\n  display: inline-flex;\n  align-items: center;\n  gap: 10px;\n  font-size: ${textSizes['14']};\n  color: ${colors.blue};\n  line-height: 1;\n  transition: color var(--transition);\n  width: fit-content;\n  \n  span {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  &:hover, &:focus {\n    color: ${darken(0.1, colors.blue)};\n  }\n\n  .icon {\n    font-size: ${textSizes['12']};\n    color: ${colors.gray};\n  }\n`\n\nconst IconLink = ({href = '#', title}) => {\n    return (\n        <Link href={href}>\n            <i className=\"icon icon-link\"></i>\n            <span>{title}</span>\n        </Link>\n    )\n}\n\nIconLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    href: PropTypes.string\n}\n\nexport default IconLink;","// components\nimport Navigator from '@ui/Navigator';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst MonthNavigator = ({state, handler, loop = true}) => {\n\n    const navigate = e => {\n        const direction = e.currentTarget.dataset.direction;\n        let current = state.number;\n\n        if (direction === 'prev') {\n            current !== 0 ? current-- : current = 11;\n        } else {\n            current !== 11 ? current++ : current = 0;\n        }\n        handler(prevState => {\n            return {...prevState, number: current}\n        });\n\n        let currentMonth = new Date().getMonth(),\n            prevMonth = currentMonth - 1,\n            nextMonth = currentMonth + 1;\n\n        let label = '';\n        const dateObj = new Date(2022, current, 1);\n\n        if (current === currentMonth) {\n            label = 'This month'\n        } else if (current === prevMonth) {\n            label = 'Previous month';\n        } else if (current === nextMonth) {\n            label = 'Next month';\n        } else {\n            label = dateObj.toLocaleString('en-US', {month: 'long'})\n        }\n        handler(prevState => {\n            return {...prevState, label: label}\n        });\n    }\n\n    return (\n        <Navigator handler={navigate}\n                   text={state.label}\n                   prevDisabled={!loop && state.number === 0}\n                   nextDisabled={!loop && state.number === new Date().getMonth()}\n        />\n    )\n}\n\nMonthNavigator.propTypes = {\n    state: PropTypes.shape(\n        {\n            number: PropTypes.number.isRequired,\n            label: PropTypes.string.isRequired\n        }).isRequired,\n    handler: PropTypes.func.isRequired\n}\n\nexport default MonthNavigator;","// styling\nimport styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {light, dark, textSizes, colors, fonts, breakpoints} from '@styles/vars';\n\n// utils\nimport PropTypes from 'prop-types';\n\n// hooks\nimport useWindowSize from '@hooks/useWindowSize';\n\nconst SearchBarForm = styled.form`\n  height: 40px;\n  margin: 0 24px;\n  border-radius: 8px;\n  padding: 0 22px;\n  background-color: ${theme('theme', {\n    light: light.bodyBg,\n    dark: dark.bodyBg\n  })};\n  display: flex;\n  flex-grow: 1;\n  align-items: center;\n  \n  ${breakpoints.tablet} {\n    height: 60px;\n    margin: 0 2px;\n  }\n  \n  label {\n    font-size: ${textSizes['12']};\n    margin-right: 24px;\n    color: ${colors.gray};\n  }\n  \n  input {\n    width: 100%;\n    font-size: ${textSizes['16']};\n    font-family: ${fonts.accent};\n    &::placeholder {\n      color: ${light.text};\n    }\n  }\n  \n  button[type=\"reset\"] {\n    opacity: 0;\n    transition: opacity var(--transition);\n    \n    &.visible {\n        opacity: 1;\n    }\n  }\n`\n\nconst SearchBar = ({placeholder, handler, value}) => {\n    const window = useWindowSize();\n    const isMobile = window.width < 767.98;\n\n    const handleReset = () => handler('');\n\n    return (\n        <SearchBarForm action=\"#\" method=\"get\">\n            <label className=\"search_bar-label\" htmlFor=\"widgetSearch\">\n                <i className=\"icon icon-search\"></i>\n            </label>\n            <input type=\"search\"\n                   id=\"widgetSearch\"\n                   value={value}\n                   placeholder={!isMobile ? placeholder : 'Search'}\n                   onChange={e => handler(e.target.value)} />\n            <button className={value !== '' ? 'visible' : ''} type=\"reset\" onClick={handleReset}>\n                <i className=\"icon icon-close\" />\n            </button>\n        </SearchBarForm>\n    )\n}\n\nSearchBar.propTypes = {\n    placeholder: PropTypes.string.isRequired,\n    handler: PropTypes.func.isRequired\n}\n\nexport default SearchBar;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {textSizes, light, dark, colors, fonts, breakpoints} from '@styles/vars';\nimport {fadeIn} from '@styles/keyframes';\nimport Select from 'react-select';\n\nconst basicBg = theme('theme', {\n    light: light.highlight,\n    dark: dark.highlight,\n})\n\nconst basicColor = theme('theme', {\n    light: light.text,\n    dark: dark.text,\n})\n\nconst NormalizedSelect = styled(Select)`\n  .Select {\n    &__control {\n      cursor: pointer;\n      transition: var(--transition);\n      border: none;\n      background-color: ${basicBg};\n      border-radius: 8px;\n      font-size: ${textSizes['16']};\n      height: 40px;\n      padding-right: 16px;\n\n      &--is-focused, &:hover {\n        outline: none;\n      }\n\n      &--is-focused, &--is-focused:hover {\n        box-shadow: 0 0 0 2px ${colors.blue} !important;\n      }\n\n      &:hover {\n        box-shadow: ${theme('theme', {\n          light: `0 0 0 2px #A2C0D4`,\n          dark: `0 0 0 2px ${colors.dark}`\n        })};\n      }\n\n      .icon {\n        transition: .3s ease-in-out;\n        color: ${theme('theme', {\n          light: '#A2C0D4',\n          dark: colors.gray,\n        })};\n        font-size: ${textSizes['12']};\n      }\n    }\n\n    &__menu {\n      min-width: max-content;\n      width: 100%;\n      color: ${basicColor};\n      background-color: ${basicBg};\n      border-radius: 8px;\n      animation: ${fadeIn} var(--transition);\n      z-index: 100;\n\n      &-list {\n        max-height: 180px;\n        overflow-y: auto;\n        scroll-behavior: smooth;\n        z-index: 100;\n      }\n    }\n\n    &__indicator, &__indicator-separator {\n      display: none;\n    }\n\n    &__option {\n      cursor: pointer;\n      transition: var(--transition);\n\n      &:hover,\n      &--is-focused,\n      &--is-selected {\n        background: transparent;\n        color: ${colors.blue};\n      }\n    }\n\n    &__single-value {\n      color: ${theme('theme', {\n        light: light.text,\n        dark: dark.text,\n      })};\n    }\n  }\n`;\n\nexport const Basic = styled(NormalizedSelect)`\n  .Select {\n    &__control {\n      font-size: ${textSizes['14']};\n    }\n\n    &__input-container {\n      color: ${basicColor};\n    }\n\n    &__value-container {\n      padding: 0 16px;\n    }\n  }\n`;\n\nexport const Minimal = styled(NormalizedSelect)`\n  .Select {\n    &__control {\n      background-color: transparent;\n      width: fit-content;\n      font-weight: 500;\n      font-family: ${fonts.accent};\n      border-radius: 0;\n      height: unset;\n      padding: 0;\n      font-size: ${textSizes['18']};\n\n      &--is-focused, &:hover {\n        box-shadow: none !important;\n      }\n    }\n\n    &__value-container {\n      padding: 0 20px 0 0;\n    }\n  }\n\n  ${breakpoints.tablet} {\n    .Select__control {\n      font-size: ${textSizes['20']};\n    }\n  }\n`;\n\nexport const User = styled(NormalizedSelect)`\n  .Select {\n    &__control {\n      &--is-focused, &:hover {\n        box-shadow: none !important;\n      }\n    }\n\n    &__input-container {\n      padding-left: 16px;\n      color: inherit;\n    }\n\n    &__value-container {\n      padding: 0 16px 0 0;\n    }\n\n    &__value-container,\n    &__option {\n      .user-option {\n        display: flex;\n        align-items: center;\n        gap: 10px;\n        color: inherit;\n      }\n    }\n  }\n`;","// styled components\nimport {Basic, Minimal, User} from './style';\n\n// utils\nimport PropTypes from 'prop-types';\nimport {components} from 'react-select';\n\n// hooks\nimport {useEffect, useState} from 'react';\n\nconst CustomSelect = ({label, options, variant, value, changeHandler, placeholder}) => {\n    // automatically select the first option if no placeholder is provided\n    useEffect(() => {\n        if (!placeholder && value === null) {\n            changeHandler(options[0]);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const [uniqueId] = useState(\n        () => 'select_' + Math.random().toFixed(5).slice(2),\n    );\n\n    const Control = ({children, ...props}) => (\n        <components.Control {...props}>\n            {children}\n            <i className={`icon icon-${variant === 'minimal' ? 'caret' : 'chevron'}-down`}></i>\n        </components.Control>\n    );\n\n    const commonProps = {\n        classNamePrefix: 'Select',\n        inputId: label,\n        isSearchable: variant !== 'user',\n        options: options,\n        value: value,\n        onChange: changeHandler,\n        placeholder: placeholder,\n        openMenuOnFocus: true,\n        components: {\n            Control: Control,\n            Menu: (props) => <components.Menu {...props} className=\"menu\">\n                {props.children}\n            </components.Menu>\n        },\n        id: uniqueId,\n        blurInputOnSelect: true,\n        className: `select-${variant}`\n    }\n\n    switch (variant) {\n        default:\n        case 'basic': {\n            return <Basic {...commonProps} />;\n        }\n        case 'minimal': {\n            return <Minimal {...commonProps} />;\n        }\n        case 'user': {\n            return <User {...commonProps} />;\n        }\n    }\n}\n\nCustomSelect.propTypes = {\n    options: PropTypes.any,\n    variant: PropTypes.oneOf(['minimal', 'basic', 'user']).isRequired,\n    value: PropTypes.any,\n    changeHandler: PropTypes.func,\n    placeholder: PropTypes.string\n}\n\nexport default CustomSelect;","import styled from 'styled-components/macro';\nimport {colors, dark, breakpoints, effects, flex, fonts, light, textSizes} from '@styles/vars';\nimport theme from 'styled-theming';\n\nexport const ListItem = styled.li`\n  ${flex.col};\n  padding: 20px;\n  gap: 20px;\n  border-radius: 8px;\n  background-color: ${theme('theme', {\n    light: light.highlight,\n    dark: dark.highlight\n  })};\n  transform-origin: center center;\n  will-change: transform;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  ${flex.between};\n  border-bottom: ${theme('theme', {\n    light: effects.dashedLight,\n    dark: effects.dashedDark\n  })};\n  padding-bottom: 20px;\n  gap: 20px;\n`;\n\nexport const Main = styled.div`\n  ${flex.col};\n  gap: 20px;\n\n  .info {\n    ${flex.col};\n    gap: 10px;\n\n    .title {\n      font-weight: 500;\n    }\n\n    .timestamp {\n      font-size: ${textSizes['12']};\n      font-family: ${fonts.accent};\n    }\n  }\n  \n  ${breakpoints.tablet} {\n    flex-direction: row;\n    ${flex.between};\n  }\n`;\n\nexport const Button = styled.button`\n  height: 40px;\n  border-radius: 20px;\n  background-color: ${theme('theme', {\n    light: light.widgetBg,\n    dark: dark.widgetBg\n  })};\n  color: ${theme('theme', {\n    light: colors.blue,\n    dark: '#fff'\n  })};\n  font-size: ${textSizes['14']};\n  font-family: ${fonts.accent};\n  padding: 0 25px;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover, &:focus {\n    background-color: ${colors.blue};\n    color: #fff;\n  }\n`;","// styled components\nimport {ListItem, Main, Header, Button} from '@components/TestItem/style';\n\n// components\nimport IconLink from '@ui/IconLink';\nimport MenuDots from '@ui/MenuDots';\nimport {motion, AnimatePresence} from 'framer-motion';\n\n// utils\nimport moment from 'moment';\nimport {fadePresence} from '@constants/framer';\n\nconst TestItem = ({data}) => {\n    const {doctor, title, date} = data;\n\n    return (\n        <AnimatePresence>\n            <ListItem as={motion.div} {...fadePresence}>\n                <Header>\n                    <IconLink title={`Dr. ${doctor}`}/>\n                    <MenuDots/>\n                </Header>\n                <Main>\n                    <div className=\"info\">\n                        <span className=\"title\">{title}</span>\n                        <span className=\"timestamp\">{moment(date).format('hh:mm A')}</span>\n                    </div>\n                    <Button>View result</Button>\n                </Main>\n            </ListItem>\n        </AnimatePresence>\n    )\n}\n\nexport default TestItem;","// styled components\nimport {Body} from '../style';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst WidgetBody = ({children, style, sidePadding = false, elRef, ...props}) => {\n    return <Body ref={elRef} sidePadding={sidePadding} style={style} {...props}>{children}</Body>\n}\n\nWidgetBody.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n    sidePadding: PropTypes.bool,\n    style: PropTypes.any,\n}\n\nexport default WidgetBody;","import {doctors} from '@db/doctors';\nimport Avatar from '@ui/Avatar';\n\nexport const tasksOptions = [\n    {value: 'work', label: 'Work'},\n    {value: 'travel', label: 'Travel'},\n    {value: 'family', label: 'Family'},\n    {value: 'other', label: 'Other'}\n]\n\nexport const depsOptions = [\n    {value: 'all', label: 'All Departments'},\n    {value: 'family', label: 'Family Doctors'},\n    {value: 'therapy', label: 'Therapists'},\n    {value: 'dent', label: 'Dentists'},\n    {value: 'cardio', label: 'Cardiologists'},\n]\n\nexport const testsOptions = [\n    {value: 'all', label: 'All My Tests'},\n    {value: 'blood', label: 'Blood Count'},\n    {value: 'xray', label: 'X-Ray'},\n    {value: 'ecg', label: 'ECG'},\n    {value: 'ct', label: 'CT Scan'},\n    {value: 'mri', label: 'MRI'},\n    {value: 'ultrasound', label: 'Ultrasound'},\n    {value: 'prenatal', label: 'Prenatal Testing'},\n]\n\nexport const doctorsOptions = () => {\n    let options = [];\n    doctors.forEach(doctor => {\n        options.push({\n            value: doctor.id,\n            label: <div className=\"user-option\">\n                <Avatar avatar={doctor.avatar} alt={doctor.name} size={40} />\n                <span>{doctor.name}</span>\n            </div>\n        });\n    });\n    return options;\n}","import moment from 'moment';\n\nexport const patient_tests = [\n    {\n        id: 'LRmwlkTmRiv',\n        type: \"blood\",\n        date: moment().subtract(2, 'hour'),\n        doctor: \"Herman Ryan\",\n        title: \"Cephalin-cholesterol flocculation\"\n    },\n    {\n        id: 'EDkfK2u',\n        type:  \"prenatal\",\n        date: moment().subtract(2, 'hour'),\n        doctor: \"Adam Reynolds\",\n        title: \"Mammography\"\n    },\n    {\n        id: '97SbXo',\n        type: \"blood\",\n        date: moment().subtract(3, 'hour'),\n        doctor: \"Jeffery Nichols\",\n        title: \"Hepatitis B surface antigen\"\n    },\n    {\n        id: 'RYXnQSf',\n        type: \"blood\",\n        date: moment(),\n        doctor: \"Bella Levine\",\n        title: \"Allergy testing\"\n    },\n    {\n        id: 'VeOJuSBvq',\n        type: \"blood\",\n        date: moment(),\n        doctor: \"Miranda Mccoy\",\n        title: \"Antibiotic Sensitivity Test\"\n    },\n    {\n        id: 'aN6wcKSaUMgY',\n        type: \"mri\",\n        date: moment(),\n        doctor: \"Jeffery Nichols\",\n        title: \"MRI\"\n    },\n    {\n        id: 'ukMuBJSL',\n        type:  \"prenatal\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Jeffery Nichols\",\n        title: \"DNA Testing\"\n    },\n    {\n        id: 'wMch17',\n        type: \"ct\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Anna Richardson\",\n        title: \"CT Scan\"\n    },\n    {\n        id: 'pkMHKe',\n        type: \"ultrasound\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Jeffery Nichols\",\n        title: \"Ultrasound diagnostic\"\n    },\n    {\n        id: '5EkV9OZ',\n        type: \"xray\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Katherine Wilson\",\n        title: \"Lungs X-Ray\"\n    },\n    {\n        id: 'vYMB5V564wE',\n        type: \"ecg\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Heleen Carter\",\n        title: \"Cardiovascular ECG\"\n    },\n    {\n        id: 'WdUbK4OW4Vn',\n        type: \"mri\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Jeffery Nichols\",\n        title: \"MRI\"\n    },\n    {\n        id: 'kLYqsk',\n        type: \"mri\",\n        date: moment().subtract(1, 'month'),\n        doctor: \"Jeffery Nichols\",\n        title: \"MRI\"\n    },\n    {\n        id: 'IftpHTw4p',\n        type: \"xray\",\n        date: moment().subtract(1, 'month'),\n        doctor: \"Katherine Wilson\",\n        title: \"Lungs X-Ray\"\n    },\n    {\n        id: 'oCnZPQKY',\n        type: \"ultrasound\",\n        date: moment().subtract(1, 'month'),\n        doctor: \"Jeffery Nichols\",\n        title: \"Ultrasound diagnostic\"\n    },\n    {\n        id: 'Y4RjFwyJn3y',\n        type: \"ct\",\n        date: moment().subtract(1, 'month'),\n        doctor: \"Anna Richardson\",\n        title: \"CT Scan\"\n    },\n    {\n        id: 'JojvuH7',\n        type:  \"prenatal\",\n        date: moment().subtract(1, 'month').subtract(2, 'day'),\n        doctor: \"Jeffery Nichols\",\n        title: \"DNA Testing\"\n    },\n    {\n        id: 'Si1B9W',\n        type: \"blood\",\n        date: moment().subtract(1, 'month').subtract(2, 'day'),\n        doctor: \"Miranda Mccoy\",\n        title: \"Antibiotic Sensitivity Test\"\n    },\n    {\n        id: '6zXfLNFdo',\n        type: \"blood\",\n        date: moment().subtract(1, 'month').subtract(4, 'day'),\n        doctor: \"Bella Levine\",\n        title: \"Allergy testing\"\n    },\n    {\n        id: 'nPE75vNSE1Ya',\n        type: \"ecg\",\n        date: moment().subtract(1, 'month').subtract(4, 'day'),\n        doctor: \"Heleen Carter\",\n        title: \"Cardiovascular ECG\"\n    },\n    {\n        id: 'hEUJrTG',\n        type:  \"prenatal\",\n        date: moment().subtract(2, 'month'),\n        doctor: \"Jeffery Nichols\",\n        title: \"DNA Testing\"\n    },\n    {\n        id: 'WCHC85b2on2',\n        type: \"ct\",\n        date: moment().subtract(2, 'month'),\n        doctor: \"Anna Richardson\",\n        title: \"CT Scan\"\n    },\n    {\n        id: '0zVMPZO8s',\n        type: \"blood\",\n        date: moment().subtract(2, 'month').subtract(3, 'day'),\n        doctor: \"Herman Ryan\",\n        title: \"Cephalin-cholesterol flocculation\"\n    },\n    {\n        id: 'g0ral9eA',\n        type:  \"prenatal\",\n        date: moment().subtract(2, 'month').subtract(3, 'day'),\n        doctor: \"Herbert Reynolds\",\n        title: \"Mammography\"\n    },\n    {\n        id: 'SyUtrFzCKe',\n        type: \"xray\",\n        date: moment().subtract(2, 'month'),\n        doctor: \"Katherine Wilson\",\n        title: \"Lungs X-Ray\"\n    },\n    {\n        id: 'NjQR8EIcGBR',\n        type: \"ultrasound\",\n        date: moment().subtract(2, 'month'),\n        doctor: \"Jeffery Nichols\",\n        title: \"Ultrasound diagnostic\"\n    },\n];","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {dark, breakpoints, flex, light} from '@styles/vars';\n\nexport const Header = styled.div`\n  margin-bottom: 20px;\n  ${flex.col};\n  gap: 20px;\n  \n  .wrapper {\n    padding: 20px 24px 0;\n    ${flex.col};\n    gap: 20px;\n    \n    .navigator {\n      background-color: ${theme('theme', {\n        light: light.highlight,\n        dark: dark.highlight\n      })};\n    }\n  }\n  \n  ${breakpoints.tablet} {\n    .wrapper {\n      flex-direction: row;\n        ${flex.between};\n      \n      .navigator {\n        width: 250px;\n      }\n    }\n  }\n`;\n\nexport const List = styled.div`\n  padding: 0 24px 20px;\n  display: grid;\n  grid-gap: 20px;\n  grid-template-columns: minmax(0, 1fr);\n  \n  ${breakpoints.laptopL} {\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n  }\n`;","// styled components\nimport {List, Header} from '@widgets/PatientsTests/style';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport CustomSelect from '@ui/Select';\nimport MonthNavigator from '@ui/Navigator/MonthNavigator';\nimport SearchBar from '@ui/SearchBar';\nimport TestItem from '@components/TestItem';\nimport GroupSeparator from '@ui/GroupSeparator';\nimport NoDataPlaceholder from '@components/NoDataPlaceholder';\n\n// utils\nimport {testsOptions} from '@constants/options';\nimport moment from 'moment';\n\n// hooks\nimport {useEffect, useRef, useState} from 'react';\n\n// data placeholder\nimport {patient_tests} from '@db/patient_tests';\n\nconst PatientsTests = () => {\n    const contentRef = useRef(null);\n    const currentMonth = new Date().getMonth();\n    const [category, setCategory] = useState(testsOptions[0]);\n    const [month, setMonth] = useState({label: 'This month', number: currentMonth});\n    const [search, setSearch] = useState('');\n    const uniqueDates = [...new Set(patient_tests.map(item => moment(item.date).format('DD MMM YYYY')))];\n\n    const filteredTests = patient_tests.filter(test => {\n        const testDate = new Date(test.date);\n        const testMonth = testDate.getMonth();\n        const testName = test.title.toLowerCase();\n        const testCategory = test.type.toLowerCase();\n        const doctorName = test.doctor.toLowerCase();\n        const queryMatch = testName.includes(search.toLowerCase()) || doctorName.includes(search.toLowerCase());\n        const categoryMatch = category.value === 'all' || testCategory === category.value;\n\n        return (\n            testMonth === month.number\n            && queryMatch\n            && categoryMatch\n        );\n    })\n\n    const drawTests = () => {\n        return uniqueDates.map(date => {\n            const tests = filteredTests.filter(test => moment(test.date).format('DD MMM YYYY') === date);\n            const isToday = moment(date).isSame(new Date(), 'day');\n\n            return (\n                tests.length !== 0 && new Date(date).getMonth() === month.number && (\n                    <div key={date}>\n                        <GroupSeparator text={isToday ? 'Today\\'s visit' : date}/>\n                        <List>\n                            {tests.map(test => <TestItem key={`${test.id}-${search}-${category.value}`} data={test}/>)}\n                        </List>\n                    </div>\n                )\n            )\n        })\n    }\n\n    useEffect(() => {\n        contentRef.current?.scrollTo({\n            top: 0,\n            behavior: 'smooth'\n        });\n    }, [month, search])\n\n    return (\n        <Widget name=\"PatientsTests\">\n            <Header>\n                <div className=\"wrapper\">\n                    <CustomSelect options={testsOptions}\n                                  variant=\"minimal\"\n                                  value={category}\n                                  changeHandler={e => setCategory(e)}\n                    />\n                    <MonthNavigator state={month} handler={setMonth} loop={false}/>\n                </div>\n                <SearchBar placeholder=\"Search a doctor or medical test\" handler={setSearch} value={search}/>\n            </Header>\n            <WidgetBody style={{padding: 0}} elRef={contentRef}>\n                {filteredTests.length !== 0 ? drawTests() : <NoDataPlaceholder/>}\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default PatientsTests;","// components\nimport Page from '@layout/Page';\nimport PatientsTests from '@widgets/PatientsTests';\n\nconst Tests = () => {\n    return (\n        <Page title=\"Medical Test Results\">\n            <PatientsTests/>\n        </Page>\n    )\n}\n\nexport default Tests;"],"names":["Link","styled","a","withConfig","componentId","textSizes","colors","blue","darken","gray","_ref","_ref$href","href","title","_jsxs","children","_jsx","className","state","handler","_ref$loop","loop","Navigator","e","direction","currentTarget","dataset","current","number","prevState","_objectSpread","currentMonth","Date","getMonth","prevMonth","nextMonth","label","dateObj","toLocaleString","month","text","prevDisabled","nextDisabled","SearchBarForm","form","theme","light","bodyBg","dark","breakpoints","tablet","fonts","accent","placeholder","value","isMobile","useWindowSize","width","action","method","htmlFor","type","id","onChange","target","onClick","basicBg","highlight","basicColor","NormalizedSelect","Select","concat","fadeIn","Basic","Minimal","User","options","variant","changeHandler","useEffect","_useState","useState","Math","random","toFixed","slice","uniqueId","_slicedToArray","commonProps","classNamePrefix","inputId","isSearchable","openMenuOnFocus","components","Control","_ref2","props","_objectWithoutProperties","_excluded","Menu","blurInputOnSelect","ListItem","li","flex","col","Header","div","between","effects","dashedLight","dashedDark","Main","Button","button","widgetBg","data","doctor","date","AnimatePresence","as","motion","fadePresence","IconLink","MenuDots","moment","format","style","_ref$sidePadding","sidePadding","elRef","Body","ref","depsOptions","testsOptions","doctorsOptions","doctors","forEach","push","Avatar","avatar","alt","name","size","patient_tests","subtract","List","laptopL","contentRef","useRef","_useState2","category","setCategory","_useState3","_useState4","setMonth","_useState5","_useState6","search","setSearch","uniqueDates","_toConsumableArray","Set","map","item","filteredTests","filter","test","testMonth","testName","toLowerCase","testCategory","doctorName","queryMatch","includes","categoryMatch","_contentRef$current","scrollTo","top","behavior","Widget","CustomSelect","MonthNavigator","SearchBar","WidgetBody","padding","length","tests","isToday","isSame","GroupSeparator","TestItem","NoDataPlaceholder","Page","PatientsTests"],"sourceRoot":""}