{"version":3,"file":"static/js/137.96fc69d9.chunk.js","mappings":"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","sources":["UI/Checkbox/index.jsx","UI/Progress/index.jsx","UI/Select/style.js","UI/Select/index.jsx","components/PeriodNav/index.jsx","components/Todos/AddForm/index.jsx","components/Todos/AddForm/style.js","components/Todos/DnDLayout/index.jsx","components/Todos/DnDLayout/style.js","components/Todos/Todo/planner.js","components/Todos/Todo/list.js","components/Todos/TodosLegend/index.jsx","constants/options.js"],"sourcesContent":["// styling\nimport styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {colors, light, flex} from '@styles/vars'\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst Square = styled.div`\n  input {\n    display: none;\n\n    &:checked + label span {\n      opacity: 1;\n    }\n  }\n\n  label {\n    ${flex.col};\n    ${flex.center};\n    width: 20px;\n    height: 20px;\n    border-radius: 4px;\n    background-color: ${theme('theme', {\n      light: colors.light_gray,\n      dark: light.text\n    })};\n    cursor: pointer;\n    transition: var(--transition);\n    position: relative;\n\n    span {\n      display: block;\n      border-radius: 2px;\n      background-color: ${colors.blue};\n      width: 12px;\n      height: 12px;\n      transition: opacity var(--transition);\n      opacity: 0;\n    }\n  }\n`\n\nconst Basic = styled.div`\n  input {\n    display: none;\n    &:checked + label {\n      color: ${colors.blue};\n    }\n  }\n\n  label {\n    color: #BBCDD9;\n    transition: var(--transition);\n\n    &:hover, &:focus {\n      color: ${colors.blue};\n    }\n  }\n`;\n\nconst Checkbox = ({variant, handler, checked, id}) => {\n    const commonProps = {\n        type: 'checkbox',\n        id,\n        defaultChecked: checked,\n        onChange: handler\n    }\n\n    const Layout = () => {\n        switch (variant) {\n            default:\n            case 'square':\n                return (\n                    <Square className=\"checkbox\">\n                        <input {...commonProps} />\n                        <label htmlFor={id} tabIndex={0}>\n                            <span></span>\n                        </label>\n                    </Square>\n                )\n            case 'basic':\n                return (\n                    <Basic>\n                        <input {...commonProps} />\n                        <label htmlFor={id} tabIndex={0}>\n                            <i className=\"icon icon-check\"/>\n                        </label>\n                    </Basic>\n                )\n        }\n    }\n\n    return <Layout/>\n}\n\nCheckbox.propTypes = {\n    variant: PropTypes.oneOf(['square', 'basic']).isRequired,\n    handler: PropTypes.func,\n    checked: PropTypes.bool,\n    id: PropTypes.string\n}\n\nexport default Checkbox;","// styling\nimport {dark, colors} from '@styles/vars';\n\n// components\nimport LinearProgress from '@mui/material/LinearProgress';\n\n// hooks\nimport {useTheme} from 'styled-components';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst Progress = ({color = colors.blue, value, style = {}}) => {\n    const {theme} = useTheme();\n\n    return <LinearProgress className=\"progressbar\"\n                           variant=\"determinate\"\n                           aria-label={value}\n                           value={value}\n                           sx={{\n                               backgroundColor: theme === 'light' ? '#E4EAF0' : dark.highlight,\n                               height: 6,\n                               borderRadius: 2,\n                               ...style,\n\n                               '& .MuiLinearProgress-bar': {\n                                   backgroundColor: color,\n                                   borderRadius: 2,\n                               }\n                           }}/>\n}\n\nProgress.propTypes = {\n    color: PropTypes.string,\n    value: PropTypes.number.isRequired,\n    style: PropTypes.object,\n}\n\nexport default Progress;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {textSizes, light, dark, colors, fonts, breakpoints} from '@styles/vars';\nimport {fadeIn} from '@styles/keyframes';\nimport Select from 'react-select';\n\nconst basicBg = theme('theme', {\n    light: light.highlight,\n    dark: dark.highlight,\n})\n\nconst basicColor = theme('theme', {\n    light: light.text,\n    dark: dark.text,\n})\n\nconst NormalizedSelect = styled(Select)`\n  .Select {\n    &__control {\n      cursor: pointer;\n      transition: var(--transition);\n      border: none;\n      background-color: ${basicBg};\n      border-radius: 8px;\n      font-size: ${textSizes['16']};\n      height: 40px;\n      padding-right: 16px;\n\n      &--is-focused, &:hover {\n        outline: none;\n      }\n\n      &--is-focused, &--is-focused:hover {\n        box-shadow: 0 0 0 2px ${colors.blue} !important;\n      }\n\n      &:hover {\n        box-shadow: ${theme('theme', {\n          light: `0 0 0 2px #A2C0D4`,\n          dark: `0 0 0 2px ${colors.dark}`\n        })};\n      }\n\n      .icon {\n        transition: .3s ease-in-out;\n        color: ${theme('theme', {\n          light: '#A2C0D4',\n          dark: colors.gray,\n        })};\n        font-size: ${textSizes['12']};\n      }\n    }\n\n    &__menu {\n      min-width: max-content;\n      width: 100%;\n      color: ${basicColor};\n      background-color: ${basicBg};\n      border-radius: 8px;\n      animation: ${fadeIn} var(--transition);\n      z-index: 100;\n\n      &-list {\n        max-height: 180px;\n        overflow-y: auto;\n        scroll-behavior: smooth;\n        z-index: 100;\n      }\n    }\n\n    &__indicator, &__indicator-separator {\n      display: none;\n    }\n\n    &__option {\n      cursor: pointer;\n      transition: var(--transition);\n\n      &:hover,\n      &--is-focused,\n      &--is-selected {\n        background: transparent;\n        color: ${colors.blue};\n      }\n    }\n\n    &__single-value {\n      color: ${theme('theme', {\n        light: light.text,\n        dark: dark.text,\n      })};\n    }\n  }\n`;\n\nexport const Basic = styled(NormalizedSelect)`\n  .Select {\n    &__control {\n      font-size: ${textSizes['14']};\n    }\n\n    &__input-container {\n      color: ${basicColor};\n    }\n\n    &__value-container {\n      padding: 0 16px;\n    }\n  }\n`;\n\nexport const Minimal = styled(NormalizedSelect)`\n  .Select {\n    &__control {\n      background-color: transparent;\n      width: fit-content;\n      font-weight: 500;\n      font-family: ${fonts.accent};\n      border-radius: 0;\n      height: unset;\n      padding: 0;\n      font-size: ${textSizes['18']};\n\n      &--is-focused, &:hover {\n        box-shadow: none !important;\n      }\n    }\n\n    &__value-container {\n      padding: 0 20px 0 0;\n    }\n  }\n\n  ${breakpoints.tablet} {\n    .Select__control {\n      font-size: ${textSizes['20']};\n    }\n  }\n`;\n\nexport const User = styled(NormalizedSelect)`\n  .Select {\n    &__control {\n      &--is-focused, &:hover {\n        box-shadow: none !important;\n      }\n    }\n\n    &__input-container {\n      padding-left: 16px;\n      color: inherit;\n    }\n\n    &__value-container {\n      padding: 0 16px 0 0;\n    }\n\n    &__value-container,\n    &__option {\n      .user-option {\n        display: flex;\n        align-items: center;\n        gap: 10px;\n        color: inherit;\n      }\n    }\n  }\n`;","// styled components\nimport {Basic, Minimal, User} from './style';\n\n// utils\nimport PropTypes from 'prop-types';\nimport {components} from 'react-select';\n\n// hooks\nimport {useEffect, useState} from 'react';\n\nconst CustomSelect = ({label, options, variant, value, changeHandler, placeholder}) => {\n    // automatically select the first option if no placeholder is provided\n    useEffect(() => {\n        if (!placeholder && value === null) {\n            changeHandler(options[0]);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const [uniqueId] = useState(\n        () => 'select_' + Math.random().toFixed(5).slice(2),\n    );\n\n    const Control = ({children, ...props}) => (\n        <components.Control {...props}>\n            {children}\n            <i className={`icon icon-${variant === 'minimal' ? 'caret' : 'chevron'}-down`}></i>\n        </components.Control>\n    );\n\n    const commonProps = {\n        classNamePrefix: 'Select',\n        inputId: label,\n        isSearchable: variant !== 'user',\n        options: options,\n        value: value,\n        onChange: changeHandler,\n        placeholder: placeholder,\n        openMenuOnFocus: true,\n        components: {\n            Control: Control,\n            Menu: (props) => <components.Menu {...props} className=\"menu\">\n                {props.children}\n            </components.Menu>\n        },\n        id: uniqueId,\n        blurInputOnSelect: true,\n        className: `select-${variant}`\n    }\n\n    switch (variant) {\n        default:\n        case 'basic': {\n            return <Basic {...commonProps} />;\n        }\n        case 'minimal': {\n            return <Minimal {...commonProps} />;\n        }\n        case 'user': {\n            return <User {...commonProps} />;\n        }\n    }\n}\n\nCustomSelect.propTypes = {\n    options: PropTypes.any,\n    variant: PropTypes.oneOf(['minimal', 'basic', 'user']).isRequired,\n    value: PropTypes.any,\n    changeHandler: PropTypes.func,\n    placeholder: PropTypes.string\n}\n\nexport default CustomSelect;","// styled components\nimport {Container, Item, Button} from '@ui/TabNav/style';\n\n// hooks\nimport usePeriodNav from '@hooks/usePeriodNav';\n\n// utils\nimport {nanoid} from 'nanoid';\n\nconst PeriodNav = ({current, handler}) => {\n    const {periods} = usePeriodNav();\n\n    return (\n        <Container>\n            {\n                periods.map(p =>\n                    <Item key={nanoid(4)}>\n                        <Button className={current === p && 'active'} onClick={() => handler(p)}>{p}</Button>\n                    </Item>\n                )\n            }\n        </Container>\n    )\n}\n\nexport default PeriodNav;","// styled components\nimport {Form, BtnWrapper, InputWrapper} from './style';\n\n// components\nimport CustomSelect from '@ui/Select';\nimport Field from '@ui/Field';\nimport Btn from '@ui/Btn';\nimport Grow from '@mui/material/Grow';\nimport Collapse from '@mui/material/Collapse';\n\n// utils\nimport {useDispatch} from 'react-redux';\nimport {addTodo, toggleCollapse} from '@store/features/todos';\nimport {tasksOptions} from '@constants/options';\nimport {useState} from 'react';\nimport {nanoid} from 'nanoid';\n\nconst AddForm = ({isVisible, visibilityHandler, variant}) => {\n    const [task, setTask] = useState('');\n    const [category, setCategory] = useState(null);\n    const dispatch = useDispatch();\n    const timestamp = Date.now();\n\n    const handleTaskChange = (e) => {\n        setTask(e.target.value);\n    }\n\n    const handleCategoryChange = e => {\n        setCategory(e);\n    }\n\n    const resetForm = () => {\n        setTask('');\n        setCategory(null);\n        visibilityHandler(false);\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (task !== '' && category !== null) {\n            const id = nanoid(5);\n            dispatch(addTodo({\n                id,\n                name: task,\n                timestamp,\n                label: category.value,\n                expanded: false\n            }));\n            setTimeout(() => dispatch(toggleCollapse({id})), 300);\n            resetForm();\n        }\n    }\n\n    return (\n       <></>\n    )\n}\n\nexport default AddForm;","import styled from 'styled-components/macro';\nimport {colors, dark, flex, light} from '@styles/vars';\nimport theme from 'styled-theming';\n\nconst border = theme('theme', {\n  light: `1px solid ${colors.light_gray} !important`,\n  dark: `1px solid ${colors.dark} !important`,\n})\n\nexport const Form = styled.form`\n  ${flex.col};\n  padding: 20px 22px;\n  background-color: ${theme('theme', {\n    light: light.highlight,\n    dark: dark.highlight,\n  })};\n  border-radius: 8px;\n  margin: ${props => props.variant === 'list' ? '24px' : '0 0 20px 0'};\n  border: ${border};\n`\n\nexport const InputWrapper = styled.div`\n  ${flex.col};\n  gap: 10px;\n  margin-bottom: 20px;\n  \n  .field, .Select__control {\n    border: ${border};\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 10px;\n`;","// styled components\nimport { DraggableListItem, DraggablePlannerItem } from './style';\n// styled components\nimport {Form, BtnWrapper, InputWrapper} from '../AddForm/style';\n\n// components\nimport CustomSelect from '@ui/Select';\nimport Field from '@ui/Field';\nimport Btn from '@ui/Btn';\nimport Grow from '@mui/material/Grow';\nimport Collapse from '@mui/material/Collapse';\n\n// utils\nimport {useDispatch, useSelector} from 'react-redux';\nimport {addTodo, toggleCollapse} from '@store/features/todos';\nimport {tasksOptions} from '@constants/options';\nimport {useState} from 'react';\nimport {nanoid} from 'nanoid';\n// components\nimport Todo from '@components/Todos/Todo';\nimport {\n    DndContext,\n    closestCenter,\n    TouchSensor,\n    PointerSensor,\n    useSensor,\n    useSensors,\n} from '@dnd-kit/core';\nimport {\n    arrayMove,\n    SortableContext,\n    verticalListSortingStrategy,\n    useSortable\n} from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { restrictToVerticalAxis } from '@dnd-kit/modifiers';\n\n// hooks\nimport useMobileDetect from 'use-mobile-detect-hook';\n\n// utils\nimport propTypes from 'prop-types';\nimport { updateOrder } from '@store/features/todos';\nimport { Content, ListItemContainer, Main } from '../Todo/list';\nimport Checkbox from '@ui/Checkbox';\nimport { useEffect } from 'react';\nimport { GetAppointmentRequest } from '@components/Api/AllApi';\nimport { TextField } from '@mui/material';\n\nconst DnDLayout = ({isVisible, visibilityHandler, variant}) => {\n    const device = useMobileDetect();\n    const todos = useSelector(state => state['todos'].todos);\n    const DnDItem = variant === 'list' ? DraggableListItem : DraggablePlannerItem;\n    const sensors = useSensors(useSensor(PointerSensor, {\n        activationConstraint: {\n            distance: 15,\n        }\n    }), useSensor(TouchSensor, {\n        activationConstraint: {\n            delay: 2000,\n            tolerance: 5,\n        },\n    }));\n\n    const SortableItem = (props) => {\n        const {\n            attributes,\n            listeners,\n            setNodeRef,\n            transform,\n            transition,\n            isOver,\n            isDragging,\n        } = useSortable({ id: props.id });\n\n        const style = {\n            transform: CSS.Transform.toString(transform),\n            transition,\n            zIndex: isOver || isDragging ? 10 : 0,\n            position: 'relative',\n            touchAction: 'none',\n        };\n\n        return (\n            <div ref={setNodeRef} style={style} {...attributes} {...listeners}>\n                {props.children}\n            </div>\n        );\n    }\n\n    const onDragEnd = e => {\n        const { active, over } = e;\n\n        if (active.id !== over.id) {\n            const oldIndex = todos.findIndex(({ id }) => id === active.id);\n            const newIndex = todos.findIndex(({ id }) => id === over.id);\n            dispatch(updateOrder(arrayMove(todos, oldIndex, newIndex)));\n        }\n    }\n\n\n    const [post, setPost] = useState(false)\n\n    useEffect(() => {\n\n        const GetEEEE = GetAppointmentRequest()\n        if (GetEEEE) {\n            GetEEEE.then((data) => {\n                console.log(data?.result, \"AUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUuu\")\n                setPost(data?.result || [])\n            })\n        }\n\n    }, [])\n\n    const [task, setTask] = useState('');\n    const [category, setCategory] = useState(null);\n    const dispatch = useDispatch();\n    const timestamp = Date.now();\n\n    const handleTaskChange = (e) => {\n        setTask(e.target.value);\n    }\n\n    const handleCategoryChange = e => {\n        setCategory(e);\n    }\n\n    const resetForm = () => {\n        setTask('');\n        setCategory(null);\n        visibilityHandler(false);\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (task !== '' && category !== null) {\n            const id = nanoid(5);\n            dispatch(addTodo({\n                id,\n                name: task,\n                timestamp,\n                label: category.value,\n                expanded: false\n            }));\n            setTimeout(() => dispatch(toggleCollapse({id})), 300);\n            resetForm();\n        }\n    }\n\n\n\n    return (\n        <>\n            <DndContext sensors={sensors} collisionDetection={closestCenter} onDragEnd={onDragEnd}\n                modifiers={[restrictToVerticalAxis]} autoScroll={true}>\n                <SortableContext items={todos} strategy={verticalListSortingStrategy} disabled={!device.isDesktop()}>\n                    {post && post.map(todo => (\n                        <SortableItem key={todo.id} id={todo.id}>\n                            <DnDItem>\n                                <ListItemContainer className=\"list-item\" tabIndex={0}>\n                                    <Content>\n                                        <TextField type='checkbox' sx={{ height: 24, width: 24 }} />\n                                        {todo.dotw}\n                                        <Main>\n                                            <input type=\"text\" readOnly={true} />\n                                        </Main>\n\n                                    </Content>\n\n                                </ListItemContainer>\n                            </DnDItem>\n                        </SortableItem>\n                    ))}\n                </SortableContext>\n            </DndContext>\n          \n        </>\n\n    )\n}\n\nDnDLayout.propTypes = {\n    variant: propTypes.oneOf(['planner', 'list']).isRequired\n}\n\nexport default DnDLayout;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {dark, light} from '@styles/vars';\n\nexport const DraggableListItem = styled.div`\n  margin: 0 2px;\n\n  &.selected {\n    .list-item {\n      &:after {\n        opacity: 1;\n      }\n\n      .checkbox label {\n        background-color: ${theme('theme', {\n          dark: dark.highlight\n        })};\n      }\n\n      .category .text {\n        opacity: 1;\n      }\n    }\n  }\n\n  &:last-of-type {\n    .list-item {\n      &:before {\n        display: none;\n      }\n    }\n  }\n`\n\nconst plannerFocused = theme('theme', {\n    light: light.highlight,\n    dark: dark.bodyBg\n});\n\nexport const DraggablePlannerItem = styled.div`\n  .list-item {\n    &:hover, &:focus {\n      background-color: ${plannerFocused};\n    }\n  }\n\n  &.selected .list-item {\n    background-color: ${plannerFocused};\n  }\n`;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {dark, light, flex} from '@styles/vars';\n\nexport const PlannerItemContainer = styled.div`\n  background-color: ${theme('theme', {\n    light: light.bodyBg,\n    dark: dark.highlight\n  })};\n  padding: 20px 20px 20px 24px;\n  border-radius: 8px;\n  margin-bottom: 20px;\n  display: flex;\n  ${flex.between};\n  transition: background-color var(--transition);\n  cursor: grab;\n\n  * {\n    user-select: none;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  ${flex.col};\n  gap: 6px;\n`;\n\nexport const TimestampWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {colors, dark, effects, flex, fonts, light, textSizes, breakpoints} from '@styles/vars';\n\nexport const Label = styled.span`\n  display: none;\n  align-items: center;\n  line-height: ${textSizes['10']};\n  gap: 6px;\n  font-size: ${textSizes['10']};\n  font-family: ${fonts.accent};\n  text-transform: uppercase;\n\n  .text {\n    opacity: 0;\n    transition: opacity var(--transition);\n  }\n\n  ${breakpoints.mobileL} {\n    display: flex;\n  }\n\n  ${breakpoints.tablet} {\n    .text {\n      display: none;\n    }\n  }\n\n  ${breakpoints.laptop} {\n    .text {\n      display: inline;\n    }\n  }\n`\n\nexport const ListItemContainer = styled.div`\n  padding: 20px 22px;\n  position: relative;\n  cursor: grab;\n\n  * {\n    user-select: none !important;\n  }\n\n  input {\n    cursor: grab;\n  }\n\n  &:before, &:after {\n    content: '';\n    position: absolute;\n    width: 100%;\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    left: 24px;\n    bottom: 0;\n    width: calc(100% - 48px);\n    border-bottom: ${theme('theme', {\n      light: effects.dashedLight,\n      dark: effects.dashedDark\n    })};\n  }\n\n  &:after {\n    display: block;\n    border-radius: 8px;\n    height: 100%;\n    top: -1px;\n    left: 0;\n    background-color: ${theme('theme', {\n      light: light.widgetBg,\n      dark: light.text\n    })};\n    box-shadow: 0 1px 8px rgba(65, 77, 85, 0.4);\n    z-index: 1;\n    opacity: 0;\n    transition: opacity var(--transition);\n    border-bottom: 2px ${props => colors[props.color]} solid;\n  }\n\n  .dots {\n    color: ${theme('theme', {\n      light: light.text,\n      dark: dark.text\n    })};\n    opacity: 0;\n    transition: opacity var(--transition);\n  }\n\n  &:hover {\n    &:after,\n    ${Label} .text,\n    .dots {\n      opacity: 1;\n    }\n\n    .checkbox label {\n      background-color: ${theme('theme', {\n        dark: dark.highlight\n      })};\n    }\n  }\n`\n\nexport const Content = styled.div`\n  position: relative;\n  z-index: 2;\n  display: flex;\n  gap: 12px;\n`\n\nexport const Main = styled.div`\n  ${flex.col};\n  gap: 10px;\n  flex-grow: 1;\n`\n\nexport const Secondary = styled.div`\n  ${flex.col};\n  justify-content: flex-end;\n  align-items: flex-end;\n`\n\n","import {tasksColors} from '@constants/colors';\nimport LegendItem from '@ui/Legend/LegendItem';\nimport Legend from '@ui/Legend';\n\nexport default function TodosLegend() {\n    return (\n        <Legend>\n            {tasksColors.map(({color, cat}) => <LegendItem key={cat} color={color} legend={cat} />)}\n        </Legend>\n    )\n}","import {doctors} from '@db/doctors';\nimport Avatar from '@ui/Avatar';\n\nexport const tasksOptions = [\n    {value: 'work', label: 'Work'},\n    {value: 'travel', label: 'Travel'},\n    {value: 'family', label: 'Family'},\n    {value: 'other', label: 'Other'}\n]\n\nexport const depsOptions = [\n    {value: 'all', label: 'All Departments'},\n    {value: 'family', label: 'Family Doctors'},\n    {value: 'therapy', label: 'Therapists'},\n    {value: 'dent', label: 'Dentists'},\n    {value: 'cardio', label: 'Cardiologists'},\n]\n\nexport const testsOptions = [\n    {value: 'all', label: 'All My Tests'},\n    {value: 'blood', label: 'Blood Count'},\n    {value: 'xray', label: 'X-Ray'},\n    {value: 'ecg', label: 'ECG'},\n    {value: 'ct', label: 'CT Scan'},\n    {value: 'mri', label: 'MRI'},\n    {value: 'ultrasound', label: 'Ultrasound'},\n    {value: 'prenatal', label: 'Prenatal Testing'},\n]\n\nexport const doctorsOptions = () => {\n    let options = [];\n    doctors.forEach(doctor => {\n        options.push({\n            value: doctor.id,\n            label: <div className=\"user-option\">\n                <Avatar avatar={doctor.avatar} alt={doctor.name} size={40} />\n                <span>{doctor.name}</span>\n            </div>\n        });\n    });\n    return options;\n}"],"names":["styled","div","withConfig","componentId","flex","col","center","theme","light","colors","light_gray","dark","text","blue","_ref","_ref$color","color","value","_ref$style","style","useTheme","_jsx","LinearProgress","className","variant","sx","_objectSpread","backgroundColor","highlight","height","borderRadius","basicBg","basicColor","NormalizedSelect","Select","textSizes","concat","gray","fadeIn","Basic","Minimal","fonts","accent","breakpoints","tablet","User","label","options","changeHandler","placeholder","useEffect","_useState","useState","Math","random","toFixed","slice","uniqueId","_slicedToArray","commonProps","classNamePrefix","inputId","isSearchable","onChange","openMenuOnFocus","components","Control","_ref2","children","props","_objectWithoutProperties","_excluded","_jsxs","Menu","id","blurInputOnSelect","current","handler","periods","usePeriodNav","Container","map","p","Item","Button","onClick","nanoid","isVisible","visibilityHandler","_useState2","_useState3","_useState4","useDispatch","Date","now","_Fragment","border","form","device","useMobileDetect","todos","useSelector","state","DnDItem","DraggableListItem","DraggablePlannerItem","sensors","useSensors","useSensor","PointerSensor","activationConstraint","distance","TouchSensor","delay","tolerance","SortableItem","_useSortable","useSortable","attributes","listeners","setNodeRef","transform","transition","isOver","isDragging","CSS","Transform","toString","zIndex","position","touchAction","ref","post","setPost","GetEEEE","GetAppointmentRequest","then","data","console","log","result","_useState5","_useState6","dispatch","DndContext","collisionDetection","closestCenter","onDragEnd","e","active","over","oldIndex","findIndex","newIndex","_ref3","updateOrder","arrayMove","modifiers","restrictToVerticalAxis","autoScroll","SortableContext","items","strategy","verticalListSortingStrategy","disabled","isDesktop","todo","ListItemContainer","tabIndex","Content","TextField","type","width","dotw","Main","readOnly","plannerFocused","bodyBg","between","Label","span","mobileL","laptop","effects","dashedLight","dashedDark","widgetBg","TodosLegend","Legend","tasksColors","cat","LegendItem","legend","depsOptions","testsOptions","doctorsOptions","doctors","forEach","doctor","push","Avatar","avatar","alt","name","size"],"sourceRoot":""}