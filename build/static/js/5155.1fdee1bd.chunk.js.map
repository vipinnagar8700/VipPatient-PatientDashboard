{"version":3,"file":"static/js/5155.1fdee1bd.chunk.js","mappings":"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","sources":["UI/Navigator/MonthNavigator/index.jsx","widgets/PatientsList/style.js","widgets/PatientsList/Group/index.jsx","db/patients.js","widgets/PatientsList/index.jsx","pages/Patients.jsx"],"sourcesContent":["// components\nimport Navigator from '@ui/Navigator';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst MonthNavigator = ({state, handler, loop = true}) => {\n\n    const navigate = e => {\n        const direction = e.currentTarget.dataset.direction;\n        let current = state.number;\n\n        if (direction === 'prev') {\n            current !== 0 ? current-- : current = 11;\n        } else {\n            current !== 11 ? current++ : current = 0;\n        }\n        handler(prevState => {\n            return {...prevState, number: current}\n        });\n\n        let currentMonth = new Date().getMonth(),\n            prevMonth = currentMonth - 1,\n            nextMonth = currentMonth + 1;\n\n        let label = '';\n        const dateObj = new Date(2022, current, 1);\n\n        if (current === currentMonth) {\n            label = 'This month'\n        } else if (current === prevMonth) {\n            label = 'Previous month';\n        } else if (current === nextMonth) {\n            label = 'Next month';\n        } else {\n            label = dateObj.toLocaleString('en-US', {month: 'long'})\n        }\n        handler(prevState => {\n            return {...prevState, label: label}\n        });\n    }\n\n    return (\n        <Navigator handler={navigate}\n                   text={state.label}\n                   prevDisabled={!loop && state.number === 0}\n                   nextDisabled={!loop && state.number === new Date().getMonth()}\n        />\n    )\n}\n\nMonthNavigator.propTypes = {\n    state: PropTypes.shape(\n        {\n            number: PropTypes.number.isRequired,\n            label: PropTypes.string.isRequired\n        }).isRequired,\n    handler: PropTypes.func.isRequired\n}\n\nexport default MonthNavigator;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {dark, light, flex, colors, breakpoints} from '@styles/vars';\nimport {HeaderWrapper} from '@components/Widget/style';\n\nexport const NavWrapper = styled(HeaderWrapper)`\n  ${breakpoints.tablet} {\n    flex-direction: row;\n    ${flex.between};\n\n    .gender {\n      max-width: 300px;\n    }\n  }\n`;\n\nexport const LetterNav = styled.ul`\n  display: flex;\n  margin: 0 2px;\n  gap: 1px;\n  height: 80px;\n  align-items: center;\n  border-radius: 8px;\n  padding: 0 18px;\n  overflow-x: auto;\n  background-color: ${theme('theme', {\n    light: light.bodyBg,\n    dark: dark.bodyBg\n  })};\n`\n\nexport const LetterNavWrapper = styled.div`\n  overflow: hidden;\n  border-radius: 8px;\n  position: relative;\n  width: 100%;\n\n  &:before, &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    background: ${theme('theme', {\n      light: light.shadow,\n      dark: dark.shadowDarker\n    })};\n    height: 100%;\n    width: 24px;\n    z-index: 1;\n    filter: blur(1px);\n    display: block;\n  }\n\n  &:before {\n    left: 2px;\n  }\n\n  &:after {\n    right: 2px;\n    transform: scaleX(-1);\n  }\n`\n\nexport const LetterNavItem = styled.a`\n  display: flex;\n  ${flex.center};\n  width: 44px;\n  height: 40px;\n  text-transform: uppercase;\n  color: ${colors.blue};\n  border-radius: 8px;\n  background: ${theme('theme', {\n    light: light.widgetBg,\n    dark: dark.widgetBg\n  })};\n  transition: color var(--transition), background var(--transition);\n\n  &:hover, &:focus {\n    background-color: ${colors.blue};\n    color: #fff;\n  }\n\n  &:not(&.active) {\n    pointer-events: none;\n    background-color: transparent;\n    color: ${theme('theme', {\n      light: light.text,\n      dark: dark.text\n    })};\n  }\n`\n","// components\nimport GroupSeparator from '@ui/GroupSeparator';\nimport PersonList from '@components/PersonList';\n\n// utils\nimport PropTypes from \"prop-types\";\n\nconst Group = ({char, arr, type, gender}) => {\n    const data = arr.filter(item => item.lastName.charAt(0).toLowerCase() === char);\n\n    return (\n        <>\n            {\n                data.length !== 0 ?\n                    <div id={char}>\n                        <GroupSeparator text={char} />\n                        <PersonList arr={data} type={type} gender={gender} />\n                    </div> : null\n            }\n        </>\n    )\n}\n\nGroup.propTypes = {\n    char: PropTypes.string.isRequired,\n    arr: PropTypes.array.isRequired,\n    type: PropTypes.oneOf(['patient', 'doctor', 'staff']).isRequired,\n}\n\nexport default Group;","import pat1jpg from '@assets/avatars/pat1.jpg';\nimport pat1webp from '@assets/avatars/pat1.jpg?as=webp';\nimport pat2jpg from '@assets/avatars/pat2.jpg';\nimport pat2webp from '@assets/avatars/pat2.jpg?as=webp';\nimport pat3jpg from '@assets/avatars/pat3.jpg';\nimport pat3webp from '@assets/avatars/pat3.jpg?as=webp';\nimport pat4jpg from '@assets/avatars/pat4.jpg';\nimport pat4webp from '@assets/avatars/pat4.jpg?as=webp';\nimport pat5jpg from '@assets/avatars/pat5.jpg';\nimport pat5webp from '@assets/avatars/pat5.jpg?as=webp';\nimport pat6jpg from '@assets/avatars/pat6.jpg';\nimport pat6webp from '@assets/avatars/pat6.jpg?as=webp';\nimport pat7jpg from '@assets/avatars/pat7.jpg';\nimport pat7webp from '@assets/avatars/pat7.jpg?as=webp';\nimport pat9jpg from '@assets/avatars/pat9.jpg';\nimport pat9webp from '@assets/avatars/pat9.jpg?as=webp';\nimport pat10jpg from '@assets/avatars/pat10.jpg';\nimport pat10webp from '@assets/avatars/pat10.jpg?as=webp';\n\nexport const patients = [\n    {\n        id: 'YdnojZ',\n        firstName: 'Marta',\n        lastName: 'Addams',\n        gender: 'female',\n        age: 24,\n        reg: new Date(2022, 5, 11),\n        avatar: {\n            jpg: pat1jpg,\n            webp: pat1webp\n        }\n    },\n    {\n        id: 'Yd2nojT',\n        firstName: 'Mildred',\n        lastName: 'Collins',\n        gender: 'female',\n        age: 18,\n        reg: new Date(2022, 5, 21),\n        avatar: {\n            jpg: pat4jpg,\n            webp: pat4webp\n        }\n    },\n    {\n        id: 'Y32nojT',\n        firstName: 'Derek',\n        lastName: 'Osborn',\n        gender: 'male',\n        age: 35,\n        reg: new Date(2022, 2, 30),\n        avatar: {\n            jpg: pat2jpg,\n            webp: pat2webp\n        }\n    },\n    {\n        id: 'Yd2noBN',\n        firstName: 'Elisabeth',\n        lastName: 'Aron',\n        gender: 'female',\n        age: 21,\n        reg: new Date(2022, 2, 5),\n        avatar: {\n            jpg: pat10jpg,\n            webp: pat10webp\n        }\n    },\n    {\n        id: 'lP2noBN',\n        firstName: 'William',\n        lastName: 'Dove',\n        gender: 'male',\n        age: 49,\n        reg: new Date(2022, new Date().getMonth() - 1, 1),\n        online: true,\n        avatar: {\n            jpg: pat3jpg,\n            webp: pat3webp\n        }\n    },\n    {\n        id: 'l42noBX',\n        firstName: 'John',\n        lastName: 'Farewell',\n        gender: 'male',\n        age: 37,\n        reg: new Date(2022, new Date().getMonth() - 1, 1),\n        avatar: {\n            jpg: pat5jpg,\n            webp: pat5webp\n        }\n    },\n    {\n        id: 'l411oBR',\n        firstName: 'Vanessa',\n        lastName: 'Bloom',\n        gender: 'female',\n        age: 24,\n        reg: new Date(2022, new Date().getMonth() - 1, 1),\n        online: true,\n        avatar: {\n            jpg: pat9jpg,\n            webp: pat9webp\n        }\n    },\n    {\n        id: 'x411oTT',\n        firstName: 'Melody',\n        lastName: 'Brick',\n        gender: 'female',\n        age: 19,\n        reg: new Date(),\n        avatar: {\n            jpg: pat6jpg,\n            webp: pat6webp\n        }\n    },\n    {\n        id: 'byTRoTT',\n        firstName: 'Louis',\n        lastName: 'Garner',\n        gender: 'male',\n        age: 41,\n        reg: new Date(),\n        message: true,\n        avatar: {\n            jpg: pat7jpg,\n            webp: pat7webp\n        }\n    },\n    {\n        id: '52OOoTT',\n        firstName: 'Marian',\n        lastName: 'Lou',\n        gender: 'female',\n        age: 35,\n        reg: new Date(),\n        avatar: {\n            jpg: pat10jpg,\n            webp: pat10webp\n        }\n    },\n    {\n        id: 'g5Y1oXc',\n        firstName: 'Mike',\n        lastName: 'Lawson',\n        gender: 'male',\n        age: 22,\n        reg: new Date(),\n        online: true,\n        avatar: {\n            jpg: pat3jpg,\n            webp: pat3webp\n        }\n    },\n    {\n        id: 'x4iomTT',\n        firstName: 'Sarah',\n        lastName: 'Bradley',\n        gender: 'female',\n        age: 57,\n        reg: new Date(),\n        online: true,\n        avatar: {\n            jpg: pat1jpg,\n            webp: pat1webp\n        }\n    },\n    {\n        id: 'lan1oRe',\n        firstName: 'Brian',\n        lastName: 'Bright',\n        gender: 'male',\n        age: 28,\n        reg: new Date(),\n        reminder: {\n            type: 'test',\n            text: 'Ultrasound in 3 days'\n        },\n        avatar: {\n            jpg: pat3jpg,\n            webp: pat3webp\n        }\n    },\n    {\n        id: 'bbg1oTT',\n        firstName: 'Bella',\n        lastName: 'Crowley',\n        gender: 'female',\n        age: 28,\n        reg: new Date(),\n        online: true,\n        message: true,\n        avatar: {\n            jpg: pat9jpg,\n            webp: pat9webp\n        }\n    },\n    {\n        id: 'la3orT',\n        firstName: 'Panam',\n        lastName: 'Palmer',\n        gender: 'female',\n        age: 28,\n        reg: new Date(),\n        online: true,\n        reminder: {\n            type: 'consultation',\n            text: 'Keeping pregnant in 4:22'\n        },\n        avatar: {\n            jpg: pat4jpg,\n            webp: pat4webp\n        }\n    },\n    {\n        id: 'x411Xlp',\n        firstName: 'Jason',\n        lastName: 'Ward',\n        gender: 'male',\n        age: 19,\n        reg: new Date(),\n        message: true,\n        avatar: {\n            jpg: pat5jpg,\n            webp: pat5webp\n        }\n    },\n    {\n        id: 'ma11oTr',\n        firstName: 'Crystal',\n        lastName: 'Zeng',\n        gender: 'female',\n        age: 29,\n        reg: new Date(),\n        online: true,\n        avatar: {\n            jpg: pat10jpg,\n            webp: pat10webp\n        }\n    },\n    {\n        id: 'sjiII4s',\n        firstName: 'Amanda',\n        lastName: 'Spencer',\n        gender: 'female',\n        age: 24,\n        reg: new Date(2022, new Date().getMonth() + 1, 1),\n        online: true,\n        avatar: {\n            jpg: pat1jpg,\n            webp: pat1webp\n        }\n    },\n    {\n        id: 'folz25x',\n        firstName: 'Richard',\n        lastName: 'Brown',\n        gender: 'male',\n        age: 57,\n        reg: new Date(2022, new Date().getMonth() + 1, 1),\n        message: true,\n        avatar: {\n            jpg: pat2jpg,\n            webp: pat2webp\n        }\n    },\n    {\n        id: 'ttr5YtB',\n        firstName: 'Hannah',\n        lastName: 'Rose',\n        gender: 'female',\n        age: 31,\n        reg: new Date(2022, new Date().getMonth() + 1, 1),\n        reminder: {\n            type: 'consultation',\n            text: 'Keeping pregnant in 4:22'\n        },\n        avatar: {\n            jpg: pat4jpg,\n            webp: pat4webp\n        }\n    },\n];","// styled components\nimport {Header} from '@components/Widget/style';\nimport {LetterNav, LetterNavWrapper, LetterNavItem, NavWrapper} from './style';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport GenderNav from '@components/GenderNav';\nimport MonthNavigator from '@ui/Navigator/MonthNavigator';\nimport Group from './Group';\nimport NoDataPlaceholder from '@components/NoDataPlaceholder';\n\n// utils\nimport {generateAlphabet} from '@utils/helpers';\nimport {nanoid} from 'nanoid';\n\n// hooks\nimport {useState, useRef, useEffect} from 'react';\nimport useGenderFilter from '@hooks/useGenderFilter';\n\n// data placeholder\nimport {patients} from '@db/patients';\n\nconst PatientsList = () => {\n    const contentRef = useRef(null);\n    // current filter by month\n    const [month, setMonth] = useState({label: 'This month', number: new Date().getMonth()});\n    const dateFilteredArr = patients.filter(item => item.reg.getMonth() === month.number);\n\n    // current filter by gender\n    const {gender, setGender, genderArr} = useGenderFilter(dateFilteredArr);\n\n    // generate an array containing alphabet\n    const alphabet = generateAlphabet();\n\n    const isCharInPatients = (char, arr) => {\n        let contains = false;\n        for (let i = 0; i < arr.length; i++) {\n            const firstLetter = arr[i].lastName.charAt(0).toLowerCase();\n            if (firstLetter === char) {\n                contains = true;\n                break;\n            }\n        }\n        return contains\n    }\n\n    useEffect(() => {\n        contentRef.current?.scrollTo({\n            top: 0,\n            behavior: 'smooth'\n        });\n    }, [month, gender])\n\n    return (\n        <Widget name=\"PatientsList\">\n            <Header sidePadding={true}>\n                <NavWrapper>\n                    <GenderNav state={gender} handler={setGender}/>\n                    <MonthNavigator state={month} handler={setMonth}/>\n                </NavWrapper>\n                <LetterNavWrapper>\n                    <LetterNav>\n                        {\n                            alphabet.map(char => {\n                                return (\n                                    <li key={nanoid(3)}>\n                                        <LetterNavItem\n                                            className={isCharInPatients(char, gender.value === 'all' ? dateFilteredArr : genderArr(gender)) ? 'active' : ''}\n                                            href={`#${char}`}\n                                        >\n                                            {char}\n                                        </LetterNavItem>\n                                    </li>\n                                )\n                            })\n                        }\n                    </LetterNav>\n                </LetterNavWrapper>\n            </Header>\n            <WidgetBody style={{padding: 0}} elRef={contentRef}>\n                {\n                    dateFilteredArr.length !== 0 ?\n                        <>\n                            {\n                                alphabet.map(char => {\n                                    return <Group key={`patients-${char}`}\n                                                  gender={gender.value}\n                                                  char={char}\n                                                  type={'patient'}\n                                                  arr={gender.value === 'all' ? dateFilteredArr : genderArr(gender)}/>\n                                })\n                            }\n                        </>\n                        :\n                        <NoDataPlaceholder/>\n                }\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default PatientsList;","// components\nimport Page from '@layout/Page';\nimport PatientsList from '@widgets/PatientsList';\n\nconst Patients = () => {\n    return (\n        <Page title=\"Patients List\">\n            <PatientsList/>\n        </Page>\n    );\n}\n\nexport default Patients;"],"names":["_ref","state","handler","_ref$loop","loop","_jsx","Navigator","e","direction","currentTarget","dataset","current","number","prevState","_objectSpread","currentMonth","Date","getMonth","prevMonth","nextMonth","label","dateObj","toLocaleString","month","text","prevDisabled","nextDisabled","NavWrapper","styled","HeaderWrapper","withConfig","componentId","breakpoints","tablet","flex","between","LetterNav","ul","theme","light","bodyBg","dark","LetterNavWrapper","div","shadow","shadowDarker","LetterNavItem","a","center","colors","blue","widgetBg","char","arr","type","gender","data","filter","item","lastName","charAt","toLowerCase","_Fragment","children","length","_jsxs","id","GroupSeparator","PersonList","patients","firstName","age","reg","avatar","jpg","pat1jpg","webp","pat1webp","pat4jpg","pat4webp","pat2jpg","pat2webp","pat10jpg","pat10webp","online","pat3jpg","pat3webp","pat5jpg","pat5webp","pat9jpg","pat9webp","pat6jpg","pat6webp","message","pat7jpg","pat7webp","reminder","contentRef","useRef","_useState","useState","_useState2","_slicedToArray","setMonth","dateFilteredArr","_useGenderFilter","useGenderFilter","setGender","genderArr","alphabet","generateAlphabet","isCharInPatients","contains","i","useEffect","_contentRef$current","scrollTo","top","behavior","Widget","name","Header","sidePadding","GenderNav","MonthNavigator","map","className","value","href","concat","nanoid","WidgetBody","style","padding","elRef","Group","NoDataPlaceholder","Page","title","PatientsList"],"sourceRoot":""}