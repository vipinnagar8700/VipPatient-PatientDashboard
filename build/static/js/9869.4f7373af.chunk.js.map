{"version":3,"file":"static/js/9869.4f7373af.chunk.js","mappings":"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","sources":["UI/Legend/LegendItem/index.jsx","UI/Legend/index.jsx","UI/Legend/style.js","UI/Select/style.js","UI/Select/index.jsx","components/CartesianChart/index.jsx","utils/recharts.js","components/Chart/Tooltip/index.jsx","components/PeriodNav/index.jsx","components/Widget/WidgetBody/index.jsx","components/Widget/WidgetNav/index.jsx","constants/options.js","hooks/usePeriodNav.js","widgets/DoctorRatingList/index.jsx","db/cure.js","widgets/DoctorCureRate/index.jsx","pages/DashboardG.jsx","widgets/HealthIndexChart/style.js","db/health.js","widgets/HealthIndexChart/index.jsx"],"sourcesContent":["// styled components\nimport {ListItem} from '../style';\nimport {LegendBadge} from '@ui/Badge/style';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst LegendItem = ({color, legend}) => {\n    return (\n        <ListItem>\n            <LegendBadge color={color} /> {legend}\n        </ListItem>\n    )\n}\n\nLegendItem.propTypes = {\n    color: PropTypes.string.isRequired,\n    legend: PropTypes.string.isRequired\n}\n\nexport default LegendItem;","// styled components\nimport {List} from './style';\n\n// utils\nimport PropTypes from \"prop-types\";\n\nconst Legend = ({children, overlay}) => {\n    return <List overlay={overlay}>{children}</List>\n}\n\nLegend.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n    overlay: PropTypes.bool,\n}\n\nexport default Legend;","import styled from 'styled-components/macro';\nimport {textSizes, fonts} from '@styles/vars';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px 16px;\n  ${props => props.overlay && `\n    position: absolute;\n    bottom: 22px;\n    left: 24px\n  `}\n`\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  text-transform: uppercase;\n  font-family: ${fonts.accent};\n  font-size: ${textSizes['10']};\n`","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {textSizes, light, dark, colors, fonts, breakpoints} from '@styles/vars';\nimport {fadeIn} from '@styles/keyframes';\nimport Select from 'react-select';\n\nconst basicBg = theme('theme', {\n    light: light.highlight,\n    dark: dark.highlight,\n})\n\nconst basicColor = theme('theme', {\n    light: light.text,\n    dark: dark.text,\n})\n\nconst NormalizedSelect = styled(Select)`\n  .Select {\n    &__control {\n      cursor: pointer;\n      transition: var(--transition);\n      border: none;\n      background-color: ${basicBg};\n      border-radius: 8px;\n      font-size: ${textSizes['16']};\n      height: 40px;\n      padding-right: 16px;\n\n      &--is-focused, &:hover {\n        outline: none;\n      }\n\n      &--is-focused, &--is-focused:hover {\n        box-shadow: 0 0 0 2px ${colors.blue} !important;\n      }\n\n      &:hover {\n        box-shadow: ${theme('theme', {\n          light: `0 0 0 2px #A2C0D4`,\n          dark: `0 0 0 2px ${colors.dark}`\n        })};\n      }\n\n      .icon {\n        transition: .3s ease-in-out;\n        color: ${theme('theme', {\n          light: '#A2C0D4',\n          dark: colors.gray,\n        })};\n        font-size: ${textSizes['12']};\n      }\n    }\n\n    &__menu {\n      min-width: max-content;\n      width: 100%;\n      color: ${basicColor};\n      background-color: ${basicBg};\n      border-radius: 8px;\n      animation: ${fadeIn} var(--transition);\n      z-index: 100;\n\n      &-list {\n        max-height: 180px;\n        overflow-y: auto;\n        scroll-behavior: smooth;\n        z-index: 100;\n      }\n    }\n\n    &__indicator, &__indicator-separator {\n      display: none;\n    }\n\n    &__option {\n      cursor: pointer;\n      transition: var(--transition);\n\n      &:hover,\n      &--is-focused,\n      &--is-selected {\n        background: transparent;\n        color: ${colors.blue};\n      }\n    }\n\n    &__single-value {\n      color: ${theme('theme', {\n        light: light.text,\n        dark: dark.text,\n      })};\n    }\n  }\n`;\n\nexport const Basic = styled(NormalizedSelect)`\n  .Select {\n    &__control {\n      font-size: ${textSizes['14']};\n    }\n\n    &__input-container {\n      color: ${basicColor};\n    }\n\n    &__value-container {\n      padding: 0 16px;\n    }\n  }\n`;\n\nexport const Minimal = styled(NormalizedSelect)`\n  .Select {\n    &__control {\n      background-color: transparent;\n      width: fit-content;\n      font-weight: 500;\n      font-family: ${fonts.accent};\n      border-radius: 0;\n      height: unset;\n      padding: 0;\n      font-size: ${textSizes['18']};\n\n      &--is-focused, &:hover {\n        box-shadow: none !important;\n      }\n    }\n\n    &__value-container {\n      padding: 0 20px 0 0;\n    }\n  }\n\n  ${breakpoints.tablet} {\n    .Select__control {\n      font-size: ${textSizes['20']};\n    }\n  }\n`;\n\nexport const User = styled(NormalizedSelect)`\n  .Select {\n    &__control {\n      &--is-focused, &:hover {\n        box-shadow: none !important;\n      }\n    }\n\n    &__input-container {\n      padding-left: 16px;\n      color: inherit;\n    }\n\n    &__value-container {\n      padding: 0 16px 0 0;\n    }\n\n    &__value-container,\n    &__option {\n      .user-option {\n        display: flex;\n        align-items: center;\n        gap: 10px;\n        color: inherit;\n      }\n    }\n  }\n`;","// styled components\nimport {Basic, Minimal, User} from './style';\n\n// utils\nimport PropTypes from 'prop-types';\nimport {components} from 'react-select';\n\n// hooks\nimport {useEffect, useState} from 'react';\n\nconst CustomSelect = ({label, options, variant, value, changeHandler, placeholder}) => {\n    // automatically select the first option if no placeholder is provided\n    useEffect(() => {\n        if (!placeholder && value === null) {\n            changeHandler(options[0]);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const [uniqueId] = useState(\n        () => 'select_' + Math.random().toFixed(5).slice(2),\n    );\n\n    const Control = ({children, ...props}) => (\n        <components.Control {...props}>\n            {children}\n            <i className={`icon icon-${variant === 'minimal' ? 'caret' : 'chevron'}-down`}></i>\n        </components.Control>\n    );\n\n    const commonProps = {\n        classNamePrefix: 'Select',\n        inputId: label,\n        isSearchable: variant !== 'user',\n        options: options,\n        value: value,\n        onChange: changeHandler,\n        placeholder: placeholder,\n        openMenuOnFocus: true,\n        components: {\n            Control: Control,\n            Menu: (props) => <components.Menu {...props} className=\"menu\">\n                {props.children}\n            </components.Menu>\n        },\n        id: uniqueId,\n        blurInputOnSelect: true,\n        className: `select-${variant}`\n    }\n\n    switch (variant) {\n        default:\n        case 'basic': {\n            return <Basic {...commonProps} />;\n        }\n        case 'minimal': {\n            return <Minimal {...commonProps} />;\n        }\n        case 'user': {\n            return <User {...commonProps} />;\n        }\n    }\n}\n\nCustomSelect.propTypes = {\n    options: PropTypes.any,\n    variant: PropTypes.oneOf(['minimal', 'basic', 'user']).isRequired,\n    value: PropTypes.any,\n    changeHandler: PropTypes.func,\n    placeholder: PropTypes.string\n}\n\nexport default CustomSelect;","// styling\nimport {colors} from '@styles/vars';\nimport {StyledTooltip} from '@components/Chart/Tooltip';\n\n// components\nimport {LineChart, Line, ResponsiveContainer, CartesianGrid, AreaChart, Area, Tooltip} from 'recharts';\n\n// hooks\nimport {useTheme} from 'styled-components';\nimport {useLayoutEffect, useState} from 'react';\nimport useWindowSize from '@hooks/useWindowSize';\n\n// utils\nimport {generateGridPoints} from '@utils/recharts';\n\nconst CartesianChart = ({variant, id, data, elems, ...props}) => {\n    const {width} = useWindowSize();\n    const {theme} = useTheme();\n    const [points, setPoints] = useState([]);\n    const isTablet = width >= 768;\n\n    // generate grid points based on the container width\n    useLayoutEffect(() => {\n        setPoints(generateGridPoints(id));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [width]);\n\n    // custom tooltip\n    const renderTooltip = (props) => {\n        const {active, payload} = props;\n        if (active && payload && payload.length) {\n            return (\n                <StyledTooltip className=\"multiple\">\n                    {payload.map((item, index) => (\n                        <div className=\"item\" key={index}>\n                            <div className=\"color\" style={{background: item.stroke}} />\n                            <div className=\"value\">{item.value}</div>\n                        </div>\n                    ))}\n                </StyledTooltip>\n            );\n        }\n        return null;\n    }\n\n    return (\n        <ResponsiveContainer height={isTablet ? '100%' : props.height} width=\"100%\" id={id}>\n            {\n                variant === 'line' ?\n                    <LineChart margin={false} data={data} {...props}>\n                        <defs>\n                            <linearGradient id=\"dark\"\n                                            x1=\"0.00669497\"\n                                            y1=\"1\"\n                                            x2=\"0.00669497\"\n                                            y2=\"327.445\"\n                                            gradientUnits=\"userSpaceOnUse\"\n                            >\n                                <stop stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.512299\" stopColor={colors.dark}/>\n                                <stop offset=\"0.99905\" stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                            <linearGradient id=\"light\"\n                                            x1=\"0.00385257\"\n                                            y1=\"1\"\n                                            x2=\"0.00385257\"\n                                            y2=\"328.377\"\n                                            gradientUnits=\"userSpaceOnUse\">\n                                <stop stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.504355\" stopColor={colors.light_gray}/>\n                                <stop offset=\"0.99905\" stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                        </defs>\n                        <CartesianGrid stroke={`url(#${theme === 'dark' ? 'dark' : 'light'})`}\n                                       strokeDasharray=\"6\"\n                                       strokeLinecap=\"square\"\n                                       horizontal={false}\n                                       verticalPoints={points}\n                                       width=\"100%\"\n                                       height=\"100%\"\n                        />\n                        {\n                            elems.map(el => {\n                                return <Line key={el.dataKey} {...el} />\n                            })\n                        }\n                        <Tooltip cursor={false} content={renderTooltip} />\n                    </LineChart>\n                    :\n                    <AreaChart margin={{ top: 5 }} data={data} {...props}>\n                        <defs>\n                            <linearGradient id=\"dark\"\n                                            x1=\"0.00669497\"\n                                            y1=\"1\"\n                                            x2=\"0.00669497\"\n                                            y2=\"327.445\"\n                                            gradientUnits=\"userSpaceOnUse\"\n                            >\n                                <stop stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.512299\" stopColor={colors.dark}/>\n                                <stop offset=\"0.99905\" stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                            <linearGradient id=\"light\"\n                                            x1=\"0.00385257\"\n                                            y1=\"1\"\n                                            x2=\"0.00385257\"\n                                            y2=\"328.377\"\n                                            gradientUnits=\"userSpaceOnUse\">\n                                <stop stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.504355\" stopColor={colors.light_gray}/>\n                                <stop offset=\"0.99905\" stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                            {props.children}\n                        </defs>\n                        <CartesianGrid stroke={`url(#${theme === 'dark' ? 'dark' : 'light'})`}\n                                       strokeDasharray=\"6\"\n                                       strokeLinecap=\"square\"\n                                       horizontal={false}\n                                       verticalPoints={points}\n                                       width=\"100%\"\n                                       height=\"100%\"\n                        />\n                        {\n                            elems.map(el => {\n                                return <Area key={el.dataKey} {...el} />\n                            })\n                        }\n                        <Tooltip cursor={false} content={renderTooltip} />\n                    </AreaChart>\n            }\n        </ResponsiveContainer>\n    )\n}\n\nexport default CartesianChart;","// cartesian grid points generator\nexport const generateGridPoints = (id, gutter = 20) => {\n    const gridWidth = document.getElementById(id).offsetWidth;\n\n    let points = [];\n    for (let i = 0; i < gridWidth; i += gutter) {\n        points.push(i);\n    }\n    return points;\n}","// styling\nimport styled from 'styled-components/macro';\nimport {light, textSizes, fonts, flex} from '@styles/vars';\n\nexport const StyledTooltip = styled.div`\n  font-family: ${fonts.accent};\n  font-size: ${textSizes['10']};\n  color: #fff;\n  box-shadow: 0 1px 8px rgba(65, 77, 85, 0.4);\n  border-radius: 8px;\n  background-color: ${light.text};\n  height: 20px;\n  padding: 0 8px;\n  display: flex;\n  ${flex.center}\n  line-height: 1;\n  position: relative;\n  text-transform: uppercase;\n  \n  &.multiple {\n    flex-direction: column;\n    gap: 10px;\n    padding: 10px;\n    height: auto;\n    \n    .item {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      \n      .color {\n        width: 6px;\n        height: 6px;\n        border-radius: 50%;\n      }\n    }\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    left: 50%;\n    bottom: -3px;\n    transform: translateX(-50%) rotate(-45deg);\n    width: 8px;\n    height: 8px;\n    background-color: ${light.text};\n    display: ${props => props.arrow ? 'block' : 'none'};\n  }\n`;\n\nconst ChartTooltip = ({active, payload, tooltip, arrow = false, multi = false, ...props}) => {\n    if (multi) {\n        if (!active || !tooltip) return null\n        for (const item of payload)\n            if (item.dataKey === tooltip)\n                return <StyledTooltip arrow={arrow}>{item.value}</StyledTooltip>\n        return null\n    } else {\n        if (!active || !payload[0]) return null\n        return (\n            <StyledTooltip arrow={arrow}> {payload[0].value} {props.right && payload[0].dataKey}</StyledTooltip>\n        )\n    }\n}\n\nexport default ChartTooltip;\n","// styled components\nimport {Container, Item, Button} from '@ui/TabNav/style';\n\n// hooks\nimport usePeriodNav from '@hooks/usePeriodNav';\n\n// utils\nimport {nanoid} from 'nanoid';\n\nconst PeriodNav = ({current, handler}) => {\n    const {periods} = usePeriodNav();\n\n    return (\n        <Container>\n            {\n                periods.map(p =>\n                    <Item key={nanoid(4)}>\n                        <Button className={current === p && 'active'} onClick={() => handler(p)}>{p}</Button>\n                    </Item>\n                )\n            }\n        </Container>\n    )\n}\n\nexport default PeriodNav;","// styled components\nimport {Body} from '../style';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst WidgetBody = ({children, style, sidePadding = false, elRef, ...props}) => {\n    return <Body ref={elRef} sidePadding={sidePadding} style={style} {...props}>{children}</Body>\n}\n\nWidgetBody.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n    sidePadding: PropTypes.bool,\n    style: PropTypes.any,\n}\n\nexport default WidgetBody;","// styled components\nimport {Nav} from '../style';\n\n// components\nimport WidgetHeader from '../WidgetHeader';\n\n// utils\nimport PropTypes from \"prop-types\";\n\nconst WidgetNav = ({title, handler, sidePadding, children, disabled, ...props}) => {\n    return (\n        <WidgetHeader title={title} sidePadding={sidePadding} style={props.style} className=\"nav\">\n            <Nav>\n                <button onClick={handler} data-direction=\"prev\" className={disabled ? 'disabled' : ''} aria-label=\"Previous\">\n                    <i className=\"icon icon-chevron-left\"/>\n                </button>\n                <button onClick={handler} data-direction=\"next\" className={disabled ? 'disabled' : ''} aria-label=\"Next\">\n                    <i className=\"icon icon-chevron-right\"/>\n                </button>\n            </Nav>\n            {children}\n        </WidgetHeader>\n    )\n}\n\nWidgetNav.propTypes = {\n    title: PropTypes.string.isRequired,\n    handler: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n}\n\nexport default WidgetNav;","import {doctors} from '@db/doctors';\nimport Avatar from '@ui/Avatar';\n\nexport const tasksOptions = [\n    {value: 'work', label: 'Work'},\n    {value: 'travel', label: 'Travel'},\n    {value: 'family', label: 'Family'},\n    {value: 'other', label: 'Other'}\n]\n\nexport const depsOptions = [\n    {value: 'all', label: 'All Departments'},\n    {value: 'family', label: 'Family Doctors'},\n    {value: 'therapy', label: 'Therapists'},\n    {value: 'dent', label: 'Dentists'},\n    {value: 'cardio', label: 'Cardiologists'},\n]\n\nexport const testsOptions = [\n    {value: 'all', label: 'All My Tests'},\n    {value: 'blood', label: 'Blood Count'},\n    {value: 'xray', label: 'X-Ray'},\n    {value: 'ecg', label: 'ECG'},\n    {value: 'ct', label: 'CT Scan'},\n    {value: 'mri', label: 'MRI'},\n    {value: 'ultrasound', label: 'Ultrasound'},\n    {value: 'prenatal', label: 'Prenatal Testing'},\n]\n\nexport const doctorsOptions = () => {\n    let options = [];\n    doctors.forEach(doctor => {\n        options.push({\n            value: doctor.id,\n            label: <div className=\"user-option\">\n                <Avatar avatar={doctor.avatar} alt={doctor.name} size={40} />\n                <span>{doctor.name}</span>\n            </div>\n        });\n    });\n    return options;\n}","import {useState} from 'react';\n\nconst usePeriodNav = () => {\n    const periods = ['year', 'month', 'week'];\n    const [period, setPeriod] = useState(periods[0]);\n    const setPeriodIndex = (index) => setPeriod(periods[index]);\n\n    return {period, periods, setPeriod, setPeriodIndex};\n}\n\nexport default usePeriodNav;","// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport ScrollContainer from '@components/ScrollContainer';\nimport PeriodNav from '@components/PeriodNav';\nimport Tab from 'react-bootstrap/Tab';\nimport DoctorRatingItem from '@components/DoctorRatingItem';\n\n// hooks\nimport useContentHeight from '@hooks/useContentHeight';\nimport {useRef, useState, useEffect} from 'react';\nimport usePeriodNav from '@hooks/usePeriodNav';\n\n// data placeholder\nimport {doctors} from '@db/doctors';\n\nconst DoctorsRatingList = () => {\n    const [current, setCurrent] = useState(usePeriodNav().period);\n    const headerRef = useRef(null);\n    const contentRef = useRef(null);\n    const height = useContentHeight(headerRef);\n\n    useEffect(() => {\n        contentRef.current.scrollTop = 0;\n    }, [current]);\n\n    const List = ({period}) => {\n        return (\n            <>\n                {\n                    doctors.map(doctor => <DoctorRatingItem key={doctor.id} data={doctor} period={period}/>)\n                }\n            </>\n        )\n    }\n\n    return (\n        <Widget name=\"DoctorsRatingList\" mobile={600}>\n            <WidgetHeader title=\"Doctors rating\" flex=\"column\" style={{paddingBottom: 4}} elRef={headerRef}>\n                <PeriodNav current={current} handler={setCurrent} />\n            </WidgetHeader>\n            <WidgetBody style={{padding: 0}}>\n                <ScrollContainer height={height}>\n                    <div className=\"track\" ref={contentRef}>\n                        <Tab.Container activeKey={current} transition={true}>\n                            <Tab.Content>\n                                <Tab.Pane eventKey=\"year\">\n                                    <List period=\"year\"/>\n                                </Tab.Pane>\n                                <Tab.Pane eventKey=\"month\">\n                                    <List period=\"month\"/>\n                                </Tab.Pane>\n                                <Tab.Pane eventKey=\"week\">\n                                    <List period=\"week\"/>\n                                </Tab.Pane>\n                            </Tab.Content>\n                        </Tab.Container>\n                    </div>\n                </ScrollContainer>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default DoctorsRatingList;","export const data = [\n    {\n        id: 'marvin_park',\n        stats: [\n            {sick: 154, cured: 97},\n            {sick: 205, cured: 300},\n            {sick: 369, cured: 207},\n            {sick: 250, cured: 344},\n            {sick: 200, cured: 100},\n            {sick: 120, cured: 400},\n            {sick: 80, cured: 150},\n            {sick: 366, cured: 211},\n            {sick: 600, cured: 400},\n            {sick: 200, cured: 500},\n            {sick: 160, cured: 200},\n            {sick: 650, cured: 480}\n        ]\n    },\n    {\n        id: 'norman_munoz',\n        stats: [\n            {sick: 352, cured: 469},\n            {sick: 488, cured: 610},\n            {sick: 120, cured: 80},\n            {sick: 250, cured: 344},\n            {sick: 200, cured: 100},\n            {sick: 120, cured: 400},\n            {sick: 80, cured: 200},\n            {sick: 740, cured: 400},\n            {sick: 500, cured: 100},\n            {sick: 200, cured: 156},\n            {sick: 500, cured: 80},\n            {sick: 100, cured: 20}\n        ]\n    },\n    {\n        id: 'tillie_mathis',\n        stats: [\n            {sick: 154, cured: 97},\n            {sick: 205, cured: 300},\n            {sick: 369, cured: 207},\n            {sick: 250, cured: 344},\n            {sick: 700, cured: 100},\n            {sick: 120, cured: 400},\n            {sick: 400, cured: 150},\n            {sick: 366, cured: 211},\n            {sick: 100, cured: 800},\n            {sick: 200, cured: 500},\n            {sick: 20, cured: 200},\n            {sick: 650, cured: 480}\n        ]\n    },\n    {\n        id: 'cornelia_phillips',\n        stats: [\n            {sick: 97, cured: 154},\n            {sick: 300, cured: 205},\n            {sick: 207, cured: 369},\n            {sick: 250, cured: 344},\n            {sick: 500, cured: 100},\n            {sick: 120, cured: 400},\n            {sick: 400, cured: 150},\n            {sick: 366, cured: 211},\n            {sick: 100, cured: 500},\n            {sick: 200, cured: 500},\n            {sick: 20, cured: 200},\n            {sick: 650, cured: 480}\n        ]\n    },\n    {\n        id: 'isaiah_goodman',\n        stats: [\n            {sick: 352, cured: 469},\n            {sick: 488, cured: 610},\n            {sick: 120, cured: 80},\n            {sick: 250, cured: 344},\n            {sick: 200, cured: 100},\n            {sick: 120, cured: 400},\n            {sick: 80, cured: 200},\n            {sick: 300, cured: 400},\n            {sick: 500, cured: 100},\n            {sick: 200, cured: 156},\n            {sick: 500, cured: 800},\n            {sick: 700, cured: 1000}\n        ]\n    },\n    {\n        id: 'claudia_turner',\n        stats: [\n            {sick: 100, cured: 469},\n            {sick: 488, cured: 610},\n            {sick: 120, cured: 80},\n            {sick: 250, cured: 344},\n            {sick: 200, cured: 100},\n            {sick: 120, cured: 400},\n            {sick: 800, cured: 200},\n            {sick: 300, cured: 400},\n            {sick: 500, cured: 100},\n            {sick: 200, cured: 156},\n            {sick: 500, cured: 20},\n            {sick: 100, cured: 50}\n        ]\n    },\n    {\n        id: 'emily_rivera',\n        stats: [\n            {sick: 800, cured: 400},\n            {sick: 400, cured: 800},\n            {sick: 250, cured: 500},\n            {sick: 500, cured: 250},\n            {sick: 800, cured: 400},\n            {sick: 400, cured: 800},\n            {sick: 250, cured: 500},\n            {sick: 500, cured: 250},\n            {sick: 800, cured: 400},\n            {sick: 400, cured: 800},\n            {sick: 250, cured: 500},\n            {sick: 500, cured: 250},\n        ]\n    }\n]","// styling\nimport {rgba} from 'polished';\nimport {colors, light, dark} from '@styles/vars';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport CustomSelect from '@ui/Select';\nimport Legend from '@ui/Legend';\nimport LegendItem from '@ui/Legend/LegendItem';\nimport CartesianChart from '@components/CartesianChart';\n\n// hooks\nimport {useState} from 'react';\nimport {useTheme} from 'styled-components';\n\n// utils\nimport {doctorsOptions} from '@constants/options';\n\n// data placeholder\nimport {data} from '@db/cure';\n\nconst DoctorCureRate = () => {\n    const {theme} = useTheme();\n    const options = doctorsOptions();\n    const [selectedDoctor, setSelectedDoctor] = useState(options[0]);\n\n    const chartData = data.find(item => item.id === selectedDoctor.value).stats;\n\n    const common = {\n        type: 'monotone',\n        strokeWidth: 3,\n        activeDot: {r: 4},\n        fillOpacity: .8\n    }\n\n    const chartElems = [\n        {\n            ...common,\n            dataKey: 'cured',\n            stroke: colors.teal,\n            fill: theme === 'light' ? 'url(#cure_light)' : 'url(#cure)',\n            activeDot: {r: 5, fill: colors.teal, stroke: theme === 'light' ? light.widgetBg : dark.widgetBg, strokeWidth: 2},\n            style: {\n                filter: `drop-shadow(0 0 4px ${rgba(colors.teal, .5)})`\n            }\n        },\n        {\n            ...common,\n            dataKey: 'sick',\n            stroke: colors.red,\n            fill: 'none',\n            activeDot: {r: 5, fill: colors.red, stroke: theme === 'light' ? light.widgetBg : dark.widgetBg, strokeWidth: 2},\n            style: {\n                filter: `drop-shadow(0 0 4px ${rgba(colors.red, .5)})`\n            }\n        }\n    ]\n\n    return (\n        <Widget name=\"DoctorCureRate\">\n            <WidgetHeader title=\"Cure rate\" flex=\"column\">\n                <CustomSelect options={options} value={selectedDoctor} variant=\"user\" changeHandler={e => setSelectedDoctor(e)} />\n            </WidgetHeader>\n            <WidgetBody style={{padding: 0, overflowY: 'hidden'}}>\n                <CartesianChart id=\"DoctorCureRate\" data={chartData} elems={chartElems} variant=\"area\" height={265}>\n                    <defs>\n                        <linearGradient id=\"cure_light\" x1=\"0\" y1=\"-0.5\" x2=\"0\" y2=\"240\" gradientUnits=\"userSpaceOnUse\">\n                            <stop stopColor=\"#53F5E8\"/>\n                            <stop offset=\"1\" stopColor=\"#29E7CD\" stopOpacity=\"0.01\"/>\n                        </linearGradient>\n                        <linearGradient id=\"cure\" x1=\"1.83382\" y1=\"-0.5\" x2=\"1.83382\" y2=\"238.857\" gradientUnits=\"userSpaceOnUse\">\n                            <stop stopColor=\"#53F5E8\"/>\n                            <stop offset=\"1\" stopColor=\"#171819\"/>\n                        </linearGradient>\n                    </defs>\n                </CartesianChart>\n                <Legend overlay={true}>\n                    <LegendItem color=\"red\" legend=\"sick\" />\n                    <LegendItem color=\"teal\" legend=\"cured\" />\n                </Legend>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default DoctorCureRate;","// components\nimport Page from '@layout/Page';\nimport DoctorsRatingList from '@widgets/DoctorRatingList';\nimport HealthIndexChart from '@widgets/HealthIndexChart';\nimport DoctorCureRate from '@widgets/DoctorCureRate';\n\nconst DashboardG = () => {\n    return (\n        <Page title=\"Dashboard\">\n            <div key=\"doctors-rating\">\n                <DoctorsRatingList type=\"tabs\"/>\n            </div>\n            <div key=\"health-index\">\n                <HealthIndexChart variant=\"both\"/>\n            </div>\n            <div key=\"cure-rate\">\n                <DoctorCureRate/>\n            </div>\n        </Page>\n    )\n}\n\nexport default DashboardG;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {colors, textSizes, breakpoints, flex} from '@styles/vars';\n\nexport const HealthIndexChartWrapper = styled.div`\n  height: 100%;\n  ${flex.col};\n  justify-content: space-between;\n\n  .total {\n    display: flex;\n    gap: 40px;\n    margin: -4px 24px 0;\n    position: relative;\n\n    &_block {\n      font-size: ${textSizes['12']};\n\n      .counter {\n        position: absolute;\n        top: 0;\n        left: 0;\n      }\n\n      .spacer {\n        opacity: 0;\n      }\n\n      .hidden {\n        display: none;\n      }\n\n      &--cured .h1 {\n        color: ${colors.azure};\n      }\n\n      &--sick {\n        position: relative;\n\n        .h1 {\n          color: ${colors.peach};\n        }\n\n        &:before {\n          content: '';\n          height: 100%;\n          width: 1px;\n          background: ${theme('theme', {\n            light: '#A2C0D4',\n            dark: '#383D40',\n          })};\n          position: absolute;\n          top: 0;\n          left: -20px;\n        }\n      }\n    }\n\n    ${breakpoints.tablet} {\n      .total_block {\n        font-size: ${textSizes['14']};\n\n        .hidden {\n          display: inline;\n        }\n      }\n    }\n\n    ${breakpoints.laptop} {\n      .total_block {\n        font-size: ${textSizes['16']};\n      }\n    }\n  }\n`;","export const y2020 = [\n    {cured: 314, sick: 200},\n    {cured: 200, sick: 400},\n    {cured: 265, sick: 120},\n    {cured: 156, sick: 300},\n    {cured: 412, sick: 200},\n    {cured: 280, sick: 500},\n    {cured: 251, sick: 130},\n    {cured: 180, sick: 300},\n    {cured: 304, sick: 150},\n    {cured: 505, sick: 408},\n    {cured: 328, sick: 200},\n    {cured: 254, sick: 90},\n    {cured: 301, sick: 566},\n    {cured: 459, sick: 189},\n    {cured: 354, sick: 480},\n    {cured: 264, sick: 400},\n    {cured: 309, sick: 200},\n    {cured: 185, sick: 500},\n];\n\nexport const y2021 = [\n    {cured: 450, sick: 250},\n    {cured: 150, sick: 380},\n    {cured: 370, sick: 200},\n    {cured: 300, sick: 180},\n    {cured: 500, sick: 250},\n    {cured: 400, sick: 600},\n    {cured: 200, sick: 300},\n    {cured: 400, sick: 150},\n    {cured: 348, sick: 130},\n    {cured: 400, sick: 280},\n    {cured: 200, sick: 400},\n    {cured: 300, sick: 241},\n    {cured: 380, sick: 480},\n    {cured: 200, sick: 380},\n    {cured: 400, sick: 200},\n    {cured: 500, sick: 250},\n    {cured: 400, sick: 300},\n    {cured: 300, sick: 450},\n];\n\nexport const y2022 = [\n    {cured: 200, sick: 300},\n    {cured: 250, sick: 350},\n    {cured: 390, sick: 240},\n    {cured: 450, sick: 320},\n    {cured: 550, sick: 250},\n    {cured: 420, sick: 200},\n    {cured: 368, sick: 198},\n    {cured: 250, sick: 370},\n    {cured: 322, sick: 200},\n    {cured: 450, sick: 270},\n    {cured: 210, sick: 394},\n    {cured: 180, sick: 270},\n    {cured: 380, sick: 480},\n    {cured: 390, sick: 550},\n    {cured: 450, sick: 210},\n    {cured: 470, sick: 360},\n    {cured: 360, sick: 190},\n    {cured: 300, sick: 250},\n];\n","// styling\nimport {colors, light, dark} from '@styles/vars';\n\n// styled components\nimport {HealthIndexChartWrapper} from '@widgets/HealthIndexChart/style';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetNav from '@components/Widget/WidgetNav';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport {ScatterChart, Scatter, ResponsiveContainer, Tooltip, Cell} from 'recharts';\nimport Legend from '@ui/Legend';\nimport LegendItem from '@ui/Legend/LegendItem';\nimport ChartTooltip from '@components/Chart/Tooltip';\nimport CountUp from 'react-countup';\n\n// utils\nimport PropTypes from 'prop-types';\n\n// hooks\nimport useArrayNav from '@hooks/useArrayNav';\nimport usePeriodNav from '@hooks/usePeriodNav';\nimport {useTheme} from 'styled-components';\n\n// data placeholder\nimport {y2020, y2021, y2022} from '@db/health';\n\nconst HealthIndexChart = ({variant}) => {\n    const {theme} = useTheme();\n    const {periods} = usePeriodNav();\n    const {index, navigate} = useArrayNav(periods);\n\n    const averages = [\n        {cured: 75.08, sick: 45.27},\n        {cured: 84.51, sick: 33.12},\n        {cured: 67.14, sick: 48.65},\n    ]\n\n    const getCurrentData = () => {\n        switch (index) {\n            default:\n            case 0:\n                return y2020;\n            case 1:\n                return y2021;\n            case 2:\n                return y2022;\n        }\n    }\n    const data = getCurrentData();\n\n    const CustomScatterShape = ({cx, cy, fill, ...props}) => {\n        const isDominant = variant === 'both' ? props.dom === props.dataKey : props.dataKey === 'cured';\n\n        return (\n            <svg width=\"10\" height=\"222\" viewBox=\"0 0 10 222\" x={cx} y={cy} fill=\"none\"\n                 xmlns=\"http://www.w3.org/2000/svg\">\n                {\n                    isDominant &&\n                    <path opacity=\"0.5\" d=\"M5 28.3799V220.38\"\n                          stroke={`url(#scatter_${props.dataKey})`} strokeWidth=\"2\"\n                          strokeLinecap=\"round\"/>\n                }\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n                      d=\"M5 10C7.76142 10 10 7.76142 10 5C10 2.23858 7.76142 0 5 0C2.23858 0 0 2.23858 0 5C0 7.76142 2.23858 10 5 10Z\"\n                      fill={fill}/>\n                <defs>\n                    <linearGradient id=\"scatter_cured\" x1=\"5.5\" y1=\"220.38\" x2=\"5.5\" y2=\"28.3799\"\n                                    gradientUnits=\"userSpaceOnUse\">\n                        <stop stopColor={theme === 'light' ? light.widgetBg : dark.widgetBg}/>\n                        <stop offset=\"1\" stopColor={colors.azure}/>\n                    </linearGradient>\n                    <linearGradient id=\"scatter_sick\" x1=\"5.5\" y1=\"220.38\" x2=\"5.5\" y2=\"28.3799\"\n                                    gradientUnits=\"userSpaceOnUse\">\n                        <stop stopColor={theme === 'light' ? light.widgetBg : dark.widgetBg}/>\n                        <stop offset=\"1\" stopColor={colors.peach}/>\n                    </linearGradient>\n                </defs>\n            </svg>\n        );\n    }\n\n    return (\n        <Widget name=\"HealthIndexChart\">\n            <WidgetNav title=\"Health index\" handler={navigate}/>\n            <WidgetBody style={{padding: 0, overflow: 'hidden'}}>\n                <HealthIndexChartWrapper>\n                    <div className=\"total\">\n                        <div className=\"total_block total_block--cured\">\n                            <span className=\"spacer h1\">{averages[index].cured}</span>\n                            <CountUp className=\"counter h1\" end={averages[index].cured} duration={2} decimals={2} />\n                            <span><span className=\"hidden\">patients</span> health rate</span>\n                        </div>\n                        {\n                            variant === 'both' && (\n                                <div className=\"total_block total_block--sick\">\n                                    <span className=\"spacer h1\">{averages[index].sick}</span>\n                                    <CountUp className=\"counter h1\" end={averages[index].sick} duration={2} decimals={2} />\n                                    <span><span className=\"hidden\">patients</span> sick rate</span>\n                                </div>\n                            )\n                        }\n                    </div>\n                    <ResponsiveContainer width=\"100%\" height={250}>\n                        <ScatterChart margin={false} data={data}>\n                            {\n                                variant === 'both' &&\n                                <Scatter dataKey=\"sick\" shape={CustomScatterShape}>\n                                    {data.map((entry, i) => {\n                                        return (\n                                            <Cell key={`cell-${i}`}\n                                                  fill={colors.peach}\n                                                  dom={entry.sick > entry.cured ? 'sick' : 'cured'}\n                                                  dataKey=\"sick\"/>\n                                        )\n                                    })}\n                                </Scatter>\n                            }\n                            <Scatter dataKey=\"cured\" shape={CustomScatterShape}>\n                                {data.map((entry, i) => {\n                                    return (\n                                        <Cell key={`cell-${i}`}\n                                              fill={colors.azure}\n                                              dom={entry.cured > entry.sick ? 'cured' : 'sick'}\n                                              dataKey=\"cured\"/>\n                                    )\n                                })}\n                            </Scatter>\n                            <Tooltip cursor={false} content={<ChartTooltip right/>}/>\n                        </ScatterChart>\n                    </ResponsiveContainer>\n                    <Legend overlay={true}>\n                        <LegendItem color=\"azure\" legend=\"Health rate\"/>\n                        {variant === 'both' && <LegendItem color=\"peach\" legend=\"Sick rate\"/>}\n                    </Legend>\n                </HealthIndexChartWrapper>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nHealthIndexChart.propTypes = {\n    variant: PropTypes.oneOf(['health', 'both']).isRequired\n}\n\nexport default HealthIndexChart;"],"names":["_ref","color","legend","_jsxs","ListItem","children","_jsx","LegendBadge","overlay","List","styled","ul","withConfig","componentId","props","li","fonts","accent","textSizes","basicBg","theme","light","highlight","dark","basicColor","text","NormalizedSelect","Select","colors","blue","concat","gray","fadeIn","Basic","Minimal","breakpoints","tablet","User","label","options","variant","value","changeHandler","placeholder","useEffect","_useState","useState","Math","random","toFixed","slice","uniqueId","_slicedToArray","commonProps","classNamePrefix","inputId","isSearchable","onChange","openMenuOnFocus","components","Control","_ref2","_objectWithoutProperties","_excluded","_objectSpread","className","Menu","id","blurInputOnSelect","data","elems","width","useWindowSize","useTheme","_useState2","points","setPoints","isTablet","useLayoutEffect","gutter","arguments","length","undefined","gridWidth","document","getElementById","offsetWidth","i","push","generateGridPoints","renderTooltip","active","payload","StyledTooltip","map","item","index","style","background","stroke","ResponsiveContainer","height","LineChart","margin","x1","y1","x2","y2","gradientUnits","stopColor","stopOpacity","offset","light_gray","CartesianGrid","strokeDasharray","strokeLinecap","horizontal","verticalPoints","el","Line","dataKey","Tooltip","cursor","content","AreaChart","top","Area","div","flex","center","arrow","tooltip","_ref$arrow","_ref$multi","multi","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","right","current","handler","periods","usePeriodNav","Container","p","Item","Button","onClick","nanoid","_ref$sidePadding","sidePadding","elRef","Body","ref","title","disabled","WidgetHeader","Nav","depsOptions","testsOptions","doctorsOptions","doctors","forEach","doctor","Avatar","avatar","alt","name","size","period","setPeriod","setPeriodIndex","setCurrent","headerRef","useRef","contentRef","useContentHeight","scrollTop","_Fragment","DoctorRatingItem","Widget","mobile","paddingBottom","PeriodNav","WidgetBody","padding","ScrollContainer","Tab","activeKey","transition","Content","Pane","eventKey","stats","sick","cured","selectedDoctor","setSelectedDoctor","chartData","find","common","type","strokeWidth","activeDot","r","fillOpacity","chartElems","teal","fill","widgetBg","filter","rgba","red","CustomSelect","overflowY","CartesianChart","Legend","LegendItem","Page","DoctorsRatingList","HealthIndexChart","DoctorCureRate","HealthIndexChartWrapper","col","azure","peach","laptop","y2020","y2021","y2022","_useArrayNav","useArrayNav","navigate","averages","getCurrentData","CustomScatterShape","cx","cy","isDominant","dom","viewBox","x","y","xmlns","opacity","d","fillRule","clipRule","WidgetNav","overflow","CountUp","end","duration","decimals","ScatterChart","Scatter","shape","entry","Cell","ChartTooltip"],"sourceRoot":""}