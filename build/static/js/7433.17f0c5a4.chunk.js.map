{"version":3,"file":"static/js/7433.17f0c5a4.chunk.js","mappings":"sRA+CA,EA1CiB,SAACA,EAAOC,EAAMC,EAAKC,GAChC,IAAMC,EAAeC,MAAWA,IAAOL,EAAMM,OACvCC,EAAqBH,EAAY,IAAkB,GAAMA,EAAY,IAAkBH,EACzFO,GAAQ,IAAIC,MAAOC,WACnBC,GAAU,IAAIF,MAAOG,aACnBC,EAAcL,EAAQ,KAAMM,EAAAA,EAAAA,GAAQH,GAEtCI,EAAgB,CAAC,EA0BrB,OARIR,GAAqBJ,IACrBY,EAAcC,UAAY,eAC1BD,EAAcE,UACVC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,iBAAiBG,MAAO,CAACC,IAAI,GAADC,OAAK,IAAMpB,EAlB/D,WACI,IACIqB,EADAC,EAAmBvB,EAAMM,MAAMM,aAEnC,OAAQW,GACJ,QACA,KAAK,EACDD,EAAoBC,EAAmBZ,EACvC,MACJ,KAAK,GACDW,EAAoBE,KAAKC,IAAIF,EAAmBZ,GAGxD,OAAOW,CACX,CAKsEI,GAA4B,MAAKT,UAC3FC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,SAAEJ,QAI9Bc,EAAAA,EAAAA,cACH3B,EAAMiB,UAAQW,EAAAA,EAAAA,GAAA,CAEVT,OAAKS,EAAAA,EAAAA,GAAA,GA5BE,CAAC,GA6BR,YAAavB,IAAOL,EAAMM,OAAOuB,OAAO,UACrCd,GAEf,ECrCA,EARqB,SAAHe,GAAiB,IAAZC,EAAKD,EAALC,MACnB,OACIb,EAAAA,EAAAA,KAAAc,EAAAA,SAAA,CAAAf,UACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAKc,KAGjB,E,sBC6BA,EA7ByB,SAAHD,GAAwB,IAetCC,EAfmBE,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OACvBC,EAAe9B,IAAO4B,GAAMG,OAC5BC,EAAchC,MAAS+B,OAUvBE,EAAYjC,IAAO4B,GAAMM,QAAQ,QAAQH,OAC3CI,EAAWnC,IAAO4B,GAAMQ,MAAM,QAAQL,OAQ1C,OALkCL,EAA9BM,IAAgBF,EAAsB,YACjCE,EAAc,IAAMF,EAAsB,YAC1CE,EAAc,IAAMF,EAAsB,YACtC,QAAUA,GAGnBjB,EAAAA,EAAAA,KAACwB,EAAAA,EAAS,CAACC,QAlBc,SAAAC,GACiB,SAAtCA,EAAEC,cAAcC,QAAQC,UACxBb,EAAO7B,IAAO4B,GAAMe,SAAS,EAAG,QAAQT,QAAQ,QAAQU,UAExDf,EAAO7B,IAAO4B,GAAMiB,IAAI,EAAG,QAAQX,QAAQ,QAAQU,SAE3D,EAaeE,KAAMpB,EACNqB,aAAcjB,IAAiBG,EAC/Be,aAAclB,IAAiBK,GAElD,E,sBCLA,EAlBqB,SAAHV,GAAuB,IAAlBG,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OACnBoB,GAAUC,EAAAA,EAAAA,MAAeC,KAAI,SAACC,EAAMC,GACtC,MAAO,CACHpD,MAAOoD,EACP3B,MAAM,GAADV,OAAKoC,EAAKE,UAAS,OAAAtC,OAAMoC,EAAKG,SAE3C,IAEAC,GAAgCC,EAAAA,EAAAA,UAASR,EAAQjD,IAAO4B,GAAMG,OAAS,IAAG2B,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnEI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAO5B,OAAO7C,EAAAA,EAAAA,KAACiD,EAAAA,EAAY,CAACC,QAAQ,QAAQd,QAASA,EAAShD,MAAO2D,EAAUI,cAL/C,SAAAzB,GACrBsB,EAAYtB,GACZV,EAAO7B,IAAO4B,GAAMG,KAAKQ,EAAEtC,MAAQ,GAAGiC,QAAQ,QAAQU,SAC1D,GAGJ,ECMA,EA1B0B,SAAHnB,GAAwB,IAYvCC,EAZoBE,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OACxBoC,EAAgBjE,IAAO4B,GAAMsC,QAC7BC,EAAenE,MAASkE,QAgB9B,OALoCxC,EAAhCyC,IAAiBF,EAAuB,aACnCE,EAAe,IAAMF,EAAuB,aAC5CE,EAAe,IAAMF,EAAuB,aAC3C,GAAAjD,OAAMhB,IAAO4B,GAAMJ,OAAO,UAGhCX,EAAAA,EAAAA,KAACwB,EAAAA,EAAS,CAACC,QAfe,SAAAC,GACgB,SAAtCA,EAAEC,cAAcC,QAAQC,UACxBb,EAAO7B,IAAO4B,GAAMe,SAAS,EAAG,SAASC,UAEzCf,EAAO7B,IAAO4B,GAAMiB,IAAI,EAAG,SAASD,SAE5C,EAUeE,KAAMpB,EACNqB,aAAgC,IAAlBkB,EACdjB,aAAgC,KAAlBiB,GAEjC,ECDA,EAnBsB,SAAHxC,GAAwB,IAAnBG,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OACpBoB,GAAUmB,EAAAA,EAAAA,MAAgBjB,KAAI,SAAAC,GAChC,MAAO,CACHnD,MAAOmD,EAAKc,MACZxC,MAAO0B,EAAKiB,UAEpB,IAEAb,GAAgCC,EAAAA,EAAAA,UAASR,EAAQjD,IAAO4B,GAAMsC,UAASR,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhEI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAQ5B,OAAO7C,EAAAA,EAAAA,KAACiD,EAAAA,EAAY,CAACC,QAAQ,QAAQd,QAASA,EAAShD,MAAO2D,EAAUI,cAN9C,SAAAzB,GACtBsB,EAAYtB,GACZ,IAAM2B,EAASlE,IAAOuC,EAAEtC,OAAOiE,QAC/BrC,EAAO7B,IAAO4B,GAAM0C,IAAI,CAACJ,MAAOA,EAAOtC,KAAM,IACjD,GAGJ,E,gECAA,IACA,EAAe,IAA0B,2DCDzC,IACA,EAAe,IAA0B,gECtBnC2C,EAAKC,IAAM,QAAS,CACtBC,MAAO,OACPC,KAAM,YAGGC,EAAYC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,gBAAVH,CAAU,6sCAEnBL,GAII,SAAA5E,GAAK,OAAIA,EAAMoB,GAAG,IAEK,SAAApB,GAAK,OAAIA,EAAMoB,IAAM,CAAC,GAO7DiE,EAAAA,GAAYC,QAEM,SAAAtF,GAAK,OAAIA,EAAMoB,GAAG,GAUlCmE,EAAAA,GAAKC,QAmBOX,IAAM,QAAS,CACzBC,MAAM,OAADzD,OAASoE,EAAM,KACpBV,KAAK,OAAD1D,OAASqE,EAAW,OAI1BH,EAAAA,GAAKI,IASSd,IAAM,QAAS,CACzBC,MAAO,kEACLC,KAAM,oEAiBQF,IAAM,QAAS,CACjCC,MAAOA,EAAAA,GAAMc,OACbb,KAAMD,EAAAA,GAAM3B,OAOQ0C,EAAAA,GAAOC,KAiB3BP,EAAAA,GAAKC,QAOSZ,EACDmB,EAAAA,GAAU,IACRC,EAAAA,GAAMC,OAEnBV,EAAAA,GAAKW,OAKXb,EAAAA,GAAYC,Q,iCClGhB,EA3BoB,SAAHxD,GAA4C,IAAvCqE,EAAIrE,EAAJqE,KAAMC,EAAItE,EAAJsE,KAAMzD,EAAOb,EAAPa,QAAS0D,EAAWvE,EAAXuE,YACvC,OACInF,EAAAA,EAAAA,KAACoF,EAAAA,EAAW,CAACC,UAAWH,EAAMI,kBAAmB7D,EAAQ1B,UACrDwF,EAAAA,EAAAA,MAACzB,EAAS,CAAChE,UAAWoF,EAAO,UAAY,GAAIhF,IAAKiF,EAAYpF,SAAA,EAC1DwF,EAAAA,EAAAA,MAAA,OAAKzF,UAAU,SAAQC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,SAAEkF,KACvBjF,EAAAA,EAAAA,KAACwF,EAAAA,EAAW,CAACC,MAAM,QAAQC,KAAK,eAAe7E,MAAM,gBAEzD0E,EAAAA,EAAAA,MAAA,OAAKzF,UAAU,OAAMC,SAAA,EACjBwF,EAAAA,EAAAA,MAAA,OAAKzF,UAAU,QAAOC,SAAA,EAClBC,EAAAA,EAAAA,KAAA,YACAA,EAAAA,EAAAA,KAAA,eAEJA,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOC,SAEd,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIuC,KAAI,SAACqD,EAAMC,GAAK,OACpD5F,EAAAA,EAAAA,KAAA,QAAAD,SAAmB4F,GAARC,EAAoB,UAK/C5F,EAAAA,EAAAA,KAAC6F,EAAAA,EAAG,CAAC5D,KAAK,sBAAsBR,QAAS,kBAAMA,GAAQ,EAAM,QAI7E,E,iCC/BaqE,EAAW,CACpB,CACIC,MAAO5G,MAASsE,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,GAAIC,OAAQ,IAAKlE,SACzDmE,IAAK/G,MAASsE,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,EAAGC,OAAQ,IAAKlE,SACtDoE,KAAM,YAEV,CACIJ,MAAO5G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,EAAGC,OAAQ,IAAKlE,SACtEmE,IAAK/G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,GAAIC,OAAQ,IAAKlE,SACrEoE,KAAM,YAEV,CACIJ,MAAO5G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,EAAGC,OAAQ,IAAKlE,SACtEmE,IAAK/G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,GAAIC,OAAQ,IAAKlE,SACrEoE,KAAM,YAEV,CACIJ,MAAO5G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,EAAGK,OAAQ,GAAIC,OAAQ,IAAKlE,SACtEmE,IAAK/G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,EAAGC,OAAQ,IAAKlE,SACpEoE,KAAM,YAEV,CACIJ,MAAO5G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,GAAIC,OAAQ,IAAKlE,SACvEmE,IAAK/G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,EAAGC,OAAQ,IAAKlE,SACpEoE,KAAM,YAEV,CACIJ,MAAO5G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,GAAIC,OAAQ,IAAKlE,SACvEmE,IAAK/G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,GAAIC,OAAQ,IAAKlE,SACrEoE,KAAM,aAIDC,EAAS,CAClBC,OAAQ,CACJ,CACIpB,KAAM,MACNc,MAAO5G,MAASsE,IAAI,CAAEkC,KAAM,EAAGK,OAAQ,GAAIC,OAAQ,IAAKlE,SACxDmE,IAAK/G,MAASsE,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,EAAGC,OAAQ,IAAKlE,SACtDuE,QAAQ,EACRH,KAAM,QAEV,CACIlB,KAAM,aACNc,MAAO5G,MAASsE,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,GAAIC,OAAQ,IAAKlE,SACzDmE,IAAK/G,MAASsE,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,EAAGC,OAAQ,IAAKlE,SACtDuE,QAAQ,EACRH,KAAM,QAEV,CACIlB,KAAM,mBACNc,MAAO5G,MAASsE,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,GAAIC,OAAQ,IAAKlE,SACzDmE,IAAK/G,MAASsE,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,EAAGC,OAAQ,IAAKlE,SACtDuE,QAAQ,EACRH,KAAM,gBAEV,CACIlB,KAAM,yBACNc,MAAO5G,MAASsE,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,GAAIC,OAAQ,IAAKlE,SACzDmE,IAAK/G,MAASsE,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,EAAGC,OAAQ,IAAKlE,SACtDuE,QAAQ,EACRH,KAAM,QAEV,CACIlB,KAAM,MACNc,MAAO5G,MAASsE,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,EAAGC,OAAQ,IAAKlE,SACxDmE,IAAK/G,MAASsE,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,GAAIC,OAAQ,IAAKlE,SACvDuE,QAAQ,EACRH,KAAM,QAEV,CACIlB,KAAM,kBACNc,MAAO5G,MAASsE,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,GAAIC,OAAQ,IAAKlE,SACzDmE,IAAK/G,MAASsE,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,EAAGC,OAAQ,IAAKlE,SACtDuE,QAAQ,EACRH,KAAM,WAEV,CACIlB,KAAM,aACNc,MAAO5G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,EAAGK,OAAQ,GAAIC,OAAQ,IAAKlE,SACtEmE,IAAK/G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,EAAGC,OAAQ,IAAKlE,SACpEuE,QAAQ,EACRH,KAAM,QAEV,CACIlB,KAAM,qBACNc,MAAO5G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,GAAIC,OAAQ,IAAKlE,SACvEmE,IAAK/G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,GAAIC,OAAQ,IAAKlE,SACrEuE,QAAQ,EACRH,KAAM,gBAEV,CACIlB,KAAM,YACNc,MAAO5G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,EAAGC,OAAQ,IAAKlE,SACtEmE,IAAK/G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,GAAIC,OAAQ,IAAKlE,SACrEuE,QAAQ,EACRH,KAAM,aAEV,CACIlB,KAAM,cACNc,MAAO5G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,EAAGC,OAAQ,IAAKlE,SACtEmE,IAAK/G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,GAAIC,OAAQ,IAAKlE,SACrEuE,QAAQ,EACRH,KAAM,gBAEV,CACIlB,KAAM,YACNc,MAAO5G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,EAAGC,OAAQ,IAAKlE,SACtEmE,IAAK/G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,EAAGC,OAAQ,IAAKlE,SACpEuE,QAAQ,EACRH,KAAM,QAEV,CACIlB,KAAM,iBACNc,MAAO5G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,GAAIC,OAAQ,IAAKlE,SACvEmE,IAAK/G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,EAAGC,OAAQ,IAAKlE,SACpEuE,QAAQ,EACRH,KAAM,WAEV,CACIlB,KAAM,cACNc,MAAO5G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,GAAIC,OAAQ,IAAKlE,SACvEmE,IAAK/G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,EAAGC,OAAQ,IAAKlE,SACpEuE,QAAQ,EACRH,KAAM,aAEV,CACIlB,KAAM,MACNc,MAAO5G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,EAAGC,OAAQ,IAAKlE,SACtEmE,IAAK/G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,GAAIC,OAAQ,IAAKlE,SACrEuE,QAAQ,EACRH,KAAM,QAEV,CACIlB,KAAM,MACNc,MAAO5G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,EAAGK,OAAQ,GAAIC,OAAQ,IAAKlE,SACtEmE,IAAK/G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,EAAGC,OAAQ,IAAKlE,SACpEuE,QAAQ,EACRH,KAAM,QAEV,CACIlB,KAAM,qBACNc,MAAO5G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,EAAGC,OAAQ,IAAKlE,SACtEmE,IAAK/G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,GAAIC,OAAQ,IAAKlE,SACrEuE,QAAQ,EACRH,KAAM,gBAEV,CACIlB,KAAM,mBACNc,MAAO5G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,EAAGC,OAAQ,IAAKlE,SACtEmE,IAAK/G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,GAAIC,OAAQ,IAAKlE,SACrEuE,QAAQ,EACRH,KAAM,gBAEV,CACIlB,KAAM,aACNc,MAAO5G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,EAAGC,OAAQ,IAAKlE,SACtEmE,IAAK/G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,GAAIC,OAAQ,IAAKlE,SACrEuE,QAAQ,EACRH,KAAM,QAEV,CACIlB,KAAM,YACNc,MAAO5G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,GAAIC,OAAQ,IAAKlE,SACvEmE,IAAK/G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,EAAGC,OAAQ,IAAKlE,SACpEuE,QAAQ,EACRH,KAAM,cAGdI,QAAS,CACLC,QAAS,CACL,CACIvB,KAAM,oBACNc,MAAO5G,MAASsE,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,EAAGC,OAAQ,IAAKlE,SACxDmE,IAAK/G,MAASsE,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,GAAIC,OAAQ,IAAKlE,SACvDuE,QAAQ,EACRH,KAAM,QAEV,CACIlB,KAAM,uBACNc,MAAO5G,MAASsE,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,GAAIC,OAAQ,IAAKlE,SACzDmE,IAAK/G,MAASsE,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,EAAGC,OAAQ,IAAKlE,SACtDuE,QAAQ,EACRH,KAAM,gBAEV,CACIlB,KAAM,qBACNc,MAAO5G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,GAAIC,OAAQ,IAAKlE,SACvEmE,IAAK/G,MAAS6C,IAAI,EAAG,OAAOyB,IAAI,CAAEkC,KAAM,GAAIK,OAAQ,EAAGC,OAAQ,IAAKlE,SACpEuE,QAAQ,EACRH,KAAM,SAGdL,SAAUA,ICSlB,EAzK6B,SAAHlF,GAA4C,IAAvC6F,EAAiB7F,EAAjB6F,kBAAmBC,EAAO9F,EAAP8F,QAASP,EAAIvF,EAAJuF,KACjDQ,GAAQC,EAAAA,EAAAA,KAAgBD,MACxBE,GAAYC,EAAAA,EAAAA,IAAgB3H,KAE5B4H,GAAYC,EAAAA,EAAAA,QAAO,MACnBC,GAAYD,EAAAA,EAAAA,QAAO,MACzBrE,GAA4BC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhCuE,EAAMrE,EAAA,GAAEsE,EAAStE,EAAA,IAExBuE,EAAAA,EAAAA,YAAU,WACND,EAAUF,EAAUP,QAAQW,aAAeN,EAAUL,QAAQW,aACjE,GAAG,CAACJ,EAAWF,IAEf,IAAM3E,GAAUkF,EAAAA,EAAAA,MAChBC,GAA4C3E,EAAAA,EAAAA,UAASR,EAAQ,IAAGoF,GAAA1E,EAAAA,EAAAA,GAAAyE,EAAA,GAAzDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAExCG,GAAkC/E,EAAAA,EAAAA,WAAS,GAAMgF,GAAA9E,EAAAA,EAAAA,GAAA6E,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAExBG,EAAY,WACd,OACI/H,EAAAA,EAAAA,KAACiD,EAAAA,EAAY,CAACb,QAASA,EACThD,MAAOqI,EACPvE,QAAQ,OACRC,cAAe,SAAAzB,GAAC,OAAIgG,EAAkBhG,EAAE,GAE9D,EAaAsG,GAAsCpF,EAAAA,EAAAA,UAASzD,MAAS4C,UAASkG,GAAAnF,EAAAA,EAAAA,GAAAkF,EAAA,GAA1DE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAC5BG,EAAQ,CAAC,QAAS,OAAQ,OAC1BC,EAAa,WACf,OACIrI,EAAAA,EAAAA,KAACsI,EAAAA,GAAI,CAACxI,UAAU,OAAMC,SAEdqI,EAAM9F,KAAI,SAAAiG,GACN,OACIvI,EAAAA,EAAAA,KAACwI,EAAAA,GAAI,CAAAzI,UACDC,EAAAA,EAAAA,KAACyI,EAAAA,GAAM,CAAC3I,UAAW4G,IAAY6B,EAAO,SAAW,KACzCG,QAAS,kBAAMjC,EAAkB8B,EAAK,EAACxI,SAC1CwI,KAHEA,EAOnB,KAIhB,EAEMI,EAAmB,SAACC,EAAQ7H,GAC9B,OAAQ6H,GACJ,IAAK,OACDT,EAAehJ,IAAO+I,GAAalG,IAAI,EAAG,OAAOD,UACjD,MACJ,IAAK,OACDoG,EAAehJ,IAAO+I,GAAapG,SAAS,EAAG,OAAOC,UACtD,MACJ,QACIoG,EAAepH,GAE3B,EAOM8H,GAAS,CACXC,GAAIC,EAAAA,EACJlC,UAAWA,EACXmC,cAAe,QACfC,YAAa,MACbb,MAAOA,EACPG,KAAM7B,EACN3F,KAAMmH,EACNgB,OAAQzC,EACR0C,WAAYR,EACZS,YAAa,SAACrI,GAAI,OAfC,SAACA,GACpBoH,EAAepH,GACf0F,EAAkB,MACtB,CAY2B4C,CAAetI,EAAK,EAC3CqF,OAAiB,WAATD,EAAoBC,EAAe,OAAgB,QAAZM,EAAoBN,EAAgB,QAAEI,QAAUJ,EAAgB,QAAEN,SACjHwD,iBAA2B,WAATnD,EAAoBL,EAAW,GACjDyD,IAAKpK,MAASkC,QAAQ,QAAQoC,IAAI,CAACkC,KAAM,EAAGK,OAAQ,KAAKjE,SACzDyH,IAAKrK,MAASoC,MAAM,QAAQkC,IAAI,CAACkC,KAAM,GAAIK,OAAQ,KAAKjE,SACxD0H,UAAW,EACX1K,KAAM,GACN2K,QAAS,CACLC,gBAAiBhD,EAAQ,IAAM,eAAiB,gBAChDiD,UArEa,WACjB,QAAQ,GACJ,KAAKjD,EAAQ,IACT,MAAO,IACX,KAAKA,EAAQ,KACT,MAAO,SACX,QACI,MAAO,cAEnB,CA4DmBkD,GACXC,iBAAkB,SAEtBC,WAAY,CACRC,QAAS,SAAAC,GAAA,IAAEpJ,EAAKoJ,EAALpJ,MAAOE,EAAIkJ,EAAJlJ,KAAI,OAClBwE,EAAAA,EAAAA,MAAC2E,EAAAA,GAAM,CAACC,IAAKlD,EAAWsB,KAAM7B,EAAQ3G,SAAA,CACrB,QAAZ2G,IACG1G,EAAAA,EAAAA,KAACoK,EAAY,CAACvJ,MAAgB,WAATsF,EAAoBtF,EAAQ,kCACrDb,EAAAA,EAAAA,KAACqI,EAAU,IACE,QAAZ3B,IAAqB1G,EAAAA,EAAAA,KAACqK,EAAAA,EAAe,CAAClB,WAAYR,EAAkB5H,KAAMA,EAAMF,MAAOA,IAC3E,SAAZ6F,IACGnB,EAAAA,EAAAA,MAAAzE,EAAAA,SAAA,CAAAf,SAAA,CAEiB,WAAToG,GACInG,EAAAA,EAAAA,KAACsK,EAAY,CAACvJ,KAAMA,EAAMC,OAAQmH,KAElCnI,EAAAA,EAAAA,KAAC+H,EAAS,KAElB/H,EAAAA,EAAAA,KAACuK,EAAgB,CAACxJ,KAAMA,EAAMC,OAAQmH,OAGjC,UAAZzB,IACGnB,EAAAA,EAAAA,MAAAzE,EAAAA,SAAA,CAAAf,SAAA,CAEiB,WAAToG,GACInG,EAAAA,EAAAA,KAACwK,EAAa,CAACzJ,KAAMA,EAAMC,OAAQmH,KAEnCnI,EAAAA,EAAAA,KAAC+H,EAAS,KAElB/H,EAAAA,EAAAA,KAACyK,EAAiB,CAAC1J,KAAMA,EAAMC,OAAQmH,SAG1C,EACbuC,MAAO,SAAAC,GAAA,IAAED,EAAKC,EAALD,MAAK,OAAM1K,EAAAA,EAAAA,KAAC4K,EAAAA,EAAK,CAACF,MAAOA,EAAOxH,QAASwD,GAAU,EAC5DmE,gBAAiB,SAAC/L,GAAK,OAAKgM,EAAShM,EAAO,GAAI,GAAG,EAAK,GAE5DgB,UAAU,YAADK,OAAcuG,EAAO,cAAAvG,OAAagG,GAC3C4E,SAAU,CACNC,SAAU,SAACC,GAAK,WAAA9K,OAAU8K,EAAK,GAEnCC,OAAO,EACPC,WAAqB,YAAThF,GAAkC,QAAZO,EAClC0E,aAAuB,YAATjF,GAAkC,QAAZO,GAAsB,kBAAKoB,GAAa,EAAK,GAGrF,OACIvC,EAAAA,EAAAA,MAAAzE,EAAAA,SAAA,CAAAf,SAAA,EACIwF,EAAAA,EAAAA,MAACzB,EAAAA,GAAS,CAAA/D,SAAA,EACNC,EAAAA,EAAAA,KAACqL,EAAAA,IAAc3K,EAAAA,EAAAA,GAAA,GAAKmI,KAEP,YAAT1C,GAAkC,QAAZO,IACtB1G,EAAAA,EAAAA,KAACsL,EAAW,CAACnG,YAAa+B,EAAQjC,KAAMwC,EAAe5G,OAAS,KAAMqE,KAAM2C,EAC/DpG,QAASqG,QAG9B9H,EAAAA,EAAAA,KAACuL,EAAAA,GAAM,CAACpB,IAAKpD,EAAUhH,UACnBC,EAAAA,EAAAA,KAACwL,EAAAA,EAAM,CAAAzL,SAEC0L,EAAAA,EAAWnJ,KAAI,SAAAoJ,GAA0B,IAAxBC,EAAGD,EAAHC,IAAKC,EAAKF,EAALE,MAAO/K,EAAK6K,EAAL7K,MACzB,OACIb,EAAAA,EAAAA,KAAC6L,EAAAA,EAAU,CAAWD,MAAOA,EAAOE,OAAQjL,GAA3B8K,EAEzB,UAMxB,C,8IC5LaI,EAAc,CACvB,CAAC3M,MAAO,MAAOyB,MAAO,mBACtB,CAACzB,MAAO,SAAUyB,MAAO,kBACzB,CAACzB,MAAO,UAAWyB,MAAO,cAC1B,CAACzB,MAAO,OAAQyB,MAAO,YACvB,CAACzB,MAAO,SAAUyB,MAAO,kBAGhBmL,EAAe,CACxB,CAAC5M,MAAO,MAAOyB,MAAO,gBACtB,CAACzB,MAAO,QAASyB,MAAO,eACxB,CAACzB,MAAO,OAAQyB,MAAO,SACvB,CAACzB,MAAO,MAAOyB,MAAO,OACtB,CAACzB,MAAO,KAAMyB,MAAO,WACrB,CAACzB,MAAO,MAAOyB,MAAO,OACtB,CAACzB,MAAO,aAAcyB,MAAO,cAC7B,CAACzB,MAAO,WAAYyB,MAAO,qBAGlByG,EAAiB,WAC1B,IAAIlF,EAAU,GAUd,OATA6J,EAAAA,EAAQC,SAAQ,SAAA7F,GACZjE,EAAQ+J,KAAK,CACT/M,MAAOiH,EAAO+F,GACdvL,OAAO0E,EAAAA,EAAAA,MAAA,OAAKzF,UAAU,cAAaC,SAAA,EAC/BC,EAAAA,EAAAA,KAACqM,EAAAA,EAAM,CAACC,OAAQjG,EAAOiG,OAAQC,IAAKlG,EAAOpB,KAAMuH,KAAM,MACvDxM,EAAAA,EAAAA,KAAA,QAAAD,SAAOsG,EAAOpB,WAG1B,IACO7C,CACX,C,wBCzCO,SAASqK,EAAaC,GACzB,OAAIA,EAAM,KAAOA,EAAM,KACXA,EAAM,KAAMC,QAAQ,GAAK,IAC1BD,EAAM,KACLA,EAAM,KAASC,QAAQ,GAAK,IAC7BD,EAAM,IACNA,OADJ,CAGX,CAEO,SAAS9M,EAAQ8M,GACpB,OAAOA,EAAM,GAAK,IAAMA,EAAMA,CAClC,C","sources":["components/AppointmentsCalendar/TimeSlot/index.jsx","components/AppointmentsCalendar/DailyToolbar/index.jsx","components/AppointmentsCalendar/WeeklyNavigation/index.jsx","components/AppointmentsCalendar/WeekSelector/index.jsx","components/AppointmentsCalendar/MonthlyNavigation/index.jsx","components/AppointmentsCalendar/MonthSelector/index.jsx","assets/dashed.svg","assets/dashed_dark.svg","components/AppointmentsCalendar/DoctorPopup/style.js","components/AppointmentsCalendar/DoctorPopup/index.jsx","db/calendar_appointments.js","components/AppointmentsCalendar/index.jsx","constants/options.js","utils/numbers.js"],"sourcesContent":["// utils\nimport {cloneElement} from 'react';\nimport moment from 'moment';\nimport {addZero} from '@utils/numbers';\n\nconst TimeSlot = (props, step, day, isRender) => {\n    const differenceMs = moment() - moment(props.value)\n    const isCurrentTimeSlot = (differenceMs / (60 * 1000)) > 0 && (differenceMs / (60 * 1000)) < step;\n    let hours = new Date().getHours(),\n        minutes = new Date().getMinutes();\n    const currentTime = hours + ':' + addZero(minutes);\n\n    let timeIndicator = {}\n    let addStyle = {}\n\n    function calculateIndicatorPosition() {\n        let minutesFromProps = props.value.getMinutes(),\n            indicatorPosition;\n        switch (minutesFromProps) {\n            default:\n            case 0:\n                indicatorPosition = minutesFromProps + minutes;\n                break;\n            case 30:\n                indicatorPosition = Math.abs(minutesFromProps - minutes);\n                break;\n        }\n        return indicatorPosition;\n    }\n\n    if (isCurrentTimeSlot && isRender) {\n        timeIndicator.className = 'current-time'\n        timeIndicator.children =\n            <span className=\"time-indicator\" style={{top: `${100 / step * calculateIndicatorPosition()}%`}}>\n                <span className=\"label\">{currentTime}</span>\n            </span>\n    }\n\n    return cloneElement(\n        props.children,\n        {\n            style: {...addStyle},\n            'data-time': moment(props.value).format('HH:mm'),\n            ...timeIndicator\n        })\n}\n\nexport default TimeSlot;","const DailyToolbar = ({label}) => {\n    return (\n        <>\n            <h2>{label}</h2>\n        </>\n    )\n}\n\nexport default DailyToolbar;","// components\nimport Navigator from '@ui/Navigator';\n\n// utils\nimport moment from 'moment/moment';\n\nconst WeeklyNavigation = ({date, setter}) => {\n    const calendarWeek = moment(date).week();\n    const currentWeek = moment().week();\n\n    const handleWeekNavigation = e => {\n        if (e.currentTarget.dataset.direction === 'prev') {\n            setter(moment(date).subtract(1, 'week').startOf('week').toDate());\n        } else {\n            setter(moment(date).add(1, 'week').startOf('week').toDate());\n        }\n    }\n\n    const firstWeek = moment(date).startOf('year').week(),\n        lastWeek = moment(date).endOf('year').week();\n\n    let label;\n    if (currentWeek === calendarWeek) label = 'This week';\n    else if (currentWeek + 1 === calendarWeek) label = 'Next week';\n    else if (currentWeek - 1 === calendarWeek) label = 'Last week';\n    else label = 'Week ' + calendarWeek;\n\n    return (\n        <Navigator handler={handleWeekNavigation}\n                   text={label}\n                   prevDisabled={calendarWeek === firstWeek}\n                   nextDisabled={calendarWeek === lastWeek}/>\n    )\n}\n\nexport default WeeklyNavigation;","// components\nimport CustomSelect from '@ui/Select';\n\n// hooks\nimport {useState} from 'react';\n\n// utils\nimport {getWeekArray} from '@utils/dates';\nimport moment from 'moment/moment';\n\nconst WeekSelector = ({date, setter}) =>{\n    const options = getWeekArray().map((item, i) => {\n        return {\n            value: i,\n            label: `${item.startLong} - ${item.endLong}`,\n        }\n    });\n\n    const [selected, setSelected] = useState(options[moment(date).week() - 1]);\n\n    const handleWeekChange = e => {\n        setSelected(e);\n        setter(moment(date).week(e.value + 1).startOf('week').toDate());\n    }\n\n    return <CustomSelect variant=\"basic\" options={options} value={selected} changeHandler={handleWeekChange}/>\n}\n\nexport default WeekSelector;","// components\nimport Navigator from '@ui/Navigator';\n\n// utils\nimport moment from 'moment/moment';\n\nconst MonthlyNavigation = ({date, setter}) => {\n    const calendarMonth = moment(date).month();\n    const currentMonth = moment().month();\n\n    const handleMonthNavigation = e => {\n        if (e.currentTarget.dataset.direction === 'prev') {\n            setter(moment(date).subtract(1, 'month').toDate());\n        } else {\n            setter(moment(date).add(1, 'month').toDate());\n        }\n    }\n\n    let label;\n    if (currentMonth === calendarMonth) label = 'This month';\n    else if (currentMonth + 1 === calendarMonth) label = 'Next month';\n    else if (currentMonth - 1 === calendarMonth) label = 'Last month';\n    else label = `${moment(date).format('MMMM')}`;\n\n    return (\n        <Navigator handler={handleMonthNavigation}\n                   text={label}\n                   prevDisabled={calendarMonth === 0}\n                   nextDisabled={calendarMonth === 11}/>\n    )\n}\n\nexport default MonthlyNavigation;","// components\nimport CustomSelect from '@ui/Select';\n\n// hooks\nimport {useState} from 'react';\n\n// utils\nimport {getMonthArray} from '@utils/dates';\nimport moment from 'moment/moment';\n\nconst MonthSelector = ({date, setter}) => {\n    const options = getMonthArray().map(item => {\n        return {\n            value: item.month,\n            label: item.formatted\n        }\n    });\n\n    const [selected, setSelected] = useState(options[moment(date).month()]);\n\n    const handleMonthChange = e => {\n        setSelected(e);\n        const month =  moment(e.value).month();\n        setter(moment(date).set({month: month, date: 1}));\n    }\n\n    return <CustomSelect variant=\"basic\" options={options} value={selected} changeHandler={handleMonthChange}/>\n}\n\nexport default MonthSelector;","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDashed(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 140,\n    viewBox: \"0 0 2 140\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 0.384615V139.462\",\n    stroke: \"#A2C0D4\",\n    strokeLinecap: \"round\",\n    strokeDasharray: \"3 5\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDashed);\nexport default __webpack_public_path__ + \"static/media/dashed.e8807695deb0ac9b5486cdad4debfd42.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDashedDark(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 140,\n    viewBox: \"0 0 2 140\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 0.384615V139.462\",\n    stroke: \"#636D73\",\n    strokeLinecap: \"round\",\n    strokeDasharray: \"3 5\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDashedDark);\nexport default __webpack_public_path__ + \"static/media/dashed_dark.5b0662d7b0c867bc981bdd45e49eba46.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components/macro';\nimport {flex, breakpoints, light, colors, textSizes, fonts} from '@styles/vars'\nimport theme from 'styled-theming';\nimport dashed from '@assets/dashed.svg'\nimport dashed_dark from '@assets/dashed_dark.svg'\n\nconst bg = theme('theme', {\n    light: '#fff',\n    dark: '#2a2f32'\n});\n\nexport const Container = styled.div`\n  position: absolute;\n  background: ${bg};\n  box-shadow: 0 1px 16px rgba(20, 46, 110, 0.4);\n  border-radius: 8px;\n  padding: 20px;\n  top: calc(50% + ${props => props.top}px - 40px);\n  left: 50%;\n  transform: translate(-50%, calc(-50% - ${props => props.top / 2}px));\n  width: 260px;\n  transition: opacity var(--transition);\n  opacity: 0;\n  visibility: hidden;\n  margin-left: 32px;\n  \n  ${breakpoints.tablet} {\n    margin-left: 42px;\n    top: calc(50% + ${props => props.top}px - 60px);\n  }\n\n  &.visible {\n    opacity: 1;\n    visibility: visible;\n  }\n\n  .header {\n    display: flex;\n    ${flex.between};\n    gap: 20px;\n\n    .user .user-option {\n      display: flex;\n      align-items: center;\n      gap: 20px;\n\n      span {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        max-width: 100px;\n      }\n    }\n  }\n\n  .main {\n    height: 80px;\n    background: ${theme('theme', {\n        light: `url(${dashed})`,\n        dark: `url(${dashed_dark})`\n    })};\n    position: relative;\n    padding-top: 25px;\n    ${flex.col};\n    gap: 6px;\n\n    &:before, &:after {\n      content: '';\n      position: absolute;\n      left: 0;\n      width: 100%;\n      height: 20px;\n      background: ${theme('theme', {\n          light: 'linear-gradient(180deg, rgba(255, 255, 255, 0.5) 0%, #fff 100%)',\n            dark: 'linear-gradient(180deg, rgba(42, 47, 50, 0.5) 0%, #2a2f32 100%)'\n      })};\n    }\n\n    &:before {\n      top: 0;\n      transform: rotate(180deg);\n    }\n\n    &:after {\n      bottom: 0;\n    }\n\n    .track {\n      height: 8px;\n      position: relative;\n      border-radius: 4px;\n      background-color: ${theme('theme', {\n        light: light.bodyBg,\n        dark: light.text\n      })};\n\n      span {\n        position: absolute;\n        height: 8px;\n        border-radius: 4px;\n        background-color: ${colors.blue};\n        top: 0;\n\n        &:first-of-type {\n          width: 20%;\n          left: 0;\n        }\n\n        &:last-of-type {\n          width: 15%;\n          right: 10%;\n        }\n      }\n    }\n\n    .hours {\n      display: flex;\n      ${flex.between};\n      margin: 0 -10px;\n\n      span {\n        width: 16px;\n        height: 20px;\n        border-radius: 8px;\n        background: ${bg};\n        font-size: ${textSizes['10']};\n        font-family: ${fonts.accent};\n        display: flex;\n        ${flex.center};\n      }\n    }\n  }\n\n  ${breakpoints.tablet} {\n    width: 374px;\n\n    .header {\n      .user .user-option span {\n        max-width: 200px;\n      }\n    }\n  }\n`;","// styled components\nimport {Container} from './style';\n\n// components\nimport ShapeButton from '@ui/ShapeButton';\nimport Btn from '@ui/Btn';\nimport ModalWindow from '@components/ModalWindow';\n\nconst DoctorPopup = ({name, open, handler, elemsHeight}) => {\n    return (\n        <ModalWindow isVisible={open} visibilityHandler={handler}>\n            <Container className={open ? 'visible' : ''} top={elemsHeight}>\n                <div className=\"header\">\n                    <div className=\"user\">{name}</div>\n                    <ShapeButton shape=\"round\" icon=\"comment-text\" label=\"Message\"/>\n                </div>\n                <div className=\"main\">\n                    <div className=\"track\">\n                        <span></span>\n                        <span></span>\n                    </div>\n                    <div className=\"hours\">\n                        {\n                            [9, 10, 11, 12, 13, 14, 15, 16, 17, 18].map((hour, index) => (\n                                <span key={index}>{hour}</span>\n                            ))\n                        }\n                    </div>\n                </div>\n                <Btn text=\"Make an appointment\" handler={() => handler(false)}/>\n            </Container>\n        </ModalWindow>\n    )\n}\n\nexport default DoctorPopup;","import moment from 'moment';\n\nexport const disabled = [\n    {\n        start: moment().set({ hour: 12, minute: 30, second: 0 }).toDate(),\n        end: moment().set({ hour: 13, minute: 0, second: 0 }).toDate(),\n        type: 'disabled'\n    },\n    {\n        start: moment().add(1, 'day').set({ hour: 10, minute: 0, second: 0 }).toDate(),\n        end: moment().add(1, 'day').set({ hour: 10, minute: 30, second: 0 }).toDate(),\n        type: 'disabled'\n    },\n    {\n        start: moment().add(1, 'day').set({ hour: 14, minute: 0, second: 0 }).toDate(),\n        end: moment().add(1, 'day').set({ hour: 14, minute: 30, second: 0 }).toDate(),\n        type: 'disabled'\n    },\n    {\n        start: moment().add(2, 'day').set({ hour: 9, minute: 30, second: 0 }).toDate(),\n        end: moment().add(2, 'day').set({ hour: 10, minute: 0, second: 0 }).toDate(),\n        type: 'disabled'\n    },\n    {\n        start: moment().add(2, 'day').set({ hour: 12, minute: 30, second: 0 }).toDate(),\n        end: moment().add(2, 'day').set({ hour: 13, minute: 0, second: 0 }).toDate(),\n        type: 'disabled'\n    },\n    {\n        start: moment().add(4, 'day').set({ hour: 14, minute: 30, second: 0 }).toDate(),\n        end: moment().add(4, 'day').set({ hour: 15, minute: 30, second: 0 }).toDate(),\n        type: 'disabled'\n    },\n];\n\nexport const events = {\n    doctor: [\n        {\n            name: 'MRI',\n            start: moment().set({ hour: 9, minute: 30, second: 0 }).toDate(),\n            end: moment().set({ hour: 10, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'test'\n        },\n        {\n            name: 'Runny nose',\n            start: moment().set({ hour: 10, minute: 30, second: 0 }).toDate(),\n            end: moment().set({ hour: 11, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'sick'\n        },\n        {\n            name: 'Keeping pregnant',\n            start: moment().set({ hour: 11, minute: 30, second: 0 }).toDate(),\n            end: moment().set({ hour: 12, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'consultation'\n        },\n        {\n            name: 'Ultrasound diagnostics',\n            start: moment().set({ hour: 13, minute: 30, second: 0 }).toDate(),\n            end: moment().set({ hour: 14, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'test'\n        },\n        {\n            name: 'EEG',\n            start: moment().set({ hour: 15, minute: 0, second: 0 }).toDate(),\n            end: moment().set({ hour: 15, minute: 30, second: 0 }).toDate(),\n            allDay: false,\n            type: 'test'\n        },\n        {\n            name: 'Routine checkup',\n            start: moment().set({ hour: 15, minute: 30, second: 0 }).toDate(),\n            end: moment().set({ hour: 16, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'checkup'\n        },\n        {\n            name: 'Blood test',\n            start: moment().add(1, 'day').set({ hour: 9, minute: 30, second: 0 }).toDate(),\n            end: moment().add(1, 'day').set({ hour: 10, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'test'\n        },\n        {\n            name: 'Family appointment',\n            start: moment().add(1, 'day').set({ hour: 10, minute: 30, second: 0 }).toDate(),\n            end: moment().add(1, 'day').set({ hour: 11, minute: 30, second: 0 }).toDate(),\n            allDay: false,\n            type: 'consultation'\n        },\n        {\n            name: 'Heartache',\n            start: moment().add(1, 'day').set({ hour: 12, minute: 0, second: 0 }).toDate(),\n            end: moment().add(1, 'day').set({ hour: 12, minute: 30, second: 0 }).toDate(),\n            allDay: false,\n            type: 'emergency'\n        },\n        {\n            name: 'First visit',\n            start: moment().add(1, 'day').set({ hour: 13, minute: 0, second: 0 }).toDate(),\n            end: moment().add(1, 'day').set({ hour: 13, minute: 30, second: 0 }).toDate(),\n            allDay: false,\n            type: 'consultation'\n        },\n        {\n            name: 'Gastritis',\n            start: moment().add(2, 'day').set({ hour: 10, minute: 0, second: 0 }).toDate(),\n            end: moment().add(2, 'day').set({ hour: 11, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'sick'\n        },\n        {\n            name: 'Cardio checkup',\n            start: moment().add(2, 'day').set({ hour: 11, minute: 30, second: 0 }).toDate(),\n            end: moment().add(2, 'day').set({ hour: 12, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'checkup'\n        },\n        {\n            name: 'Stomachache',\n            start: moment().add(2, 'day').set({ hour: 14, minute: 30, second: 0 }).toDate(),\n            end: moment().add(2, 'day').set({ hour: 15, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'emergency'\n        },\n        {\n            name: 'MRI',\n            start: moment().add(2, 'day').set({ hour: 16, minute: 0, second: 0 }).toDate(),\n            end: moment().add(2, 'day').set({ hour: 16, minute: 30, second: 0 }).toDate(),\n            allDay: false,\n            type: 'test'\n        },\n        {\n            name: 'MRI',\n            start: moment().add(4, 'day').set({ hour: 9, minute: 30, second: 0 }).toDate(),\n            end: moment().add(4, 'day').set({ hour: 10, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'test'\n        },\n        {\n            name: 'Family appointment',\n            start: moment().add(4, 'day').set({ hour: 10, minute: 0, second: 0 }).toDate(),\n            end: moment().add(4, 'day').set({ hour: 10, minute: 30, second: 0 }).toDate(),\n            allDay: false,\n            type: 'consultation'\n        },\n        {\n            name: 'Keeping pregnant',\n            start: moment().add(4, 'day').set({ hour: 11, minute: 0, second: 0 }).toDate(),\n            end: moment().add(4, 'day').set({ hour: 11, minute: 30, second: 0 }).toDate(),\n            allDay: false,\n            type: 'consultation'\n        },\n        {\n            name: 'Runny nose',\n            start: moment().add(4, 'day').set({ hour: 14, minute: 0, second: 0 }).toDate(),\n            end: moment().add(4, 'day').set({ hour: 14, minute: 30, second: 0 }).toDate(),\n            allDay: false,\n            type: 'sick'\n        },\n        {\n            name: 'Heartache',\n            start: moment().add(4, 'day').set({ hour: 15, minute: 30, second: 0 }).toDate(),\n            end: moment().add(4, 'day').set({ hour: 16, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'emergency'\n        },\n    ],\n    patient: {\n        general: [\n            {\n                name: 'Bone Density Scan',\n                start: moment().set({ hour: 10, minute: 0, second: 0 }).toDate(),\n                end: moment().set({ hour: 10, minute: 30, second: 0 }).toDate(),\n                allDay: false,\n                type: 'test'\n            },\n            {\n                name: 'Surgeon consultation',\n                start: moment().set({ hour: 10, minute: 30, second: 0 }).toDate(),\n                end: moment().set({ hour: 11, minute: 0, second: 0 }).toDate(),\n                allDay: false,\n                type: 'consultation'\n            },\n            {\n                name: 'Calcium Blood Test',\n                start: moment().add(1, 'day').set({ hour: 13, minute: 30, second: 0 }).toDate(),\n                end: moment().add(1, 'day').set({ hour: 14, minute: 0, second: 0 }).toDate(),\n                allDay: false,\n                type: 'test'\n            },\n        ],\n        disabled: disabled\n    }\n}","// styles\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\n\n// styled components\nimport {Container, Header, StyledCalendar, Footer} from './style';\nimport {Container as Tabs, Item, Button} from '@ui/TabNav/style';\n\n// components\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\nimport Event from '@components/AppointmentsCalendar/Event';\nimport TimeSlot from '@components/AppointmentsCalendar/TimeSlot';\nimport DailyToolbar from '@components/AppointmentsCalendar/DailyToolbar';\nimport DailyNavigation from '@components/AppointmentsCalendar/DailyNavigation';\nimport WeeklyNavigation from '@components/AppointmentsCalendar/WeeklyNavigation';\nimport WeekSelector from '@components/AppointmentsCalendar/WeekSelector';\nimport MonthlyNavigation from '@components/AppointmentsCalendar/MonthlyNavigation';\nimport MonthSelector from '@components/AppointmentsCalendar/MonthSelector';\nimport Legend from '@ui/Legend';\nimport LegendItem from '@ui/Legend/LegendItem';\nimport DoctorPopup from '@components/AppointmentsCalendar/DoctorPopup';\n\n// utils\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport {colorTypes} from '@constants/colors';\nimport {doctorsOptions} from '@constants/options';\n\n// hooks\nimport {useState, useRef, useEffect} from 'react';\nimport useWindowSize from '@hooks/useWindowSize';\n\n// data placeholder\nimport {events, disabled} from '@db/calendar_appointments';\nimport CustomSelect from '@ui/Select';\n\nconst AppointmentsCalendar = ({viewChangeHandler, current, type}) => {\n    const width = useWindowSize().width;\n    const localizer = momentLocalizer(moment);\n\n    const footerRef = useRef(null);\n    const headerRef = useRef(null);\n    const [height, setHeight] = useState(0);\n\n    useEffect(() => {\n        setHeight(headerRef.current.offsetHeight + footerRef.current.offsetHeight);\n    }, [headerRef, footerRef]);\n\n    const options = doctorsOptions();\n    const [selectedDoctor, setSelectedDoctor] = useState(options[0]);\n\n    const [popupOpen, setPopupOpen] = useState(false);\n\n    const DocSelect = () => {\n        return (\n            <CustomSelect options={options}\n                          value={selectedDoctor}\n                          variant=\"user\"\n                          changeHandler={e => setSelectedDoctor(e)}/>\n        )\n    }\n\n    const getDayFormat = () => {\n        switch (true) {\n            case width < 768:\n                return 'D';\n            case width < 1600:\n                return 'ddd, D';\n            default:\n                return 'dddd D MMMM';\n        }\n    }\n\n    const [currentDate, setCurrentDate] = useState(moment().toDate());\n    const views = ['month', 'week', 'day'];\n    const Navigation = () => {\n        return (\n            <Tabs className=\"tabs\">\n                {\n                    views.map(view => {\n                        return (\n                            <Item key={view}>\n                                <Button className={current === view ? 'active' : null}\n                                        onClick={() => viewChangeHandler(view)}>\n                                    {view}\n                                </Button>\n                            </Item>\n                        )\n                    })\n                }\n            </Tabs>\n        )\n    }\n\n    const handleNavigation = (action, date) => {\n        switch (action) {\n            case 'NEXT':\n                setCurrentDate(moment(currentDate).add(1, 'day').toDate());\n                break;\n            case 'PREV':\n                setCurrentDate(moment(currentDate).subtract(1, 'day').toDate());\n                break;\n            default:\n                setCurrentDate(date);\n        }\n    }\n\n    const handleDayClick = (date) => {\n        setCurrentDate(date);\n        viewChangeHandler('day');\n    }\n\n    const config = {\n        as: Calendar,\n        localizer: localizer,\n        startAccessor: 'start',\n        endAccessor: 'end',\n        views: views,\n        view: current,\n        date: currentDate,\n        onView: viewChangeHandler,\n        onNavigate: handleNavigation,\n        onDrillDown: (date) => handleDayClick(date),\n        events: type === 'doctor' ? events['doctor'] : current === 'day' ? events['patient'].general : events['patient'].disabled,\n        backgroundEvents: type === 'doctor' ? disabled : [],\n        min: moment().startOf('year').set({hour: 9, minute: 30}).toDate(),\n        max: moment().endOf('year').set({hour: 16, minute: 30}).toDate(),\n        timeslots: 1,\n        step: 30,\n        formats: {\n            dayHeaderFormat: width < 414 ? 'dddd, MMM DD' : 'dddd, MMMM DD',\n            dayFormat: getDayFormat(),\n            timeGutterFormat: 'HH:mm',\n        },\n        components: {\n            toolbar: ({label, date}) =>\n                <Header ref={headerRef} view={current}>\n                    {current === 'day' &&\n                        <DailyToolbar label={type === 'doctor' ? label : 'Daily appointments scheduler'}/>}\n                    <Navigation/>\n                    {current === 'day' && <DailyNavigation onNavigate={handleNavigation} date={date} label={label}/>}\n                    {current === 'week' && (\n                        <>\n                            {\n                                type === 'doctor' ?\n                                    <WeekSelector date={date} setter={setCurrentDate}/>\n                                    :\n                                    <DocSelect/>\n                            }\n                            <WeeklyNavigation date={date} setter={setCurrentDate}/>\n                        </>\n                    )}\n                    {current === 'month' && (\n                        <>\n                            {\n                                type === 'doctor' ?\n                                    <MonthSelector date={date} setter={setCurrentDate}/>\n                                    :\n                                    <DocSelect/>\n                            }\n                            <MonthlyNavigation date={date} setter={setCurrentDate}/>\n                        </>\n                    )}\n                </Header>,\n            event: ({event}) => <Event event={event} variant={current}/>,\n            timeSlotWrapper: (props) => TimeSlot(props, 30, 1, true),\n        },\n        className: `calendar-${current} calendar-${type}`,\n        messages: {\n            showMore: (total) => `+ ${total}`,\n        },\n        popup: true,\n        selectable: type === 'patient' && current !== 'day',\n        onSelectSlot: type === 'patient' && current !== 'day' && (() =>setPopupOpen(true))\n    }\n\n    return (\n        <>\n            <Container>\n                <StyledCalendar {...config} />\n                {\n                    type === 'patient' && current !== 'day' &&\n                    <DoctorPopup elemsHeight={height} name={selectedDoctor.label || null} open={popupOpen}\n                                 handler={setPopupOpen}/>\n                }\n            </Container>\n            <Footer ref={footerRef}>\n                <Legend>\n                    {\n                        colorTypes.map(({cat, color, label}) => {\n                            return (\n                                <LegendItem key={cat} color={color} legend={label}/>\n                            )\n                        })\n                    }\n                </Legend>\n            </Footer>\n        </>\n    )\n}\n\nAppointmentsCalendar.propTypes = {\n    type: PropTypes.oneOf(['doctor', 'patient']).isRequired,\n}\n\nexport default AppointmentsCalendar;","import {doctors} from '@db/doctors';\nimport Avatar from '@ui/Avatar';\n\nexport const tasksOptions = [\n    {value: 'work', label: 'Work'},\n    {value: 'travel', label: 'Travel'},\n    {value: 'family', label: 'Family'},\n    {value: 'other', label: 'Other'}\n]\n\nexport const depsOptions = [\n    {value: 'all', label: 'All Departments'},\n    {value: 'family', label: 'Family Doctors'},\n    {value: 'therapy', label: 'Therapists'},\n    {value: 'dent', label: 'Dentists'},\n    {value: 'cardio', label: 'Cardiologists'},\n]\n\nexport const testsOptions = [\n    {value: 'all', label: 'All My Tests'},\n    {value: 'blood', label: 'Blood Count'},\n    {value: 'xray', label: 'X-Ray'},\n    {value: 'ecg', label: 'ECG'},\n    {value: 'ct', label: 'CT Scan'},\n    {value: 'mri', label: 'MRI'},\n    {value: 'ultrasound', label: 'Ultrasound'},\n    {value: 'prenatal', label: 'Prenatal Testing'},\n]\n\nexport const doctorsOptions = () => {\n    let options = [];\n    doctors.forEach(doctor => {\n        options.push({\n            value: doctor.id,\n            label: <div className=\"user-option\">\n                <Avatar avatar={doctor.avatar} alt={doctor.name} size={40} />\n                <span>{doctor.name}</span>\n            </div>\n        });\n    });\n    return options;\n}","export function numFormatter(num) {\n    if (num > 999 && num < 1000000) {\n        return (num / 1000).toFixed(1) + 'k';\n    } else if (num > 1000000) {\n        return (num / 1000000).toFixed(1) + 'm';\n    } else if (num < 900) {\n        return num;\n    }\n}\n\nexport function addZero(num) {\n    return num < 10 ? '0' + num : num;\n}"],"names":["props","step","day","isRender","differenceMs","moment","value","isCurrentTimeSlot","hours","Date","getHours","minutes","getMinutes","currentTime","addZero","timeIndicator","className","children","_jsx","style","top","concat","indicatorPosition","minutesFromProps","Math","abs","calculateIndicatorPosition","cloneElement","_objectSpread","format","_ref","label","_Fragment","date","setter","calendarWeek","week","currentWeek","firstWeek","startOf","lastWeek","endOf","Navigator","handler","e","currentTarget","dataset","direction","subtract","toDate","add","text","prevDisabled","nextDisabled","options","getWeekArray","map","item","i","startLong","endLong","_useState","useState","_useState2","_slicedToArray","selected","setSelected","CustomSelect","variant","changeHandler","calendarMonth","month","currentMonth","getMonthArray","formatted","set","bg","theme","light","dark","Container","styled","div","withConfig","componentId","breakpoints","tablet","flex","between","dashed","dashed_dark","col","bodyBg","colors","blue","textSizes","fonts","accent","center","name","open","elemsHeight","ModalWindow","isVisible","visibilityHandler","_jsxs","ShapeButton","shape","icon","hour","index","Btn","disabled","start","minute","second","end","type","events","doctor","allDay","patient","general","viewChangeHandler","current","width","useWindowSize","localizer","momentLocalizer","footerRef","useRef","headerRef","height","setHeight","useEffect","offsetHeight","doctorsOptions","_useState3","_useState4","selectedDoctor","setSelectedDoctor","_useState5","_useState6","popupOpen","setPopupOpen","DocSelect","_useState7","_useState8","currentDate","setCurrentDate","views","Navigation","Tabs","view","Item","Button","onClick","handleNavigation","action","config","as","Calendar","startAccessor","endAccessor","onView","onNavigate","onDrillDown","handleDayClick","backgroundEvents","min","max","timeslots","formats","dayHeaderFormat","dayFormat","getDayFormat","timeGutterFormat","components","toolbar","_ref2","Header","ref","DailyToolbar","DailyNavigation","WeekSelector","WeeklyNavigation","MonthSelector","MonthlyNavigation","event","_ref3","Event","timeSlotWrapper","TimeSlot","messages","showMore","total","popup","selectable","onSelectSlot","StyledCalendar","DoctorPopup","Footer","Legend","colorTypes","_ref4","cat","color","LegendItem","legend","depsOptions","testsOptions","doctors","forEach","push","id","Avatar","avatar","alt","size","numFormatter","num","toFixed"],"sourceRoot":""}